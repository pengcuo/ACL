<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: SingleThreadScheduler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_single_thread_scheduler.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">SingleThreadScheduler Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Pool of threads to automatically split a kernel's execution among several threads.  
 <a href="classarm__compute_1_1_single_thread_scheduler.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_single_thread_scheduler_8h_source.xhtml">SingleThreadScheduler.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for SingleThreadScheduler:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_single_thread_scheduler__coll__graph.svg" width="180" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae64eebaa07f4d2da6cc2ba538c3cb095"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">set_num_threads</a> (unsigned int <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">num_threads</a>) override</td></tr>
<tr class="memdesc:ae64eebaa07f4d2da6cc2ba538c3cb095"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the number of threads the scheduler will use to run the kernels.  <a href="#ae64eebaa07f4d2da6cc2ba538c3cb095">More...</a><br /></td></tr>
<tr class="separator:ae64eebaa07f4d2da6cc2ba538c3cb095"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0da94220ee1e0f4928aa31ed0d4b30f7"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">num_threads</a> () const override</td></tr>
<tr class="memdesc:a0da94220ee1e0f4928aa31ed0d4b30f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of threads that the <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" title="Pool of threads to automatically split a kernel&#39;s execution among several threads.">SingleThreadScheduler</a> has, which is always 1.  <a href="#a0da94220ee1e0f4928aa31ed0d4b30f7">More...</a><br /></td></tr>
<tr class="separator:a0da94220ee1e0f4928aa31ed0d4b30f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d6828523921b7f9313f64c48550617f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml#a8d6828523921b7f9313f64c48550617f">schedule</a> (<a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a> *kernel, const <a class="el" href="classarm__compute_1_1_i_scheduler_1_1_hints.xhtml">Hints</a> &amp;hints) override</td></tr>
<tr class="memdesc:a8d6828523921b7f9313f64c48550617f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runs the kernel in the same thread as the caller synchronously.  <a href="#a8d6828523921b7f9313f64c48550617f">More...</a><br /></td></tr>
<tr class="separator:a8d6828523921b7f9313f64c48550617f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_scheduler"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_scheduler')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a></td></tr>
<tr class="memitem:a34956db09db14c551e9966c9b66036f9 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a34956db09db14c551e9966c9b66036f9">IScheduler</a> ()</td></tr>
<tr class="memdesc:a34956db09db14c551e9966c9b66036f9 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_i_scheduler.xhtml#a34956db09db14c551e9966c9b66036f9">More...</a><br /></td></tr>
<tr class="separator:a34956db09db14c551e9966c9b66036f9 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d209385481644d97e7ca96072b73eb8 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a6d209385481644d97e7ca96072b73eb8">~IScheduler</a> ()=default</td></tr>
<tr class="memdesc:a6d209385481644d97e7ca96072b73eb8 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_scheduler.xhtml#a6d209385481644d97e7ca96072b73eb8">More...</a><br /></td></tr>
<tr class="separator:a6d209385481644d97e7ca96072b73eb8 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3becf955da8cad5036399bcb90f1408d inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a3becf955da8cad5036399bcb90f1408d">run_tagged_workloads</a> (std::vector&lt; <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a4cdc00a99619ba76bf79a466cb85d4da">Workload</a> &gt; &amp;workloads, const char *tag)</td></tr>
<tr class="memdesc:a3becf955da8cad5036399bcb90f1408d inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute all the passed workloads.  <a href="classarm__compute_1_1_i_scheduler.xhtml#a3becf955da8cad5036399bcb90f1408d">More...</a><br /></td></tr>
<tr class="separator:a3becf955da8cad5036399bcb90f1408d inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0fd9e7b4f6240c55b4fe6a54d4418b5 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#ab0fd9e7b4f6240c55b4fe6a54d4418b5">cpu_info</a> ()</td></tr>
<tr class="memdesc:ab0fd9e7b4f6240c55b4fe6a54d4418b5 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get CPU info.  <a href="classarm__compute_1_1_i_scheduler.xhtml#ab0fd9e7b4f6240c55b4fe6a54d4418b5">More...</a><br /></td></tr>
<tr class="separator:ab0fd9e7b4f6240c55b4fe6a54d4418b5 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6de5358eb9a099cda48662b2fc523ec5 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a6de5358eb9a099cda48662b2fc523ec5">num_threads_hint</a> () const</td></tr>
<tr class="memdesc:a6de5358eb9a099cda48662b2fc523ec5 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a hint for the best possible number of execution threads.  <a href="classarm__compute_1_1_i_scheduler.xhtml#a6de5358eb9a099cda48662b2fc523ec5">More...</a><br /></td></tr>
<tr class="separator:a6de5358eb9a099cda48662b2fc523ec5 inherit pub_methods_classarm__compute_1_1_i_scheduler"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:adde335aa5c5b2fc7e07c1d2dc940bf8f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml">SingleThreadScheduler</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml#adde335aa5c5b2fc7e07c1d2dc940bf8f">get</a> ()</td></tr>
<tr class="memdesc:adde335aa5c5b2fc7e07c1d2dc940bf8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the scheduler singleton.  <a href="#adde335aa5c5b2fc7e07c1d2dc940bf8f">More...</a><br /></td></tr>
<tr class="separator:adde335aa5c5b2fc7e07c1d2dc940bf8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classarm__compute_1_1_i_scheduler"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classarm__compute_1_1_i_scheduler')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a></td></tr>
<tr class="memitem:ad3ab921e075d1edd827faf95870aa808 inherit pub_types_classarm__compute_1_1_i_scheduler"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#ad3ab921e075d1edd827faf95870aa808">StrategyHint</a> { <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#ad3ab921e075d1edd827faf95870aa808afe6f99ef1ec99efbdc19a9786cf1facc">STATIC</a>, 
<a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#ad3ab921e075d1edd827faf95870aa808a0fcc90da4811c877ba9f9c12f7d60bc9">DYNAMIC</a>
 }</td></tr>
<tr class="memdesc:ad3ab921e075d1edd827faf95870aa808"><td class="mdescLeft">&#160;</td><td class="mdescRight">Strategies available to split a workload.  <a href="classarm__compute_1_1_i_scheduler.xhtml#ad3ab921e075d1edd827faf95870aa808">More...</a><br /></td></tr>
<tr class="separator:ad3ab921e075d1edd827faf95870aa808 inherit pub_types_classarm__compute_1_1_i_scheduler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cdc00a99619ba76bf79a466cb85d4da inherit pub_types_classarm__compute_1_1_i_scheduler"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a4cdc00a99619ba76bf79a466cb85d4da">Workload</a> = std::function&lt; void(const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;)&gt;</td></tr>
<tr class="memdesc:a4cdc00a99619ba76bf79a466cb85d4da inherit pub_types_classarm__compute_1_1_i_scheduler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Signature for the workloads to execute.  <a href="classarm__compute_1_1_i_scheduler.xhtml#a4cdc00a99619ba76bf79a466cb85d4da">More...</a><br /></td></tr>
<tr class="separator:a4cdc00a99619ba76bf79a466cb85d4da inherit pub_types_classarm__compute_1_1_i_scheduler"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Pool of threads to automatically split a kernel's execution among several threads. </p>

<p class="definition">Definition at line <a class="el" href="_single_thread_scheduler_8h_source.xhtml#l00032">32</a> of file <a class="el" href="_single_thread_scheduler_8h_source.xhtml">SingleThreadScheduler.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="adde335aa5c5b2fc7e07c1d2dc940bf8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adde335aa5c5b2fc7e07c1d2dc940bf8f">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml">SingleThreadScheduler</a> &amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access the scheduler singleton. </p>
<dl class="section return"><dt>Returns</dt><dd>The scheduler </dd></dl>

<p class="definition">Definition at line <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml">SingleThreadScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">static</span> SingleThreadScheduler scheduler;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">return</span> scheduler;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_scheduler_8cpp_source.xhtml#l00096">Scheduler::get()</a>.</p>

</div>
</div>
<a id="a0da94220ee1e0f4928aa31ed0d4b30f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0da94220ee1e0f4928aa31ed0d4b30f7">&#9670;&nbsp;</a></span>num_threads()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int num_threads </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of threads that the <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" title="Pool of threads to automatically split a kernel&#39;s execution among several threads.">SingleThreadScheduler</a> has, which is always 1. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of threads available in <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" title="Pool of threads to automatically split a kernel&#39;s execution among several threads.">SingleThreadScheduler</a>. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#ac24584a63e484123e3756d1b2a1c9e2f">IScheduler</a>.</p>

<p class="definition">Definition at line <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml">SingleThreadScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00038">SingleThreadScheduler::set_num_threads()</a>.</p>

</div>
</div>
<a id="a8d6828523921b7f9313f64c48550617f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d6828523921b7f9313f64c48550617f">&#9670;&nbsp;</a></span>schedule()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void schedule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a> *&#160;</td>
          <td class="paramname"><em>kernel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_scheduler_1_1_hints.xhtml">Hints</a> &amp;&#160;</td>
          <td class="paramname"><em>hints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Runs the kernel in the same thread as the caller synchronously. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to execute. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hints</td><td>Hints for the scheduler. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">IScheduler</a>.</p>

<p class="definition">Definition at line <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml">SingleThreadScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(hints);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    ThreadInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>.cpu_info = &amp;_cpu_info;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    kernel-&gt;run(kernel-&gt;window(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00160">Error.h:160</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">ConvolutionLayer.cpp:174</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00160">ARM_COMPUTE_UNUSED</a>, <a class="el" href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">arm_compute::test::validation::info</a>, <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">ICPPKernel::run()</a>, and <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">IKernel::window()</a>.</p>

</div>
</div>
<a id="ae64eebaa07f4d2da6cc2ba538c3cb095"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae64eebaa07f4d2da6cc2ba538c3cb095">&#9670;&nbsp;</a></span>set_num_threads()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_num_threads </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num_threads</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the number of threads the scheduler will use to run the kernels. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_threads</td><td>This is ignored for this scheduler as the number of threads is always one. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a645ac2d9d4144fd0174296de7eb1e1b5">IScheduler</a>.</p>

<p class="definition">Definition at line <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml">SingleThreadScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="classarm__compute_1_1_single_thread_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">num_threads</a>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="classarm__compute_1_1_single_thread_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">num_threads</a> != 1);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_single_thread_scheduler_xhtml_a0da94220ee1e0f4928aa31ed0d4b30f7"><div class="ttname"><a href="classarm__compute_1_1_single_thread_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">arm_compute::SingleThreadScheduler::num_threads</a></div><div class="ttdeci">unsigned int num_threads() const override</div><div class="ttdoc">Returns the number of threads that the SingleThreadScheduler has, which is always 1.</div><div class="ttdef"><b>Definition:</b> <a href="_single_thread_scheduler_8cpp_source.xhtml#l00061">SingleThreadScheduler.cpp:61</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00337">Error.h:337</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00160">Error.h:160</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00337">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00160">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00061">SingleThreadScheduler::num_threads()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/<a class="el" href="_single_thread_scheduler_8h_source.xhtml">SingleThreadScheduler.h</a></li>
<li>src/runtime/CPP/<a class="el" href="_single_thread_scheduler_8cpp_source.xhtml">SingleThreadScheduler.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml">SingleThreadScheduler</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
