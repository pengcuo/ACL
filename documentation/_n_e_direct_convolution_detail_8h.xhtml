<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/NEON/kernels/detail/NEDirectConvolutionDetail.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_direct_convolution_detail_8h.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">NEDirectConvolutionDetail.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_access_window_static_8h_source.xhtml">arm_compute/core/AccessWindowStatic.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_fixed_point_8h_source.xhtml">arm_compute/core/NEON/NEFixedPoint.h</a>&quot;</code><br />
<code>#include &lt;arm_neon.h&gt;</code><br />
</div>
<p><a href="_n_e_direct_convolution_detail_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2018 ARM Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1detail"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml">arm_compute::detail</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5db34f1ae85326efebbe1dadb65f0301"><td class="memItemLeft" align="right" valign="top">float32x4x3_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a5db34f1ae85326efebbe1dadb65f0301">load_matrix_row</a> (const float *ptr, int weights_offset=0)</td></tr>
<tr class="memdesc:a5db34f1ae85326efebbe1dadb65f0301"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a 3x3 matrix as a row (float).  <a href="namespacearm__compute_1_1detail.xhtml#a5db34f1ae85326efebbe1dadb65f0301">More...</a><br /></td></tr>
<tr class="separator:a5db34f1ae85326efebbe1dadb65f0301"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b01a1b2b7bd61029dfaa8601b23b4fc"><td class="memItemLeft" align="right" valign="top">int32x4x3_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a8b01a1b2b7bd61029dfaa8601b23b4fc">load_matrix_row</a> (const uint8_t *ptr, int weights_offset=0)</td></tr>
<tr class="memdesc:a8b01a1b2b7bd61029dfaa8601b23b4fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a 3x3 matrix as a row (uint8_t).  <a href="namespacearm__compute_1_1detail.xhtml#a8b01a1b2b7bd61029dfaa8601b23b4fc">More...</a><br /></td></tr>
<tr class="separator:a8b01a1b2b7bd61029dfaa8601b23b4fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a703f0d5487e077348c2ac6bce80d9abb"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a703f0d5487e077348c2ac6bce80d9abb">single_convolve_3x3_dilation</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, const size_t dilation_x, int input_offset)</td></tr>
<tr class="memdesc:a703f0d5487e077348c2ac6bce80d9abb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a 3x3 convolution for 4 consecutive elements on float32 when dilation.x() or dilation.y() is not 1.  <a href="namespacearm__compute_1_1detail.xhtml#a703f0d5487e077348c2ac6bce80d9abb">More...</a><br /></td></tr>
<tr class="separator:a703f0d5487e077348c2ac6bce80d9abb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaddda26efa47a7ae48a99cb9e0da5ded"><td class="memTemplParams" colspan="2">template&lt;unsigned int stridex&gt; </td></tr>
<tr class="memitem:aaddda26efa47a7ae48a99cb9e0da5ded"><td class="memTemplItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#aaddda26efa47a7ae48a99cb9e0da5ded">convolve_3x3_dilation</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, const size_t dilation_x, int input_offset=0)</td></tr>
<tr class="memdesc:aaddda26efa47a7ae48a99cb9e0da5ded"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a 3x3 convolution for 8 consecutive elements on float32 when dilation.x() or dilation.y() is not 1.  <a href="namespacearm__compute_1_1detail.xhtml#aaddda26efa47a7ae48a99cb9e0da5ded">More...</a><br /></td></tr>
<tr class="separator:aaddda26efa47a7ae48a99cb9e0da5ded"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae95441c4b3e7ac3b5ee380d0eee08309"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ae95441c4b3e7ac3b5ee380d0eee08309"><td class="memTemplItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ae95441c4b3e7ac3b5ee380d0eee08309">convolve_3x3_dilation&lt; 1 &gt;</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, const size_t dilation_x, int input_offset)</td></tr>
<tr class="separator:ae95441c4b3e7ac3b5ee380d0eee08309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8e9c2fce033617e1f841c0e86704710"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:aa8e9c2fce033617e1f841c0e86704710"><td class="memTemplItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#aa8e9c2fce033617e1f841c0e86704710">convolve_3x3_dilation&lt; 2 &gt;</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, const size_t dilation_x, int input_offset)</td></tr>
<tr class="separator:aa8e9c2fce033617e1f841c0e86704710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2ce72e1df5c799c83fdec8bb7042eef"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ad2ce72e1df5c799c83fdec8bb7042eef"><td class="memTemplItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ad2ce72e1df5c799c83fdec8bb7042eef">convolve_3x3_dilation&lt; 3 &gt;</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, const size_t dilation_x, int input_offset)</td></tr>
<tr class="separator:ad2ce72e1df5c799c83fdec8bb7042eef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e0f54a3b96d13df284f298349c0665a"><td class="memTemplParams" colspan="2">template&lt;unsigned int stridex&gt; </td></tr>
<tr class="memitem:a5e0f54a3b96d13df284f298349c0665a"><td class="memTemplItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a5e0f54a3b96d13df284f298349c0665a">convolve_3x3</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, int input_offset=0)</td></tr>
<tr class="memdesc:a5e0f54a3b96d13df284f298349c0665a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a convolve3x3 on float32.  <a href="namespacearm__compute_1_1detail.xhtml#a5e0f54a3b96d13df284f298349c0665a">More...</a><br /></td></tr>
<tr class="separator:a5e0f54a3b96d13df284f298349c0665a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94d43dcfc4944b248483b487ff09ef91"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a94d43dcfc4944b248483b487ff09ef91"><td class="memTemplItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a94d43dcfc4944b248483b487ff09ef91">convolve_3x3&lt; 1 &gt;</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, int input_offset)</td></tr>
<tr class="separator:a94d43dcfc4944b248483b487ff09ef91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7e696498dc262dc55dc90e8d4a2fc77"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ab7e696498dc262dc55dc90e8d4a2fc77"><td class="memTemplItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ab7e696498dc262dc55dc90e8d4a2fc77">convolve_3x3&lt; 2 &gt;</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, int input_offset)</td></tr>
<tr class="separator:ab7e696498dc262dc55dc90e8d4a2fc77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6bd0765ae4fac0ff4373d4e3877a759"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ad6bd0765ae4fac0ff4373d4e3877a759"><td class="memTemplItemLeft" align="right" valign="top">float32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ad6bd0765ae4fac0ff4373d4e3877a759">convolve_3x3&lt; 3 &gt;</a> (const float *in_top, const float *in_mid, const float *in_low, const float32x4x3_t &amp;m0, const float32x4x3_t &amp;m1, const float32x4x3_t &amp;m2, int input_offset)</td></tr>
<tr class="separator:ad6bd0765ae4fac0ff4373d4e3877a759"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab981d9f1da663b405c24281bfd04b896"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ab981d9f1da663b405c24281bfd04b896">single_convolve_3x3_dilation</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, size_t dilation_x, int input_offset)</td></tr>
<tr class="memdesc:ab981d9f1da663b405c24281bfd04b896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a 3x3 convolution for 4 consecutive elements on uint8_t when dilation.x() or dilation.y() is not 1.  <a href="namespacearm__compute_1_1detail.xhtml#ab981d9f1da663b405c24281bfd04b896">More...</a><br /></td></tr>
<tr class="separator:ab981d9f1da663b405c24281bfd04b896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3da1e0c8d95c655479b6195d380f41e"><td class="memTemplParams" colspan="2">template&lt;unsigned int stridex&gt; </td></tr>
<tr class="memitem:ae3da1e0c8d95c655479b6195d380f41e"><td class="memTemplItemLeft" align="right" valign="top">int32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ae3da1e0c8d95c655479b6195d380f41e">convolve_3x3_dilation</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, const size_t dilation_x, int input_offset)</td></tr>
<tr class="memdesc:ae3da1e0c8d95c655479b6195d380f41e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a 3x3 convolution for 4 consecutive elements on uint8_t when dilation.x() or dilation.y() is not 1.  <a href="namespacearm__compute_1_1detail.xhtml#ae3da1e0c8d95c655479b6195d380f41e">More...</a><br /></td></tr>
<tr class="separator:ae3da1e0c8d95c655479b6195d380f41e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae59b420eeccce8559edf150ecf9d5fdd"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ae59b420eeccce8559edf150ecf9d5fdd"><td class="memTemplItemLeft" align="right" valign="top">int32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ae59b420eeccce8559edf150ecf9d5fdd">convolve_3x3_dilation&lt; 1 &gt;</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, const size_t dilation_x, int input_offset)</td></tr>
<tr class="separator:ae59b420eeccce8559edf150ecf9d5fdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93001798dca50920585380cf5ae07a75"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a93001798dca50920585380cf5ae07a75"><td class="memTemplItemLeft" align="right" valign="top">int32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a93001798dca50920585380cf5ae07a75">convolve_3x3_dilation&lt; 2 &gt;</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, const size_t dilation_x, int input_offset)</td></tr>
<tr class="separator:a93001798dca50920585380cf5ae07a75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7fcd4c55c1214b2514b8b695c56424f"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ad7fcd4c55c1214b2514b8b695c56424f"><td class="memTemplItemLeft" align="right" valign="top">int32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ad7fcd4c55c1214b2514b8b695c56424f">convolve_3x3_dilation&lt; 3 &gt;</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, const size_t dilation_x, int input_offset)</td></tr>
<tr class="separator:ad7fcd4c55c1214b2514b8b695c56424f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0041ff0a5f1d498c9275977cd93ef2cc"><td class="memTemplParams" colspan="2">template&lt;unsigned int stridex&gt; </td></tr>
<tr class="memitem:a0041ff0a5f1d498c9275977cd93ef2cc"><td class="memTemplItemLeft" align="right" valign="top">int32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a0041ff0a5f1d498c9275977cd93ef2cc">convolve_3x3</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, int input_offset)</td></tr>
<tr class="memdesc:a0041ff0a5f1d498c9275977cd93ef2cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a convolve3x3 on uint8_t.  <a href="namespacearm__compute_1_1detail.xhtml#a0041ff0a5f1d498c9275977cd93ef2cc">More...</a><br /></td></tr>
<tr class="separator:a0041ff0a5f1d498c9275977cd93ef2cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a740f46fcde6fabd70afc176fac5950bf"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a740f46fcde6fabd70afc176fac5950bf"><td class="memTemplItemLeft" align="right" valign="top">int32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a740f46fcde6fabd70afc176fac5950bf">convolve_3x3&lt; 1 &gt;</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, int input_offset)</td></tr>
<tr class="separator:a740f46fcde6fabd70afc176fac5950bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aabdc940ba98f3b2c5a0e573cac8bcc"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a2aabdc940ba98f3b2c5a0e573cac8bcc"><td class="memTemplItemLeft" align="right" valign="top">int32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a2aabdc940ba98f3b2c5a0e573cac8bcc">convolve_3x3&lt; 2 &gt;</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, int input_offset)</td></tr>
<tr class="separator:a2aabdc940ba98f3b2c5a0e573cac8bcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ebd967ad3ef1c2fcfaed80cab10567"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a96ebd967ad3ef1c2fcfaed80cab10567"><td class="memTemplItemLeft" align="right" valign="top">int32x4x2_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a96ebd967ad3ef1c2fcfaed80cab10567">convolve_3x3&lt; 3 &gt;</a> (const uint8_t *in_top, const uint8_t *in_mid, const uint8_t *in_low, const int32x4x3_t &amp;m0, const int32x4x3_t &amp;m1, const int32x4x3_t &amp;m2, int input_offset)</td></tr>
<tr class="separator:a96ebd967ad3ef1c2fcfaed80cab10567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ac67082e6f68cb7ed1939240fb6bdb5"><td class="memTemplParams" colspan="2">template&lt;unsigned int stridex&gt; </td></tr>
<tr class="memitem:a1ac67082e6f68cb7ed1939240fb6bdb5"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a1ac67082e6f68cb7ed1939240fb6bdb5">store_results</a> (float *buffer, const float32x4x2_t &amp;values)</td></tr>
<tr class="memdesc:a1ac67082e6f68cb7ed1939240fb6bdb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores a float32x4x2_t array into a memory location.  <a href="namespacearm__compute_1_1detail.xhtml#a1ac67082e6f68cb7ed1939240fb6bdb5">More...</a><br /></td></tr>
<tr class="separator:a1ac67082e6f68cb7ed1939240fb6bdb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad61a01ef06cc3c41e4bb5006d9307687"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ad61a01ef06cc3c41e4bb5006d9307687"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ad61a01ef06cc3c41e4bb5006d9307687">store_results&lt; 1 &gt;</a> (float *buffer, const float32x4x2_t &amp;values)</td></tr>
<tr class="separator:ad61a01ef06cc3c41e4bb5006d9307687"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaf3037739c190361ad3f827d73440a1"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:abaf3037739c190361ad3f827d73440a1"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#abaf3037739c190361ad3f827d73440a1">store_results&lt; 2 &gt;</a> (float *buffer, const float32x4x2_t &amp;values)</td></tr>
<tr class="separator:abaf3037739c190361ad3f827d73440a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a208468ac4ffbfe19d7fb03402ca927f6"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a208468ac4ffbfe19d7fb03402ca927f6"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a208468ac4ffbfe19d7fb03402ca927f6">store_results&lt; 3 &gt;</a> (float *buffer, const float32x4x2_t &amp;values)</td></tr>
<tr class="separator:a208468ac4ffbfe19d7fb03402ca927f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9f26cd83047a111336033fb7466faf1"><td class="memTemplParams" colspan="2">template&lt;unsigned int stridex&gt; </td></tr>
<tr class="memitem:aa9f26cd83047a111336033fb7466faf1"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#aa9f26cd83047a111336033fb7466faf1">store_results</a> (int32_t *buffer, const int32x4x2_t &amp;values)</td></tr>
<tr class="memdesc:aa9f26cd83047a111336033fb7466faf1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores a uint32_t array into a memory location.  <a href="namespacearm__compute_1_1detail.xhtml#aa9f26cd83047a111336033fb7466faf1">More...</a><br /></td></tr>
<tr class="separator:aa9f26cd83047a111336033fb7466faf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a143f43b1fb56a8d806145e95d4c3995e"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a143f43b1fb56a8d806145e95d4c3995e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a143f43b1fb56a8d806145e95d4c3995e">store_results&lt; 1 &gt;</a> (int32_t *buffer, const int32x4x2_t &amp;values)</td></tr>
<tr class="separator:a143f43b1fb56a8d806145e95d4c3995e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af63e34203346681c35b68fcca2026a06"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:af63e34203346681c35b68fcca2026a06"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#af63e34203346681c35b68fcca2026a06">store_results&lt; 2 &gt;</a> (int32_t *buffer, const int32x4x2_t &amp;values)</td></tr>
<tr class="separator:af63e34203346681c35b68fcca2026a06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a991bde46f2841422fb98258127305050"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a991bde46f2841422fb98258127305050"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a991bde46f2841422fb98258127305050">store_results&lt; 3 &gt;</a> (int32_t *buffer, const int32x4x2_t &amp;values)</td></tr>
<tr class="separator:a991bde46f2841422fb98258127305050"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30f6368deaea5f10f9dd1bbaa28c24e6"><td class="memTemplParams" colspan="2">template&lt;unsigned int stridex&gt; </td></tr>
<tr class="memitem:a30f6368deaea5f10f9dd1bbaa28c24e6"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a30f6368deaea5f10f9dd1bbaa28c24e6">get_input_num_elems_processed</a> (unsigned int num_elems_written_per_iteration)</td></tr>
<tr class="memdesc:a30f6368deaea5f10f9dd1bbaa28c24e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of elements processed on 3x3 convolution.  <a href="namespacearm__compute_1_1detail.xhtml#a30f6368deaea5f10f9dd1bbaa28c24e6">More...</a><br /></td></tr>
<tr class="separator:a30f6368deaea5f10f9dd1bbaa28c24e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a08a003e6ce7ea86cb7d8f4523c0eb5"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a7a08a003e6ce7ea86cb7d8f4523c0eb5"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a7a08a003e6ce7ea86cb7d8f4523c0eb5">get_input_num_elems_processed&lt; 1 &gt;</a> (unsigned int num_elems_written_per_iteration)</td></tr>
<tr class="separator:a7a08a003e6ce7ea86cb7d8f4523c0eb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbdb2272e2409d0c249ba467eaac81ea"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:adbdb2272e2409d0c249ba467eaac81ea"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#adbdb2272e2409d0c249ba467eaac81ea">get_input_num_elems_processed&lt; 2 &gt;</a> (unsigned int num_elems_written_per_iteration)</td></tr>
<tr class="separator:adbdb2272e2409d0c249ba467eaac81ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2a6fee9c18f26a5fab56c2d14289705"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ae2a6fee9c18f26a5fab56c2d14289705"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#ae2a6fee9c18f26a5fab56c2d14289705">get_input_num_elems_processed&lt; 3 &gt;</a> (unsigned int num_elems_written_per_iteration)</td></tr>
<tr class="separator:ae2a6fee9c18f26a5fab56c2d14289705"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17a8ccb1f281296a0ee7eb00693febbd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1detail.xhtml#a17a8ccb1f281296a0ee7eb00693febbd">get_input_num_elems_processed</a> (unsigned int num_elems_written_per_iteration, unsigned int stridex)</td></tr>
<tr class="separator:a17a8ccb1f281296a0ee7eb00693febbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_315f6cf1ec0b2df3ae747ff8286a19f5.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_2c3c4cb85e732569e2614ad40a451d53.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_6b58bd0be07bddcf3022ab9b026cbf38.xhtml">detail</a></li><li class="navelem"><a class="el" href="_n_e_direct_convolution_detail_8h.xhtml">NEDirectConvolutionDetail.h</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:29 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
