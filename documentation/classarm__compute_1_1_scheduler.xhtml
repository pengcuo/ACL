<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Scheduler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_scheduler.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Scheduler Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Configurable scheduler which supports multiple multithreading APIs and choosing between different schedulers at runtime.  
 <a href="classarm__compute_1_1_scheduler.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_scheduler_8h_source.xhtml">Scheduler.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a1d1cfd8ffb84e947f82999c682b666a7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a> { <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8">ST</a>, 
<a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e">CPP</a>, 
<a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f">OMP</a>, 
<a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">CUSTOM</a>
 }</td></tr>
<tr class="memdesc:a1d1cfd8ffb84e947f82999c682b666a7"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> type.  <a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">More...</a><br /></td></tr>
<tr class="separator:a1d1cfd8ffb84e947f82999c682b666a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ad2fc671b2772dd9e28b81cf0e2514e85"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#ad2fc671b2772dd9e28b81cf0e2514e85">set</a> (std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> &gt; scheduler)</td></tr>
<tr class="memdesc:ad2fc671b2772dd9e28b81cf0e2514e85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the user defined scheduler and makes it the active scheduler.  <a href="#ad2fc671b2772dd9e28b81cf0e2514e85">More...</a><br /></td></tr>
<tr class="separator:ad2fc671b2772dd9e28b81cf0e2514e85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d63ca713bab377aabcfb63c192b8429"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">get</a> ()</td></tr>
<tr class="memdesc:a0d63ca713bab377aabcfb63c192b8429"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the scheduler singleton.  <a href="#a0d63ca713bab377aabcfb63c192b8429">More...</a><br /></td></tr>
<tr class="separator:a0d63ca713bab377aabcfb63c192b8429"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9792282edd343320061f7acac8e04e4b"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#a9792282edd343320061f7acac8e04e4b">set</a> (<a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a> t)</td></tr>
<tr class="memdesc:a9792282edd343320061f7acac8e04e4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the active scheduler.  <a href="#a9792282edd343320061f7acac8e04e4b">More...</a><br /></td></tr>
<tr class="separator:a9792282edd343320061f7acac8e04e4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f9e730c935124966325cd7c794d3153"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#a3f9e730c935124966325cd7c794d3153">get_type</a> ()</td></tr>
<tr class="memdesc:a3f9e730c935124966325cd7c794d3153"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the active scheduler.  <a href="#a3f9e730c935124966325cd7c794d3153">More...</a><br /></td></tr>
<tr class="separator:a3f9e730c935124966325cd7c794d3153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec4d18b67c8b6ba13485ec9b17de0ef8"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#aec4d18b67c8b6ba13485ec9b17de0ef8">is_available</a> (<a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a> t)</td></tr>
<tr class="memdesc:aec4d18b67c8b6ba13485ec9b17de0ef8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the given scheduler type is supported.  <a href="#aec4d18b67c8b6ba13485ec9b17de0ef8">More...</a><br /></td></tr>
<tr class="separator:aec4d18b67c8b6ba13485ec9b17de0ef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Configurable scheduler which supports multiple multithreading APIs and choosing between different schedulers at runtime. </p>

<p class="definition">Definition at line <a class="el" href="_scheduler_8h_source.xhtml#l00033">33</a> of file <a class="el" href="_scheduler_8h_source.xhtml">Scheduler.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a1d1cfd8ffb84e947f82999c682b666a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d1cfd8ffb84e947f82999c682b666a7">&#9670;&nbsp;</a></span>Type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> type. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8"></a>ST&#160;</td><td class="fielddoc"><p>Single thread. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e"></a>CPP&#160;</td><td class="fielddoc"><p>C++11 threads. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f"></a>OMP&#160;</td><td class="fielddoc"><p>OpenMP. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818"></a>CUSTOM&#160;</td><td class="fielddoc"><p>Provided by the user. </p>
</td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_scheduler_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_scheduler_8h_source.xhtml">Scheduler.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        ST,    </div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        CPP,   </div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        OMP,   </div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        CUSTOM </div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0d63ca713bab377aabcfb63c192b8429"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d63ca713bab377aabcfb63c192b8429">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> &amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access the scheduler singleton. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to the scheduler object. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_scheduler_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_scheduler_8cpp_source.xhtml">Scheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">switch</span>(_scheduler_type)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8">Type::ST</a>:</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_single_thread_scheduler.xhtml#adde335aa5c5b2fc7e07c1d2dc940bf8f">SingleThreadScheduler::get</a>();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e">Type::CPP</a>:</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">#if ARM_COMPUTE_CPP_SCHEDULER</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#a29866c2e410a715d736ec447b986df78">CPPScheduler::get</a>();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* ARM_COMPUTE_CPP_SCHEDULER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Recompile with cppthreads=1 to use C++11 scheduler.&quot;</span>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CPP_SCHEDULER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f">Type::OMP</a>:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#if ARM_COMPUTE_OPENMP_SCHEDULER</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_o_m_p_scheduler.xhtml#ae2c66b86cdc38931af9c49a58e03d692">OMPScheduler::get</a>();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* ARM_COMPUTE_OPENMP_SCHEDULER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Recompile with openmp=1 to use openmp scheduler.&quot;</span>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_OPENMP_SCHEDULER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">Type::CUSTOM</a>:</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">if</span>(_custom_scheduler == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;No custom scheduler has been setup. Call set(std::shared_ptr&lt;IScheduler&gt; &amp;scheduler) before Scheduler::get()&quot;</span>);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <span class="keywordflow">return</span> *_custom_scheduler;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Invalid Scheduler type&quot;</span>);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_single_thread_scheduler.xhtml#adde335aa5c5b2fc7e07c1d2dc940bf8f">SingleThreadScheduler::get</a>();</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_p_p_scheduler_xhtml_a29866c2e410a715d736ec447b986df78"><div class="ttname"><a href="classarm__compute_1_1_c_p_p_scheduler.xhtml#a29866c2e410a715d736ec447b986df78">arm_compute::CPPScheduler::get</a></div><div class="ttdeci">static CPPScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_scheduler_8cpp_source.xhtml#l00212">CPPScheduler.cpp:212</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f">arm_compute::Scheduler::Type::OMP</a></div><div class="ttdoc">OpenMP.</div></div>
<div class="ttc" id="classarm__compute_1_1_single_thread_scheduler_xhtml_adde335aa5c5b2fc7e07c1d2dc940bf8f"><div class="ttname"><a href="classarm__compute_1_1_single_thread_scheduler.xhtml#adde335aa5c5b2fc7e07c1d2dc940bf8f">arm_compute::SingleThreadScheduler::get</a></div><div class="ttdeci">static SingleThreadScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_single_thread_scheduler_8cpp_source.xhtml#l00032">SingleThreadScheduler.cpp:32</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8">arm_compute::Scheduler::Type::ST</a></div><div class="ttdoc">Single thread.</div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">arm_compute::Scheduler::Type::CUSTOM</a></div><div class="ttdoc">Provided by the user.</div></div>
<div class="ttc" id="classarm__compute_1_1_o_m_p_scheduler_xhtml_ae2c66b86cdc38931af9c49a58e03d692"><div class="ttname"><a href="classarm__compute_1_1_o_m_p_scheduler.xhtml#ae2c66b86cdc38931af9c49a58e03d692">arm_compute::OMPScheduler::get</a></div><div class="ttdeci">static OMPScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_o_m_p_scheduler_8cpp_source.xhtml#l00036">OMPScheduler.cpp:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e">arm_compute::Scheduler::Type::CPP</a></div><div class="ttdoc">C++11 threads.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e">Scheduler::CPP</a>, <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">Scheduler::CUSTOM</a>, <a class="el" href="_o_m_p_scheduler_8cpp_source.xhtml#l00036">OMPScheduler::get()</a>, <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00032">SingleThreadScheduler::get()</a>, <a class="el" href="_c_p_p_scheduler_8cpp_source.xhtml#l00212">CPPScheduler::get()</a>, <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f">Scheduler::OMP</a>, and <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8">Scheduler::ST</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_histogram_8cpp_source.xhtml#l00041">NEHistogram::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00267">NEDepthwiseConvolutionAssemblyDispatch::configure()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00244">NEWinogradConvolutionLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_interleaved_wrapper_8cpp_source.xhtml#l00342">NEGEMMInterleavedWrapper::configure()</a>, <a class="el" href="main_8cpp_source.xhtml#l00090">main()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00663">NEWinogradConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_locally_connected_layer_8cpp_source.xhtml#l00183">NELocallyConnectedLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00273">NEGEMM::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00420">NEGEMMLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00234">NEDeconvolutionLayer::prepare()</a>, <a class="el" href="_n_e_g_e_m_m_interleaved_wrapper_8cpp_source.xhtml#l00196">NEGEMMInterleavedWrapper::prepare()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l01011">NEDepthwiseConvolutionLayer::prepare()</a>, <a class="el" href="_i_n_e_simple_function_no_border_8cpp_source.xhtml#l00035">INESimpleFunctionNoBorder::run()</a>, <a class="el" href="_i_c_p_p_simple_function_8cpp_source.xhtml#l00035">ICPPSimpleFunction::run()</a>, <a class="el" href="_i_n_e_simple_function_8cpp_source.xhtml#l00036">INESimpleFunction::run()</a>, <a class="el" href="_n_e_simple_assembly_function_8cpp_source.xhtml#l00036">NESimpleAssemblyFunction::run()</a>, <a class="el" href="_n_e_histogram_8cpp_source.xhtml#l00054">NEHistogram::run()</a>, <a class="el" href="_n_e_fill_border_8cpp_source.xhtml#l00036">NEFillBorder::run()</a>, <a class="el" href="_n_e_mean_std_dev_8cpp_source.xhtml#l00041">NEMeanStdDev::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_assembly_matrix_multiply_core_8cpp_source.xhtml#l00118">NEGEMMLowpAssemblyMatrixMultiplyCore::run()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_8cpp_source.xhtml#l00045">NEConvertFullyConnectedWeights::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_8cpp_source.xhtml#l00096">NEHOGDescriptor::run()</a>, <a class="el" href="_n_e_derivative_8cpp_source.xhtml#l00048">NEDerivative::run()</a>, <a class="el" href="_n_e_equalize_histogram_8cpp_source.xhtml#l00052">NEEqualizeHistogram::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_8cpp_source.xhtml#l00042">NEROIPoolingLayer::run()</a>, <a class="el" href="_n_e_min_max_location_8cpp_source.xhtml#l00041">NEMinMaxLocation::run()</a>, <a class="el" href="_n_e_h_o_g_gradient_8cpp_source.xhtml#l00081">NEHOGGradient::run()</a>, <a class="el" href="_n_e_range_8cpp_source.xhtml#l00045">NERange::run()</a>, <a class="el" href="_n_e_gaussian5x5_8cpp_source.xhtml#l00058">NEGaussian5x5::run()</a>, <a class="el" href="_n_e_upsample_layer_8cpp_source.xhtml#l00047">NEUpsampleLayer::run()</a>, <a class="el" href="_n_e_sobel7x7_8cpp_source.xhtml#l00080">NESobel7x7::run()</a>, <a class="el" href="_n_e_sobel5x5_8cpp_source.xhtml#l00080">NESobel5x5::run()</a>, <a class="el" href="_n_e_arg_min_max_layer_8cpp_source.xhtml#l00058">NEArgMinMaxLayer::run()</a>, <a class="el" href="_n_e_reduction_operation_8cpp_source.xhtml#l00157">NEReductionOperation::run()</a>, <a class="el" href="_n_e_pooling_layer_8cpp_source.xhtml#l00075">NEPoolingLayer::run()</a>, <a class="el" href="_n_e_fast_corners_8cpp_source.xhtml#l00092">NEFastCorners::run()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00127">NEFFT1D::run()</a>, <a class="el" href="_n_e_l2_normalize_layer_8cpp_source.xhtml#l00076">NEL2NormalizeLayer::run()</a>, <a class="el" href="_n_e_stack_layer_8cpp_source.xhtml#l00080">NEStackLayer::run()</a>, <a class="el" href="_n_e_space_to_depth_layer_8cpp_source.xhtml#l00052">NESpaceToDepthLayer::run()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00087">NEConvolutionLayerReshapeWeights::run()</a>, <a class="el" href="_n_e_im2_col_8cpp_source.xhtml#l00050">NEIm2Col::run()</a>, <a class="el" href="_n_e_normalization_layer_8cpp_source.xhtml#l00070">NENormalizationLayer::run()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00288">NEPadLayer::run()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00225">NEScale::run()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00520">NEWinogradConvolutionLayer::run()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00103">NERNNLayer::run()</a>, <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00177">NEConcatenateLayer::run()</a>, <a class="el" href="_n_e_canny_edge_8cpp_source.xhtml#l00161">NECannyEdge::run()</a>, <a class="el" href="_n_e_batch_normalization_layer_8cpp_source.xhtml#l00054">NEBatchNormalizationLayer::run()</a>, <a class="el" href="_n_e_optical_flow_8cpp_source.xhtml#l00125">NEOpticalFlow::run()</a>, <a class="el" href="_c_l_harris_corners_8cpp_source.xhtml#l00158">CLHarrisCorners::run()</a>, <a class="el" href="_n_e_harris_corners_8cpp_source.xhtml#l00183">NEHarrisCorners::run()</a>, <a class="el" href="_n_e_softmax_layer_8cpp_source.xhtml#l00181">NESoftmaxLayer::run()</a>, <a class="el" href="_n_e_convolution_8cpp_source.xhtml#l00100">NEConvolutionSquare&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_h_o_g_multi_detection_8cpp_source.xhtml#l00230">NEHOGMultiDetection::run()</a>, <a class="el" href="_c_l_h_o_g_multi_detection_8cpp_source.xhtml#l00229">CLHOGMultiDetection::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00114">NEGaussianPyramidHalf::run()</a>, <a class="el" href="_n_e_locally_connected_layer_8cpp_source.xhtml#l00167">NELocallyConnectedLayer::run()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00101">NECropResize::run()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00239">NEGEMM::run()</a>, <a class="el" href="_n_e_fuse_batch_normalization_8cpp_source.xhtml#l00055">NEFuseBatchNormalization::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_8cpp_source.xhtml#l00104">NEDirectConvolutionLayer::run()</a>, <a class="el" href="_n_e_space_to_batch_layer_8cpp_source.xhtml#l00079">NESpaceToBatchLayer::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00367">NEGEMMLowpMatrixMultiplyCore::run()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00410">NEDepthwiseConvolutionAssemblyDispatch::run()</a>, <a class="el" href="_n_e_g_e_m_m_interleaved_wrapper_8cpp_source.xhtml#l00188">NEGEMMInterleavedWrapper::run()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00344">NEFullyConnectedLayer::run()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00611">NELSTMLayer::run()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00551">NEGEMMConvolutionLayer::run()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00974">NEDepthwiseConvolutionLayer::run()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00073">NEDeviceBackend::setup_backend_context()</a>, and <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00122">SchedulerClock&lt; output_timestamps &gt;::test_start()</a>.</p>

</div>
</div>
<a id="a3f9e730c935124966325cd7c794d3153"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f9e730c935124966325cd7c794d3153">&#9670;&nbsp;</a></span>get_type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Scheduler::Type</a> get_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of the active scheduler. </p>
<dl class="section return"><dt>Returns</dt><dd>The current scheduler's type. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_scheduler_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="_scheduler_8cpp_source.xhtml">Scheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> _scheduler_type;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00122">SchedulerClock&lt; output_timestamps &gt;::test_start()</a>.</p>

</div>
</div>
<a id="aec4d18b67c8b6ba13485ec9b17de0ef8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec4d18b67c8b6ba13485ec9b17de0ef8">&#9670;&nbsp;</a></span>is_available()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_available </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a>&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if the given scheduler type is supported. </p>
<p>False otherwise.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">t</td><td>the type of the scheduler to check.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the given scheduler type is supported. False otherwise. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_scheduler_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_scheduler_8cpp_source.xhtml">Scheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">switch</span>(t)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8">Type::ST</a>:</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e">Type::CPP</a>:</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#if ARM_COMPUTE_CPP_SCHEDULER</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* ARM_COMPUTE_CPP_SCHEDULER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CPP_SCHEDULER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f">Type::OMP</a>:</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#if ARM_COMPUTE_OPENMP_SCHEDULER</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* ARM_COMPUTE_OPENMP_SCHEDULER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_OPENMP_SCHEDULER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">Type::CUSTOM</a>:</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">return</span> _custom_scheduler != <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Invalid Scheduler type&quot;</span>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f">arm_compute::Scheduler::Type::OMP</a></div><div class="ttdoc">OpenMP.</div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8">arm_compute::Scheduler::Type::ST</a></div><div class="ttdoc">Single thread.</div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">arm_compute::Scheduler::Type::CUSTOM</a></div><div class="ttdoc">Provided by the user.</div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e">arm_compute::Scheduler::Type::CPP</a></div><div class="ttdoc">C++11 threads.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a4c162442ef22c58f6f1e330e6b692c7e">Scheduler::CPP</a>, <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">Scheduler::CUSTOM</a>, <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6a1f3212967c1a0ff6774f09de77330f">Scheduler::OMP</a>, and <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7aec8e57d71f07e31203035548b79d03c8">Scheduler::ST</a>.</p>

<p class="reference">Referenced by <a class="el" href="_scheduler_8cpp_source.xhtml#l00049">Scheduler::set()</a>.</p>

</div>
</div>
<a id="ad2fc671b2772dd9e28b81cf0e2514e85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2fc671b2772dd9e28b81cf0e2514e85">&#9670;&nbsp;</a></span>set() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> &gt;&#160;</td>
          <td class="paramname"><em>scheduler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the user defined scheduler and makes it the active scheduler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">scheduler</td><td>A shared pointer to a custom scheduler implemented by the user. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_scheduler_8cpp_source.xhtml#l00145">145</a> of file <a class="el" href="_scheduler_8cpp_source.xhtml">Scheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    _custom_scheduler = std::move(scheduler);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classarm__compute_1_1_scheduler.xhtml#ad2fc671b2772dd9e28b81cf0e2514e85">set</a>(<a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">Type::CUSTOM</a>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_ad2fc671b2772dd9e28b81cf0e2514e85"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#ad2fc671b2772dd9e28b81cf0e2514e85">arm_compute::Scheduler::set</a></div><div class="ttdeci">static void set(std::shared_ptr&lt; IScheduler &gt; scheduler)</div><div class="ttdoc">Sets the user defined scheduler and makes it the active scheduler.</div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00145">Scheduler.cpp:145</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">arm_compute::Scheduler::Type::CUSTOM</a></div><div class="ttdoc">Provided by the user.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">Scheduler::CUSTOM</a>.</p>

<p class="reference">Referenced by <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00122">SchedulerClock&lt; output_timestamps &gt;::test_start()</a>, and <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00170">SchedulerClock&lt; output_timestamps &gt;::test_stop()</a>.</p>

</div>
</div>
<a id="a9792282edd343320061f7acac8e04e4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9792282edd343320061f7acac8e04e4b">&#9670;&nbsp;</a></span>set() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a>&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the active scheduler. </p>
<p>Only one scheduler can be enabled at any time.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">t</td><td>the type of the scheduler to be enabled. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_scheduler_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="_scheduler_8cpp_source.xhtml">Scheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!<a class="code" href="classarm__compute_1_1_scheduler.xhtml#aec4d18b67c8b6ba13485ec9b17de0ef8">Scheduler::is_available</a>(t));</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    _scheduler_type = t;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00337">Error.h:337</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_aec4d18b67c8b6ba13485ec9b17de0ef8"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#aec4d18b67c8b6ba13485ec9b17de0ef8">arm_compute::Scheduler::is_available</a></div><div class="ttdeci">static bool is_available(Type t)</div><div class="ttdoc">Returns true if the given scheduler type is supported.</div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00055">Scheduler.cpp:55</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00337">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="_scheduler_8cpp_source.xhtml#l00055">Scheduler::is_available()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/<a class="el" href="_scheduler_8h_source.xhtml">Scheduler.h</a></li>
<li>src/runtime/<a class="el" href="_scheduler_8cpp_source.xhtml">Scheduler.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_scheduler.xhtml">Scheduler</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
