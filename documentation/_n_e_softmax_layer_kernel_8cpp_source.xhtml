<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/NESoftmaxLayerKernel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_softmax_layer_kernel_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NESoftmaxLayerKernel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_softmax_layer_kernel_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_softmax_layer_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NESoftmaxLayerKernel.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_access_window_static_8h.xhtml">arm_compute/core/AccessWindowStatic.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_p_p_2_validate_8h.xhtml">arm_compute/core/CPP/Validate.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_fixed_point_8h.xhtml">arm_compute/core/NEON/NEFixedPoint.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_math_8h.xhtml">arm_compute/core/NEON/NEMath.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_8h.xhtml">arm_compute/core/Window.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_saturate_cast_8h.xhtml">arm_compute/core/utils/misc/SaturateCast.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;arm_neon.h&gt;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &lt;cfloat&gt;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> N&gt;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">struct </span>vec_n_type;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">   49</a></span>&#160;<span class="preprocessor">#define DECLARE_NEON_VEC_TYPE(T, N, V) \</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">    template &lt;&gt;                        \</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">    struct vec_n_type&lt;T, N&gt;            \</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">    {                                  \</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">        using type = V;                \</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">    };</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(uint8_t, 16, uint8x16_t)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(uint8_t, 8, uint8x8_t)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(int8_t, 16, int8x16_t)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(int8_t, 8, int8x8_t)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(uint16_t, 8, uint16x8_t)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(uint16_t, 4, uint16x4_t)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(int16_t, 8, int16x8_t)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(int16_t, 4, int16x4_t)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(int32_t, 4, int32x4_t)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(int32_t, 2, int32x2_t)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(uint32_t, 4, uint32x4_t)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(uint32_t, 2, uint32x2_t)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(float16_t, 8, float16x8_t)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(float16_t, 4, float16x4_t)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(<span class="keywordtype">float</span>, 4, float32x4_t)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a>(<span class="keywordtype">float</span>, 2, float32x2_t)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> N&gt;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a3fd0d641ff68bfe8475361a13de7b1cc">   83</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#a3fd0d641ff68bfe8475361a13de7b1cc">vec_n_t</a> = <span class="keyword">typename</span> vec_n_type&lt;T, N&gt;::type;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> N&gt;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a5cd8407762d2446f8eceefcc4b63e537">   86</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#a5cd8407762d2446f8eceefcc4b63e537">vec_n_byte_t</a> = <a class="code" href="namespacearm__compute.xhtml#a3fd0d641ff68bfe8475361a13de7b1cc">vec_n_t</a> &lt; T, N / <span class="keyword">sizeof</span>(T) &gt;;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aef7a69b9cf4a1732d2be114b9b9bf3e3">   89</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#aef7a69b9cf4a1732d2be114b9b9bf3e3">vec_16_byte_t</a> = <a class="code" href="namespacearm__compute.xhtml#a5cd8407762d2446f8eceefcc4b63e537">vec_n_byte_t&lt;T, 16&gt;</a>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ab448de27f94cd38059b63980c3c08f40">   92</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#ab448de27f94cd38059b63980c3c08f40">vec_8_byte_t</a> = <a class="code" href="namespacearm__compute.xhtml#a5cd8407762d2446f8eceefcc4b63e537">vec_n_byte_t&lt;T, 8&gt;</a>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a926fa1a0e7fd320cff5ba6c6f62f463b">   95</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#a926fa1a0e7fd320cff5ba6c6f62f463b">const_ptr_t</a> = <span class="keyword">const</span> T *;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a1e36f8a2df3d6bd1756b90e2efb151e9">   98</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#a1e36f8a2df3d6bd1756b90e2efb151e9">ptr_t</a> = T *;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">  100</a></span>&#160;<span class="preprocessor">#define FORWARD_DECLARE_VGET_LANE_FOR_TYPE(TYPE) \</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">    template &lt;int lane&gt;                          \</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">    TYPE vget_lane(vec_8_byte_t&lt;TYPE&gt; vec);      \</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">    template &lt;int lane&gt;                          \</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">    TYPE vget_lane(vec_16_byte_t&lt;TYPE&gt; vec);</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a>(uint8_t)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a>(int8_t)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a>(uint16_t)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a>(int16_t)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a>(uint32_t)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a>(int32_t)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a>(float16_t)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a>(<span class="keywordtype">float</span>)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">int</span> lane&gt;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keywordtype">float</span> <a class="code" href="namespacearm__compute.xhtml#a40552ea65ee3fc6d7fa7f1fb17baebe7">vget_lane</a>(float32x4x4_t vec);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a534a101b6176c3e065eba4b4cde7a40e">  120</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#a534a101b6176c3e065eba4b4cde7a40e">elem_type_t</a> = decltype(vget_lane&lt;0&gt;(std::declval&lt;V&gt;()));</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">  123</a></span>&#160;constexpr <span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">vec_size_of</a>(<span class="keyword">const</span> V &amp;vec)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(vec) / <span class="keyword">sizeof</span>(<a class="code" href="namespacearm__compute.xhtml#a534a101b6176c3e065eba4b4cde7a40e">elem_type_t&lt;V&gt;</a>);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;V <a class="code" href="namespacearm__compute.xhtml#a2603e5f72e3fa052025c189c1a6647ce">vdup_n</a>(elem_type_t&lt;V&gt; val);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;V <a class="code" href="namespacearm__compute.xhtml#a85d0b4103385d996d4014691d2df0cf1">vld</a>(<a class="code" href="namespacearm__compute.xhtml#a926fa1a0e7fd320cff5ba6c6f62f463b">const_ptr_t</a>&lt;elem_type_t&lt;V&gt;&gt; ptr);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">  133</a></span>&#160;<span class="preprocessor">#define DECLARE_NEON_FUNCTIONS_FOR_TYPE(TYPE, TAG)                                \</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor">    template &lt;&gt;                                                                   \</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">    inline vec_8_byte_t&lt;TYPE&gt; vdup_n&lt;vec_8_byte_t&lt;TYPE&gt;&gt;(TYPE val)                \</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">        return vdup_n_##TAG(val);                                                 \</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">    template &lt;&gt;                                                                   \</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">    inline vec_16_byte_t&lt;TYPE&gt; vdup_n&lt;vec_16_byte_t&lt;TYPE&gt;&gt;(TYPE val)              \</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">        return vdupq_n_##TAG(val);                                                \</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">    template &lt;&gt;                                                                   \</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor">    inline vec_8_byte_t&lt;TYPE&gt; vld&lt;vec_8_byte_t&lt;TYPE&gt;&gt;(const_ptr_t&lt;TYPE&gt; ptr)      \</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">        return vld1_##TAG(ptr);                                                   \</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">    template &lt;&gt;                                                                   \</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor">    inline vec_16_byte_t&lt;TYPE&gt; vld&lt;vec_16_byte_t&lt;TYPE&gt;&gt;(const_ptr_t&lt;TYPE&gt; ptr)    \</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">        return vld1q_##TAG(ptr);                                                  \</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">    inline void vst(ptr_t&lt;TYPE&gt; ptr, vec_8_byte_t&lt;TYPE&gt; vec)                      \</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">        vst1_##TAG(ptr, vec);                                                     \</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="preprocessor">    inline void vst(ptr_t&lt;TYPE&gt; ptr, vec_16_byte_t&lt;TYPE&gt; vec)                     \</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">        vst1q_##TAG(ptr, vec);                                                    \</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor">    inline vec_16_byte_t&lt;TYPE&gt; vmax(vec_16_byte_t&lt;TYPE&gt; a, vec_16_byte_t&lt;TYPE&gt; b) \</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">        return vmaxq_##TAG(a, b);                                                 \</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">    inline vec_8_byte_t&lt;TYPE&gt; vpmax(vec_8_byte_t&lt;TYPE&gt; a, vec_8_byte_t&lt;TYPE&gt; b)   \</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor">        return vpmax_##TAG(a, b);                                                 \</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor">    inline vec_8_byte_t&lt;TYPE&gt; vget_low(vec_16_byte_t&lt;TYPE&gt; vec)                   \</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="preprocessor">        return vget_low_##TAG(vec);                                               \</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="preprocessor">    inline vec_8_byte_t&lt;TYPE&gt; vget_high(vec_16_byte_t&lt;TYPE&gt; vec)                  \</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="preprocessor">        return vget_high_##TAG(vec);                                              \</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">    template &lt;int lane&gt;                                                           \</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">    inline TYPE vget_lane(vec_8_byte_t&lt;TYPE&gt; vec)                                 \</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">        static_assert(lane &gt;= 0, &quot;lane is out of bounds&quot;);                        \</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">        static_assert(lane &lt; vec_size_of(vec), &quot;lane is out of bounds&quot;);          \</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">        return vget_lane_##TAG(vec, lane);                                        \</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor">    template &lt;int lane&gt;                                                           \</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">    inline TYPE vget_lane(vec_16_byte_t&lt;TYPE&gt; vec)                                \</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor">        static_assert(lane &gt;= 0, &quot;lane is out of bounds&quot;);                        \</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor">        static_assert(lane &lt; vec_size_of(vec), &quot;lane is out of bounds&quot;);          \</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">        return vgetq_lane_##TAG(vec, lane);                                       \</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;T <a class="code" href="namespacearm__compute.xhtml#a671b1da70aa3efc02c508648ae2d81b5">sqadd</a>(T a, T <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;T <a class="code" href="namespacearm__compute.xhtml#a7462bb232b41864413a4d8603a660d16">sqsub</a>(T a, T <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;T <a class="code" href="namespacearm__compute.xhtml#a705ed42150ffbe645f7ba2fb5d0a5bb6">sqmul</a>(T a, T <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="_n_e_softmax_layer_kernel_8cpp.xhtml#aedbe837d4d203f117c652cfc87bf659e">  200</a></span>&#160;<span class="preprocessor">#define DECLARE_NEON_FUNCTIONS_FOR_FLOAT(TYPE, TAG)                               \</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">    inline vec_8_byte_t&lt;TYPE&gt; vadd(vec_8_byte_t&lt;TYPE&gt; a, vec_8_byte_t&lt;TYPE&gt; b)    \</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor">        return vadd_##TAG(a, b);                                                  \</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">    inline vec_16_byte_t&lt;TYPE&gt; vadd(vec_16_byte_t&lt;TYPE&gt; a, vec_16_byte_t&lt;TYPE&gt; b) \</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor">        return vaddq_##TAG(a, b);                                                 \</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor">    inline vec_16_byte_t&lt;TYPE&gt; vsub(vec_16_byte_t&lt;TYPE&gt; a, vec_16_byte_t&lt;TYPE&gt; b) \</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor">        return vsubq_##TAG(a, b);                                                 \</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor">    }                                                                             \</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">    inline vec_16_byte_t&lt;TYPE&gt; vmul_n(vec_16_byte_t&lt;TYPE&gt; vec, TYPE val)          \</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">    {                                                                             \</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="preprocessor">        return vmulq_n_##TAG(vec, val);                                           \</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aa17a7667769390f153ad5289d5390341">  218</a></span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a>(uint8_t, u8)</div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ab2c29d96efc44a4163d8f594cd836d1e">  219</a></span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a>(int8_t, s8)</div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a090a9d8254580d7c22668e21e581d58e">  220</a></span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a>(uint16_t, u16)</div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ac9aedf36525da0e2306db27867c2bb5d">  221</a></span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a>(int16_t, s16)</div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aca451511712482f55001063da2317427">  222</a></span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a>(uint32_t, u32)</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a788c1fc3809f77d2866e4282d374770b">  223</a></span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a>(int32_t, s32)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a>(float16_t, f16)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#abd25994f8abe7093700a88a65fdb6ad5">  227</a></span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a>(<span class="keywordtype">float</span>, f32)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#aedbe837d4d203f117c652cfc87bf659e">DECLARE_NEON_FUNCTIONS_FOR_FLOAT</a>(float16_t, f16)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ad0ebbe865e9e6cfd1b2df041f8374ed0">  232</a></span>&#160;<a class="code" href="_n_e_softmax_layer_kernel_8cpp.xhtml#aedbe837d4d203f117c652cfc87bf659e">DECLARE_NEON_FUNCTIONS_FOR_FLOAT</a>(<span class="keywordtype">float</span>, f32)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> VO, <span class="keyword">typename</span> VI&gt;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;VO <a class="code" href="namespacearm__compute.xhtml#a6cb464349a8f184ffb8eded9ae9e5925">vcvt</a>(VI vec);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a146b84422a0eaf6c66ba8156425b5bdf">  238</a></span>&#160;float32x4x4_t <a class="code" href="namespacearm__compute.xhtml#a146b84422a0eaf6c66ba8156425b5bdf">vcvt&lt;float32x4x4_t&gt;</a>(uint8x16_t vec)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;{</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>    low  = vmovl_u8(<a class="code" href="namespacearm__compute.xhtml#a3bb60064e505cfd3a0d43528a3c1845d">vget_low</a>(vec));</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>    high = vmovl_u8(<a class="code" href="namespacearm__compute.xhtml#af311129b4dccf2fbd9307a7d644876d1">vget_high</a>(vec));</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    float32x4x4_t res  = { {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            vcvtq_f32_u32(vmovl_u16(<a class="code" href="namespacearm__compute.xhtml#a3bb60064e505cfd3a0d43528a3c1845d">vget_low</a>(low))),</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            vcvtq_f32_u32(vmovl_u16(<a class="code" href="namespacearm__compute.xhtml#af311129b4dccf2fbd9307a7d644876d1">vget_high</a>(low))),</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            vcvtq_f32_u32(vmovl_u16(<a class="code" href="namespacearm__compute.xhtml#a3bb60064e505cfd3a0d43528a3c1845d">vget_low</a>(high))),</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            vcvtq_f32_u32(vmovl_u16(<a class="code" href="namespacearm__compute.xhtml#af311129b4dccf2fbd9307a7d644876d1">vget_high</a>(high)))</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        }</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    };</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;}</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ab6bc00d6c4503a0bc303dd363e021476">  253</a></span>&#160;uint8x16_t <a class="code" href="namespacearm__compute.xhtml#ab6bc00d6c4503a0bc303dd363e021476">vcvt&lt;uint8x16_t&gt;</a>(float32x4x4_t vec)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;{</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    uint16x8x2_t resU16 = { {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            vcombine_u16(vqmovn_u32(vcvtq_u32_f32(vec.val[0])),</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            vqmovn_u32(vcvtq_u32_f32(vec.val[1]))),</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            vcombine_u16(vqmovn_u32(vcvtq_u32_f32(vec.val[2])),</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            vqmovn_u32(vcvtq_u32_f32(vec.val[3])))</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        }</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    };</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    uint8x16_t res = vcombine_u8(vqmovn_u16(resU16.val[0]), vqmovn_u16(resU16.val[1]));</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;}</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a91d2c1f68de68401d1aa465e27f78ab0">  267</a></span>&#160;float32x4x4_t <a class="code" href="namespacearm__compute.xhtml#a91d2c1f68de68401d1aa465e27f78ab0">vexp</a>(float32x4x4_t vec)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;{</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    float32x4x4_t res = { {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab55486f1153a4c5f507d4923b59fc6a0">vexpq_f32</a>(vec.val[0]),</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab55486f1153a4c5f507d4923b59fc6a0">vexpq_f32</a>(vec.val[1]),</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab55486f1153a4c5f507d4923b59fc6a0">vexpq_f32</a>(vec.val[2]),</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab55486f1153a4c5f507d4923b59fc6a0">vexpq_f32</a>(vec.val[3])</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        }</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    };</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;}</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#adcb77ffd576a7addf3be8508e50451d2">  279</a></span>&#160;float32x4_t <a class="code" href="namespacearm__compute.xhtml#a91d2c1f68de68401d1aa465e27f78ab0">vexp</a>(<span class="keyword">const</span> float32x4_t &amp;vec)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;{</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ab55486f1153a4c5f507d4923b59fc6a0">vexpq_f32</a>(vec);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">// TODO (COMPMID-1535) : Revisit FP16 approximations</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;float16x8_t <a class="code" href="namespacearm__compute.xhtml#a91d2c1f68de68401d1aa465e27f78ab0">vexp</a>(<span class="keyword">const</span> float16x8_t &amp;vec)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;{</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    float16x4x2_t res =</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    {</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            vcvt_f16_f32(<a class="code" href="namespacearm__compute.xhtml#ab55486f1153a4c5f507d4923b59fc6a0">vexpq_f32</a>(vcvt_f32_f16(vget_low_f16(vec)))),</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            vcvt_f16_f32(<a class="code" href="namespacearm__compute.xhtml#ab55486f1153a4c5f507d4923b59fc6a0">vexpq_f32</a>(vcvt_f32_f16(vget_high_f16(vec))))</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        }</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    };</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">return</span> vcombine_f16(res.val[0], res.val[1]);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;}</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aeabe5dd1c5751f380322a841d7ad8d7a">  300</a></span>&#160;float32x4x4_t <a class="code" href="namespacearm__compute.xhtml#aeabe5dd1c5751f380322a841d7ad8d7a">vdup_n&lt;float32x4x4_t&gt;</a>(<span class="keywordtype">float</span> val)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;{</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    float32x4x4_t res = { {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            vdupq_n_f32(val),</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            vdupq_n_f32(val),</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            vdupq_n_f32(val),</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            vdupq_n_f32(val)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    };</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;}</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#abc9f4323a93d34d19bab7cc371649441">  312</a></span>&#160;float32x4x4_t <a class="code" href="namespacearm__compute.xhtml#a5dce3fda8114a32a2c8f1f517adca368">vmul_n</a>(float32x4x4_t vec, <span class="keywordtype">float</span> val)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;{</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    float32x4x4_t res = { {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            vmulq_n_f32(vec.val[0], val),</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            vmulq_n_f32(vec.val[1], val),</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            vmulq_n_f32(vec.val[2], val),</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            vmulq_n_f32(vec.val[3], val)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        }</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    };</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;}</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a4cc9ed76f48e918e73249c894380f91b">  324</a></span>&#160;float32x4x4_t <a class="code" href="namespacearm__compute.xhtml#abe949a509da417044624d62a73057441">vadd</a>(float32x4x4_t a, float32x4x4_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;{</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    float32x4x4_t res = { {</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            vaddq_f32(a.val[0], <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.val[0]),</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            vaddq_f32(a.val[1], <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.val[1]),</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            vaddq_f32(a.val[2], <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.val[2]),</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            vaddq_f32(a.val[3], <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.val[3])</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        }</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    };</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;}</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;{</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;Status validate_arguments_logits_1d_max(<span class="keyword">const</span> ITensorInfo &amp;input, <span class="keyword">const</span> ITensorInfo &amp;output)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;{</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a>(&amp;input);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(&amp;input, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="comment">// Validate in case of configured output</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">if</span>(output.total_size() != 0)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    {</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;input, &amp;output);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <a class="code" href="_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(&amp;input, &amp;output);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <a class="code" href="_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a>(output.tensor_shape(), TensorShape(input.tensor_shape()).<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">set</a>(0, 1));</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;std::pair&lt;Status, Window&gt; validate_and_configure_window_logits_1d_max(ITensorInfo &amp;input, ITensorInfo &amp;output)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;{</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="comment">// Softmax across the x dimension</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keyword">const</span> TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7fc93f37dac131a1a40b7921f9df3a9a">output_shape</a> = TensorShape(input.tensor_shape()).<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">set</a>(0, 1);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="comment">// Output auto initialization if not yet initialized</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7fc93f37dac131a1a40b7921f9df3a9a">output_shape</a>, 1, input.data_type(), input.quantization_info());</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> input_width                       = input.valid_region().shape.x();</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> num_elems_processed_per_iteration = 16<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> / <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(input.data_type());</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> num_elems_read_per_iteration      = <a class="code" href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">ceil_to_multiple</a>(input_width, num_elems_processed_per_iteration);</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keyword">const</span> ValidRegion out_valid_region(ValidRegion(input.valid_region()).<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">set</a>(0, 0, 1));</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    output.set_valid_region(out_valid_region);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    Window win = <a class="code" href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">calculate_max_window</a>(output);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    AccessWindowHorizontal input_access(&amp;input, input.valid_region().anchor.x(), num_elems_read_per_iteration);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    AccessWindowHorizontal output_access(&amp;output, 0, 1);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> window_changed = <a class="code" href="namespacearm__compute.xhtml#afc4bd8e872567d9c4c57d89eb0bb3da1">update_window_and_padding</a>(win, input_access, output_access);</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keyword">const</span> Status err = (window_changed) ? <a class="code" href="_error_8h.xhtml#a046fbca6a9505ce038bc02830c739fed">ARM_COMPUTE_CREATE_ERROR</a>(<a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Insufficient Padding!&quot;</span>) : Status{};</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keywordflow">return</span> std::make_pair(err, win);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;}</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> V&gt;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keyword">auto</span> reduce_max(V vec) -&gt; elem_type_t&lt;V&gt;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;{</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    constexpr <span class="keywordtype">int</span> N = <a class="code" href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">vec_size_of</a>(vec);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">auto</span> carry_max = <a class="code" href="namespacearm__compute.xhtml#aae85042ef273ca700734604b5488f2ff">vpmax</a>(<a class="code" href="namespacearm__compute.xhtml#af311129b4dccf2fbd9307a7d644876d1">vget_high</a>(vec), <a class="code" href="namespacearm__compute.xhtml#a3bb60064e505cfd3a0d43528a3c1845d">vget_low</a>(vec));</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> k = N / 2; k &gt; 1; k /= 2)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    {</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        carry_max = <a class="code" href="namespacearm__compute.xhtml#aae85042ef273ca700734604b5488f2ff">vpmax</a>(carry_max, carry_max);</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordflow">return</span> vget_lane&lt;0&gt;(carry_max);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keywordtype">void</span> logits_1d_max(<span class="keyword">const</span> ITensor &amp;in, ITensor &amp;out, <span class="keyword">const</span> Window &amp;window)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;{</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>   start_x     = in.info()-&gt;valid_region().anchor.x();</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> input_width = in.info()-&gt;valid_region().shape.x();</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    Iterator input(&amp;in, window);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    Iterator output(&amp;out, window);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    {</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="comment">// Get pointers</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> in_ptr  = reinterpret_cast&lt;const T *&gt;(input.ptr()) + start_x;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> out_ptr = reinterpret_cast&lt;T *&gt;(output.ptr());</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="comment">// Init max value</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keyword">auto</span> vec_max = vdup_n&lt;vec_16_byte_t&lt;T&gt;&gt;(support::cpp11::lowest&lt;T&gt;());</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="comment">// Loop over input row</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> T *it = in_ptr; it &lt; (in_ptr + input_width); it += <a class="code" href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">vec_size_of</a>(vec_max))</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        {</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> current_value = vld&lt;vec_16_byte_t&lt;T&gt;&gt;(it);</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            vec_max                  = <a class="code" href="namespacearm__compute.xhtml#a1cb1c90103d83ca052919e98dbaac553">vmax</a>(vec_max, current_value);</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="keyword">const</span> T max_val = reduce_max(vec_max);</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        *out_ptr        = max_val;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    },</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    input, output);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;}</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a7dcfcda37359d31c2510ad865f4ca051">  427</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a7dcfcda37359d31c2510ad865f4ca051">NELogits1DMaxKernel::NELogits1DMaxKernel</a>()</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    : _func(nullptr), _border_size()</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;{</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;}</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">  432</a></span>&#160;<a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> <a class="code" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NELogits1DMaxKernel::border_size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keywordflow">return</span> _border_size;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;}</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a83a344e60eb7db895953a942abf16628">  437</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a83a344e60eb7db895953a942abf16628">NELogits1DMaxKernel::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;{</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input, output);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="comment">// Perform validation step</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(validate_arguments_logits_1d_max(*input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), *output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()));</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="keyword">auto</span> win_config = validate_and_configure_window_logits_1d_max(*input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), *output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(win_config.first);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">switch</span>(input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>())</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    {</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            _func = &amp;logits_1d_max&lt;qasymm8_t&gt;;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            _func = &amp;logits_1d_max&lt;float16_t&gt;;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            _func = &amp;logits_1d_max&lt;float&gt;;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported data type.&quot;</span>);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    }</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    _input  = input;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    _output = output;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> input_width                       = input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a74dfd07380a290c34fe7c8e065029b95">valid_region</a>().<a class="code" href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">shape</a>.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>();</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> num_elems_processed_per_iteration = 16<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a> / <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> num_elems_read_per_iteration      = <a class="code" href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">ceil_to_multiple</a>(input_width, num_elems_processed_per_iteration);</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    _border_size = <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>(0, num_elems_read_per_iteration - input_width, 0, 0);</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    INEKernel::configure(win_config.second);</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;}</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">  476</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NELogits1DMaxKernel::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;{</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input, output);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_logits_1d_max(*input, *output));</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window_logits_1d_max(*input-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *output-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()).first);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;}</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">  486</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">NELogits1DMaxKernel::run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>)</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;{</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <a class="code" href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">INEKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_func == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    (*_func)(*_input, *_output, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;}</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;{</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> validate_arguments_logits_softmax(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;max,</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;output, <span class="keyword">const</span> <span class="keywordtype">float</span> beta, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;tmp)</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;{</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(beta);</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="comment">// Check input</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <a class="code" href="_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a>(&amp;input);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(&amp;input, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_quantized_asymmetric = <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(input.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="comment">// Check max</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;input, &amp;max);</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(input.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()).<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">set</a>(0, 1), max.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>());</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <a class="code" href="_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(&amp;input, &amp;max);</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="comment">// Check output if configured</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keywordflow">if</span>(output.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>() != 0)</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    {</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> output_quantization = is_quantized_asymmetric ? <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(1.f / 256.f, 0) : output.quantization_info();</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;input, &amp;output);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <a class="code" href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;input, &amp;output);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>() != output_quantization);</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    }</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="comment">// Check tmp if configured</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">if</span>(tmp.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>() != 0)</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    {</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> tmp_data_type = is_quantized_asymmetric ? <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a> : input.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(tmp.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>() != tmp_data_type);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <span class="comment">// We could potentially reduce tmp memory if we could predict or make an assumption</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <span class="comment">// on the maximum number of threads that will run in parallel.</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        <a class="code" href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;input, &amp;tmp);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    }</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;}</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;std::pair&lt;Status, Window&gt; validate_and_configure_window_logits_softmax(ITensorInfo &amp;input, ITensorInfo &amp;max,</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                                                                       ITensorInfo &amp;output, ITensorInfo &amp;tmp)</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;{</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_quantized_asymmetric = <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(input.data_type());</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="comment">// Output auto initialization if not yet initialized</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keyword">const</span> QuantizationInfo output_quantization = is_quantized_asymmetric ? QuantizationInfo(1.f / 256.f, 0) : output.quantization_info();</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(output, TensorInfo(input).set_quantization_info(output_quantization).reset_padding());</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="comment">// Tmp auto initialization if not yet initialized</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> tmp_data_type = is_quantized_asymmetric ? <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a> : input.data_type();</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(tmp, TensorInfo(input).set_data_type(tmp_data_type).reset_padding());</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> input_width = input.valid_region().shape.x();</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    Window win = <a class="code" href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">calculate_max_window</a>(max);</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    AccessWindowHorizontal input_access(&amp;input, input.valid_region().anchor.x(), input_width);</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    AccessWindowHorizontal max_access(&amp;input, 0, 1);</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    AccessWindowHorizontal output_access(&amp;output, input.valid_region().anchor.x(), input_width);</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    AccessWindowHorizontal tmp_access(&amp;tmp, input.valid_region().anchor.x(), input_width);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> window_changed = <a class="code" href="namespacearm__compute.xhtml#afc4bd8e872567d9c4c57d89eb0bb3da1">update_window_and_padding</a>(win, input_access, max_access, output_access, tmp_access);</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    output.set_valid_region(input.valid_region());</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keyword">const</span> Status err = (window_changed) ? <a class="code" href="_error_8h.xhtml#a046fbca6a9505ce038bc02830c739fed">ARM_COMPUTE_CREATE_ERROR</a>(<a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Insufficient Padding!&quot;</span>) : Status{};</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keywordflow">return</span> std::make_pair(err, win);</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;}</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> N, <span class="keywordtype">int</span> S, <span class="keywordtype">int</span> E&gt;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="keyword">struct </span>reduce_add_impl</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;{</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> F&gt;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <span class="keyword">static</span> T reduce(F add_fn, vec_n_t&lt;T, N&gt; vec)</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    {</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        constexpr <span class="keywordtype">int</span> H            = (S + E + 1) / 2;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>    reduced_high = reduce_add_impl &lt; T, N, S, H - 1 &gt;::reduce(add_fn, vec);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>    reduced_low  = reduce_add_impl&lt;T, N, H, E&gt;::reduce(add_fn, vec);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="keywordflow">return</span> add_fn(reduced_high, reduced_low);</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    }</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;};</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> N, <span class="keywordtype">int</span> I&gt;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keyword">struct </span>reduce_add_impl&lt;T, N, I, I&gt;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;{</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> F&gt;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keyword">static</span> T reduce(F <span class="comment">/*add_fn*/</span>, vec_n_t&lt;T, N&gt; vec)</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    {</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        <span class="keywordflow">return</span> vget_lane&lt;I&gt;(vec);</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    }</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;};</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> V, <span class="keyword">typename</span> F&gt;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;elem_type_t&lt;V&gt; reduce_add(F add_fn, V vec)</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;{</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    constexpr <span class="keywordtype">int</span> N = <a class="code" href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">vec_size_of</a>(vec);</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    <span class="keywordflow">return</span> reduce_add_impl &lt; elem_type_t&lt;V&gt;, N, 0, N - 1 &gt;::reduce(add_fn, vec);</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;}</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="keywordtype">void</span> logits_1d_softmax_qasymm8(<span class="keyword">const</span> ITensor &amp;in, <span class="keyword">const</span> ITensor &amp;max, <span class="keywordtype">void</span> *<span class="keyword">const</span> tmp, ITensor &amp;out, <span class="keyword">const</span> <span class="keywordtype">float</span> beta, <span class="keyword">const</span> Window &amp;window)</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;{</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> start_x     = in.info()-&gt;valid_region().anchor.x();</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> input_width = in.info()-&gt;valid_region().shape.x();</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> scale_beta = -beta * in.info()-&gt;quantization_info().uniform().scale;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    Iterator in_it(&amp;in, window);</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    Iterator max_it(&amp;max, window);</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    Iterator out_it(&amp;out, window);</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    {</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        <span class="comment">/* Get pointers */</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> in_ptr  = reinterpret_cast&lt;const qasymm8_t *&gt;(in_it.ptr()) + start_x;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> out_ptr = reinterpret_cast&lt;qasymm8_t *&gt;(out_it.ptr()) + start_x;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> tmp_ptr = reinterpret_cast&lt;float *&gt;(tmp);</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        <span class="keywordtype">float</span> sum_inversed;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="comment">/* Compute exponentials and sum */</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        {</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            <span class="comment">/* Get max value */</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> max_val = *reinterpret_cast&lt;const qasymm8_t *&gt;(max_it.ptr());</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vec_max = vdup_n&lt;vec_16_byte_t&lt;qasymm8_t&gt;&gt;(max_val);</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            <span class="comment">/* Init sum to zero */</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;            <span class="keyword">auto</span> vec_sum = <a class="code" href="namespacearm__compute.xhtml#aeabe5dd1c5751f380322a841d7ad8d7a">vdup_n&lt;float32x4x4_t&gt;</a>(0.f);</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;            <span class="comment">/* Loop over row and compute exponentials and sum */</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;            <span class="keywordtype">int</span>           i        = 0;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;            constexpr <span class="keywordtype">int</span> vec_size = <a class="code" href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">vec_size_of</a>(vec_max);</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            <span class="keywordflow">for</span>(; i &lt;= (input_width - vec_size); i += vec_size)</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;            {</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                <span class="keyword">auto</span> vec_elements = vld&lt;vec_16_byte_t&lt;qasymm8_t&gt;&gt;(in_ptr + i);</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                vec_elements      = vsubq_u8(vec_max, vec_elements);</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                <span class="keyword">auto</span> vec_elements_flt = <a class="code" href="namespacearm__compute.xhtml#a146b84422a0eaf6c66ba8156425b5bdf">vcvt&lt;float32x4x4_t&gt;</a>(vec_elements);</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                vec_elements_flt      = <a class="code" href="namespacearm__compute.xhtml#a91d2c1f68de68401d1aa465e27f78ab0">vexp</a>(<a class="code" href="namespacearm__compute.xhtml#a5dce3fda8114a32a2c8f1f517adca368">vmul_n</a>(vec_elements_flt, scale_beta));</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                vec_sum = <a class="code" href="namespacearm__compute.xhtml#abe949a509da417044624d62a73057441">vadd</a>(vec_sum, vec_elements_flt);</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                vst4q_f32(tmp_ptr + i, vec_elements_flt);</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            }</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            <span class="comment">/* Reduce sum */</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> sum_16_byte = vaddq_f32(vaddq_f32(vec_sum.val[0], vec_sum.val[1]),</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                                               vaddq_f32(vec_sum.val[2], vec_sum.val[3]));</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> sum_8_byte = vadd_f32(<a class="code" href="namespacearm__compute.xhtml#a3bb60064e505cfd3a0d43528a3c1845d">vget_low</a>(sum_16_byte), <a class="code" href="namespacearm__compute.xhtml#af311129b4dccf2fbd9307a7d644876d1">vget_high</a>(sum_16_byte));</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            <span class="keywordtype">float</span>      <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a>        = reduce_add(std::plus&lt;float&gt;(), sum_8_byte);</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            <span class="comment">/* Run remaining elements */</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            <span class="keywordflow">for</span>(; i &lt; input_width; ++i)</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            {</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">float</span> element = std::exp((max_val - in_ptr[i]) * scale_beta);</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a> += element;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                tmp_ptr[i] = element;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;            }</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            sum_inversed = 256.f / <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a>;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        }</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="comment">/* Normalize exponentials */</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        {</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            <span class="comment">/* Loop over row and compute softmax */</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            <span class="keywordtype">int</span> i = 0;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;            {</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                constexpr <span class="keywordtype">int</span> vec_size = 16;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                <span class="keywordflow">for</span>(; i &lt;= (input_width - vec_size); i += vec_size)</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                {</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                    float32x4x4_t vec_in           = vld4q_f32(tmp_ptr + i);</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                    <span class="keyword">auto</span>          normalized_value = vcvt&lt;vec_16_byte_t&lt;qasymm8_t&gt;&gt;(<a class="code" href="namespacearm__compute.xhtml#a5dce3fda8114a32a2c8f1f517adca368">vmul_n</a>(vec_in, sum_inversed));</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a3753b9d735032ba72e7df0c5cbba31a1">vst</a>(out_ptr + i, normalized_value);</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                }</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            }</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            <span class="comment">/* Run remaining elements */</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;            <span class="keywordflow">for</span>(; i &lt; input_width; ++i)</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            {</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                out_ptr[i] = utils::cast::saturate_cast&lt;qasymm8_t&gt;(tmp_ptr[i] * sum_inversed);</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            }</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        }</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    },</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    in_it, max_it, out_it);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;}</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="keywordtype">void</span> logits_1d_softmax_float(<span class="keyword">const</span> ITensor &amp;in, <span class="keyword">const</span> ITensor &amp;max, <span class="keywordtype">void</span> *<span class="keyword">const</span> tmp,</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                             ITensor &amp;out, <span class="keyword">const</span> <span class="keywordtype">float</span> beta, <span class="keyword">const</span> Window &amp;window)</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;{</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> start_x     = in.info()-&gt;valid_region().anchor.x();</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> input_width = in.info()-&gt;valid_region().shape.x();</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    Iterator in_it(&amp;in, window);</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    Iterator max_it(&amp;max, window);</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    Iterator out_it(&amp;out, window);</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(window, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    {</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="comment">/* Get pointers */</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> in_ptr  = reinterpret_cast&lt;const T *&gt;(in_it.ptr()) + start_x;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> out_ptr = reinterpret_cast&lt;T *&gt;(out_it.ptr()) + start_x;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> tmp_ptr = reinterpret_cast&lt;T *&gt;(tmp);</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        T sum_inversed;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        <span class="comment">/* Compute exponentials and sum */</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        {</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            <span class="comment">/* Get max value */</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> max_val = *reinterpret_cast&lt;const T *&gt;(max_it.ptr());</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vec_max = vdup_n&lt;vec_16_byte_t&lt;T&gt;&gt;(max_val);</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;            <span class="comment">/* Init sum to zero */</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            <span class="keyword">auto</span> vec_sum = vdup_n&lt;vec_16_byte_t&lt;T&gt;&gt;(0);</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            <span class="comment">/* Loop over row and compute exponentials and sum */</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            <span class="keywordtype">int</span>           i        = 0;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            constexpr <span class="keywordtype">int</span> vec_size = <a class="code" href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">vec_size_of</a>(vec_sum);</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;            <span class="keywordflow">for</span>(; i &lt;= (input_width - vec_size); i += vec_size)</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            {</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                <span class="keyword">auto</span> vec_elements = vld&lt;vec_16_byte_t&lt;T&gt;&gt;(in_ptr + i);</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                vec_elements      = <a class="code" href="namespacearm__compute.xhtml#ad0ebbe865e9e6cfd1b2df041f8374ed0">vsub</a>(vec_elements, vec_max);</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                vec_elements      = <a class="code" href="namespacearm__compute.xhtml#a91d2c1f68de68401d1aa465e27f78ab0">vexp</a>(<a class="code" href="namespacearm__compute.xhtml#a5dce3fda8114a32a2c8f1f517adca368">vmul_n</a>(vec_elements, static_cast&lt;T&gt;(beta)));</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                vec_sum           = <a class="code" href="namespacearm__compute.xhtml#abe949a509da417044624d62a73057441">vadd</a>(vec_sum, vec_elements);</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#a3753b9d735032ba72e7df0c5cbba31a1">vst</a>(tmp_ptr + i, vec_elements);</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;            }</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;            <span class="comment">/* Reduce sum */</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> sum_8_byte = <a class="code" href="namespacearm__compute.xhtml#abe949a509da417044624d62a73057441">vadd</a>(<a class="code" href="namespacearm__compute.xhtml#af311129b4dccf2fbd9307a7d644876d1">vget_high</a>(vec_sum), <a class="code" href="namespacearm__compute.xhtml#a3bb60064e505cfd3a0d43528a3c1845d">vget_low</a>(vec_sum));</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;            T <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a>                 = reduce_add([](T a, T <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>) -&gt; T { <span class="keywordflow">return</span> a + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>; }, sum_8_byte);</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;            <span class="comment">/* Run remaining elements */</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;            <span class="keywordflow">for</span>(; i &lt; input_width; ++i)</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;            {</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                T element = std::exp((in_ptr[i] - max_val) * beta);</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a> += element;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                tmp_ptr[i] = element;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;            }</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;            sum_inversed = T(1) / <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a>;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        }</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        <span class="comment">/* Normalize exponentials */</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        {</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            <span class="comment">/* Loop over row and compute softmax */</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;            <span class="keywordtype">int</span> i = 0;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;            {</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                constexpr <span class="keywordtype">int</span> vec_size = <a class="code" href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">vec_size_of</a>(vec_16_byte_t&lt;T&gt; {});</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                <span class="keywordflow">for</span>(; i &lt;= (input_width - vec_size); i += vec_size)</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                {</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                    <span class="keyword">auto</span>             vec_in           = vld&lt;vec_16_byte_t&lt;T&gt;&gt;(tmp_ptr + i);</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                    vec_16_byte_t&lt;T&gt; normalized_value = <a class="code" href="namespacearm__compute.xhtml#a5dce3fda8114a32a2c8f1f517adca368">vmul_n</a>(vec_in, sum_inversed);</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a3753b9d735032ba72e7df0c5cbba31a1">vst</a>(out_ptr + i, normalized_value);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                }</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            }</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;            <span class="comment">/* Run remaining elements */</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;            <span class="keywordflow">for</span>(; i &lt; input_width; ++i)</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            {</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                out_ptr[i] = tmp_ptr[i] * sum_inversed;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;            }</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;        }</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    },</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    in_it, max_it, out_it);</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;}</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#a83bde72fd3fc3d67311f78315eafd23c">  756</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#a83bde72fd3fc3d67311f78315eafd23c">NELogits1DSoftmaxKernel::NELogits1DSoftmaxKernel</a>()</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    : _func(nullptr), _input(nullptr), _max(nullptr), _output(nullptr), _beta(1.0f), _tmp(nullptr)</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;{</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;}</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#ad7a5f63cd7550fd2712d6c0e1e677419">  761</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#ad7a5f63cd7550fd2712d6c0e1e677419">NELogits1DSoftmaxKernel::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *max, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <span class="keywordtype">float</span> beta, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tmp)</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;{</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input, max, output, tmp);</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), max-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), tmp-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    <span class="comment">// Perform validation step</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(validate_arguments_logits_softmax(*input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), *max-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), *output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), beta, *tmp-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()));</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    <span class="keyword">auto</span> win_config = validate_and_configure_window_logits_softmax(*input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), *max-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), *output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), *tmp-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(win_config.first);</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <span class="keywordflow">switch</span>(input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>())</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    {</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            _func = &amp;logits_1d_softmax_qasymm8;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;            _func = &amp;logits_1d_softmax_float&lt;float16_t&gt;;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;            _func = &amp;logits_1d_softmax_float&lt;float&gt;;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported data type.&quot;</span>);</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    }</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    _input  = input;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    _max    = max;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    _output = output;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    _beta   = beta;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    _tmp    = tmp;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    INEKernel::configure(win_config.second);</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;}</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#ae9a64d99f08581b961e1ac5a5fc46af8">  798</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#ae9a64d99f08581b961e1ac5a5fc46af8">NELogits1DSoftmaxKernel::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *max,</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <span class="keywordtype">float</span> beta, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tmp)</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;{</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input, max, output, tmp);</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_logits_softmax(*input, *max, *output, beta, *tmp));</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window_logits_softmax(*input-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *max-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *output-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>(), *tmp-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()).first);</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;}</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">  809</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">NELogits1DSoftmaxKernel::run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>)</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;{</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    <a class="code" href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">INEKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_elems_processed_per_iteration = _input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a74dfd07380a290c34fe7c8e065029b95">valid_region</a>().<a class="code" href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">shape</a>.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>();</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> tmp_size_for_thread               = _tmp-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>() * num_elems_processed_per_iteration;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_tmp-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>() &lt; (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>.num_threads * tmp_size_for_thread));</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    <span class="keywordtype">void</span> *tmp_for_thread = _tmp-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>() + (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>.thread_id * tmp_size_for_thread);</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    (*_func)(*_input, *_max, tmp_for_thread, *_output, _beta, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;}</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="namespacearm__compute_xhtml_a534a101b6176c3e065eba4b4cde7a40e"><div class="ttname"><a href="namespacearm__compute.xhtml#a534a101b6176c3e065eba4b4cde7a40e">arm_compute::elem_type_t</a></div><div class="ttdeci">decltype(vget_lane&lt; 0 &gt;(std::declval&lt; V &gt;())) elem_type_t</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00120">NESoftmaxLayerKernel.cpp:120</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a671b1da70aa3efc02c508648ae2d81b5"><div class="ttname"><a href="namespacearm__compute.xhtml#a671b1da70aa3efc02c508648ae2d81b5">arm_compute::sqadd</a></div><div class="ttdeci">T sqadd(T a, T b)</div></div>
<div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
<div class="ttc" id="_n_e_softmax_layer_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_softmax_layer_kernel_8h.xhtml">NESoftmaxLayerKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1cb1c90103d83ca052919e98dbaac553"><div class="ttname"><a href="namespacearm__compute.xhtml#a1cb1c90103d83ca052919e98dbaac553">arm_compute::vmax</a></div><div class="ttdeci">vec_16_byte_t&lt; uint8_t &gt; vmax(vec_16_byte_t&lt; uint8_t &gt; a, vec_16_byte_t&lt; uint8_t &gt; b)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00218">NESoftmaxLayerKernel.cpp:218</a></div></div>
<div class="ttc" id="_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_a1fcd64682b37ed3c2098d0094ce788d8"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">arm_compute::ValidRegion::shape</a></div><div class="ttdeci">TensorShape shape</div><div class="ttdoc">Shape of the valid region.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00247">Types.h:247</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5cd8407762d2446f8eceefcc4b63e537"><div class="ttname"><a href="namespacearm__compute.xhtml#a5cd8407762d2446f8eceefcc4b63e537">arm_compute::vec_n_byte_t</a></div><div class="ttdeci">vec_n_t&lt; T, N/sizeof(T) &gt; vec_n_byte_t</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00086">NESoftmaxLayerKernel.cpp:86</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml">arm_compute::BorderSize</a></div><div class="ttdoc">Container for 2D border size.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00259">Types.h:259</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00545">Validate.h:545</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab6bc00d6c4503a0bc303dd363e021476"><div class="ttname"><a href="namespacearm__compute.xhtml#ab6bc00d6c4503a0bc303dd363e021476">arm_compute::vcvt&lt; uint8x16_t &gt;</a></div><div class="ttdeci">uint8x16_t vcvt&lt; uint8x16_t &gt;(float32x4x4_t vec)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00253">NESoftmaxLayerKernel.cpp:253</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1e36f8a2df3d6bd1756b90e2efb151e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a1e36f8a2df3d6bd1756b90e2efb151e9">arm_compute::ptr_t</a></div><div class="ttdeci">T * ptr_t</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00098">NESoftmaxLayerKernel.cpp:98</a></div></div>
<div class="ttc" id="reduction__operation_8cl_xhtml_ab0df00f5333da51860deb93deb44a782"><div class="ttname"><a href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a></div><div class="ttdeci">DATA_TYPE sum(__global const DATA_TYPE *input)</div><div class="ttdoc">Calculate sum of a vector.</div><div class="ttdef"><b>Definition:</b> <a href="reduction__operation_8cl_source.xhtml#l00065">reduction_operation.cl:65</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00193">Error.h:193</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="_window_8h_xhtml"><div class="ttname"><a href="_window_8h.xhtml">Window.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5dce3fda8114a32a2c8f1f517adca368"><div class="ttname"><a href="namespacearm__compute.xhtml#a5dce3fda8114a32a2c8f1f517adca368">arm_compute::vmul_n</a></div><div class="ttdeci">vec_16_byte_t&lt; float &gt; vmul_n(vec_16_byte_t&lt; float &gt; vec, float val)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00232">NESoftmaxLayerKernel.cpp:232</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00791">Validate.h:791</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3fd0d641ff68bfe8475361a13de7b1cc"><div class="ttname"><a href="namespacearm__compute.xhtml#a3fd0d641ff68bfe8475361a13de7b1cc">arm_compute::vec_n_t</a></div><div class="ttdeci">typename vec_n_type&lt; T, N &gt;::type vec_n_t</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00083">NESoftmaxLayerKernel.cpp:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_max_kernel_xhtml_a7dcfcda37359d31c2510ad865f4ca051"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a7dcfcda37359d31c2510ad865f4ca051">arm_compute::NELogits1DMaxKernel::NELogits1DMaxKernel</a></div><div class="ttdeci">NELogits1DMaxKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00427">NESoftmaxLayerKernel.cpp:427</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00337">Error.h:337</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00327">Error.h:327</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a926fa1a0e7fd320cff5ba6c6f62f463b"><div class="ttname"><a href="namespacearm__compute.xhtml#a926fa1a0e7fd320cff5ba6c6f62f463b">arm_compute::const_ptr_t</a></div><div class="ttdeci">const T * const_ptr_t</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00095">NESoftmaxLayerKernel.cpp:95</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a7462bb232b41864413a4d8603a660d16"><div class="ttname"><a href="namespacearm__compute.xhtml#a7462bb232b41864413a4d8603a660d16">arm_compute::sqsub</a></div><div class="ttdeci">T sqsub(T a, T b)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3bb60064e505cfd3a0d43528a3c1845d"><div class="ttname"><a href="namespacearm__compute.xhtml#a3bb60064e505cfd3a0d43528a3c1845d">arm_compute::vget_low</a></div><div class="ttdeci">vec_8_byte_t&lt; uint8_t &gt; vget_low(vec_16_byte_t&lt; uint8_t &gt; vec)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00218">NESoftmaxLayerKernel.cpp:218</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a046fbca6a9505ce038bc02830c739fed"><div class="ttname"><a href="_error_8h.xhtml#a046fbca6a9505ce038bc02830c739fed">ARM_COMPUTE_CREATE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_CREATE_ERROR(error_code,...)</div><div class="ttdoc">Creates an error with a given message.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00167">Error.h:167</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab7980fa5ee693e3282a76da047a1c3b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps=Steps(), bool skip_border=false, BorderSize border_size=BorderSize())</div><div class="ttdoc">Calculate the maximum window for a given tensor shape and border setting.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_helpers_8cpp_source.xhtml#l00028">Helpers.cpp:28</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2018 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a47be6fa38308d0003c25b60b7dbc45ce"><div class="ttname"><a href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00201">Helpers.inl:201</a></div></div>
<div class="ttc" id="_c_p_p_2_validate_8h_xhtml_ad2633f3560322e1f8d926949dec1b730"><div class="ttname"><a href="_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED(tensor)</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_validate_8h_source.xhtml#l00071">Validate.h:71</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a74dfd07380a290c34fe7c8e065029b95"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a74dfd07380a290c34fe7c8e065029b95">arm_compute::ITensorInfo::valid_region</a></div><div class="ttdeci">virtual ValidRegion valid_region() const =0</div><div class="ttdoc">Valid region of the tensor.</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_max_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NELogits1DMaxKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00486">NESoftmaxLayerKernel.cpp:486</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abe949a509da417044624d62a73057441"><div class="ttname"><a href="namespacearm__compute.xhtml#abe949a509da417044624d62a73057441">arm_compute::vadd</a></div><div class="ttdeci">vec_8_byte_t&lt; float &gt; vadd(vec_8_byte_t&lt; float &gt; a, vec_8_byte_t&lt; float &gt; b)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00232">NESoftmaxLayerKernel.cpp:232</a></div></div>
<div class="ttc" id="_saturate_cast_8h_xhtml"><div class="ttname"><a href="_saturate_cast_8h.xhtml">SaturateCast.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_softmax_kernel_xhtml_a83bde72fd3fc3d67311f78315eafd23c"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#a83bde72fd3fc3d67311f78315eafd23c">arm_compute::NELogits1DSoftmaxKernel::NELogits1DSoftmaxKernel</a></div><div class="ttdeci">NELogits1DSoftmaxKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00756">NESoftmaxLayerKernel.cpp:756</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_softmax_kernel_xhtml_ae9a64d99f08581b961e1ac5a5fc46af8"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#ae9a64d99f08581b961e1ac5a5fc46af8">arm_compute::NELogits1DSoftmaxKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *max, const ITensorInfo *output, const float beta, const ITensorInfo *tmp)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NELogits1DSoftmaxKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00798">NESoftmaxLayerKernel.cpp:798</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_aa87f8fc26981b0f3228a78c83b95b802"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">arm_compute::Dimensions::x</a></div><div class="ttdeci">T x() const</div><div class="ttdoc">Alias to access the size of the first dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00081">Dimensions.h:81</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00066">QuantizationInfo.h:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_softmax_kernel_xhtml_ad7a5f63cd7550fd2712d6c0e1e677419"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#ad7a5f63cd7550fd2712d6c0e1e677419">arm_compute::NELogits1DSoftmaxKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input, const ITensor *max, ITensor *output, const float beta, ITensor *tmp)</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00761">NESoftmaxLayerKernel.cpp:761</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab448de27f94cd38059b63980c3c08f40"><div class="ttname"><a href="namespacearm__compute.xhtml#ab448de27f94cd38059b63980c3c08f40">arm_compute::vec_8_byte_t</a></div><div class="ttdeci">vec_n_byte_t&lt; T, 8 &gt; vec_8_byte_t</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00092">NESoftmaxLayerKernel.cpp:92</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afc4bd8e872567d9c4c57d89eb0bb3da1"><div class="ttname"><a href="namespacearm__compute.xhtml#afc4bd8e872567d9c4c57d89eb0bb3da1">arm_compute::update_window_and_padding</a></div><div class="ttdeci">bool update_window_and_padding(Window &amp;win, Ts &amp;&amp;... patterns)</div><div class="ttdoc">Update window and padding size for each of the access patterns.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00402">Helpers.h:402</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00160">Error.h:160</a></div></div>
<div class="ttc" id="_c_p_p_2_validate_8h_xhtml"><div class="ttname"><a href="_c_p_p_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="_n_e_softmax_layer_kernel_8cpp_xhtml_af743beb1ad23bceb05b4eeb3e491839c"><div class="ttname"><a href="_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c">DECLARE_NEON_VEC_TYPE</a></div><div class="ttdeci">#define DECLARE_NEON_VEC_TYPE(T, N, V)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00049">NESoftmaxLayerKernel.cpp:49</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">arm_compute::Channel::U</a></div><div class="ttdoc">Cb/U channel.</div></div>
<div class="ttc" id="_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00443">Validate.h:443</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a146b84422a0eaf6c66ba8156425b5bdf"><div class="ttname"><a href="namespacearm__compute.xhtml#a146b84422a0eaf6c66ba8156425b5bdf">arm_compute::vcvt&lt; float32x4x4_t &gt;</a></div><div class="ttdeci">float32x4x4_t vcvt&lt; float32x4x4_t &gt;(uint8x16_t vec)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00238">NESoftmaxLayerKernel.cpp:238</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aae85042ef273ca700734604b5488f2ff"><div class="ttname"><a href="namespacearm__compute.xhtml#aae85042ef273ca700734604b5488f2ff">arm_compute::vpmax</a></div><div class="ttdeci">vec_8_byte_t&lt; uint8_t &gt; vpmax(vec_8_byte_t&lt; uint8_t &gt; a, vec_8_byte_t&lt; uint8_t &gt; b)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00218">NESoftmaxLayerKernel.cpp:218</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab237a0a375cf382d52b61653248d3d4a"><div class="ttname"><a href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">arm_compute::ceil_to_multiple</a></div><div class="ttdeci">auto ceil_to_multiple(S value, T divisor) -&gt; decltype(((value+divisor - 1)/divisor) *divisor)</div><div class="ttdoc">Computes the smallest number larger or equal to value that is a multiple of divisor.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00066">Utils.h:66</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1da797d2762c1cdbb73bfc83136c3a38"><div class="ttname"><a href="_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00288">Validate.h:288</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6cb464349a8f184ffb8eded9ae9e5925"><div class="ttname"><a href="namespacearm__compute.xhtml#a6cb464349a8f184ffb8eded9ae9e5925">arm_compute::vcvt</a></div><div class="ttdeci">VO vcvt(VI vec)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7fc93f37dac131a1a40b7921f9df3a9a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7fc93f37dac131a1a40b7921f9df3a9a">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">output_shape</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">ConvolutionLayer.cpp:174</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_ab988210662dbd3bf32fd563c7dd1bdbf"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">arm_compute::ITensor::buffer</a></div><div class="ttdeci">virtual uint8_t * buffer() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory.</div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad0ebbe865e9e6cfd1b2df041f8374ed0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad0ebbe865e9e6cfd1b2df041f8374ed0">arm_compute::vsub</a></div><div class="ttdeci">vec_16_byte_t&lt; float &gt; vsub(vec_16_byte_t&lt; float &gt; a, vec_16_byte_t&lt; float &gt; b)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00232">NESoftmaxLayerKernel.cpp:232</a></div></div>
<div class="ttc" id="classarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abb7e0f23a4f2e63f39433f158dad47ab"><div class="ttname"><a href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">arm_compute::data_size_from_type</a></div><div class="ttdeci">size_t data_size_from_type(DataType data_type)</div><div class="ttdoc">The size in bytes of the data type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00109">Utils.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels()</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_max_kernel_xhtml_a83a344e60eb7db895953a942abf16628"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a83a344e60eb7db895953a942abf16628">arm_compute::NELogits1DMaxKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output)</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00437">NESoftmaxLayerKernel.cpp:437</a></div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a85d0b4103385d996d4014691d2df0cf1"><div class="ttname"><a href="namespacearm__compute.xhtml#a85d0b4103385d996d4014691d2df0cf1">arm_compute::vld</a></div><div class="ttdeci">V vld(const_ptr_t&lt; elem_type_t&lt; V &gt;&gt; ptr)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aeabe5dd1c5751f380322a841d7ad8d7a"><div class="ttname"><a href="namespacearm__compute.xhtml#aeabe5dd1c5751f380322a841d7ad8d7a">arm_compute::vdup_n&lt; float32x4x4_t &gt;</a></div><div class="ttdeci">float32x4x4_t vdup_n&lt; float32x4x4_t &gt;(float val)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00300">NESoftmaxLayerKernel.cpp:300</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_aba910b683652be1f65437ef37a9da2a9"><div class="ttname"><a href="_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00610">Validate.h:610</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01030">Utils.h:1030</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aef7a69b9cf4a1732d2be114b9b9bf3e3"><div class="ttname"><a href="namespacearm__compute.xhtml#aef7a69b9cf4a1732d2be114b9b9bf3e3">arm_compute::vec_16_byte_t</a></div><div class="ttdeci">vec_n_byte_t&lt; T, 16 &gt; vec_16_byte_t</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00089">NESoftmaxLayerKernel.cpp:89</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a40552ea65ee3fc6d7fa7f1fb17baebe7"><div class="ttname"><a href="namespacearm__compute.xhtml#a40552ea65ee3fc6d7fa7f1fb17baebe7">arm_compute::vget_lane</a></div><div class="ttdeci">uint8_t vget_lane(vec_8_byte_t&lt; uint8_t &gt; vec)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00218">NESoftmaxLayerKernel.cpp:218</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a705ed42150ffbe645f7ba2fb5d0a5bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#a705ed42150ffbe645f7ba2fb5d0a5bb6">arm_compute::sqmul</a></div><div class="ttdeci">T sqmul(T a, T b)</div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00225">CPPTypes.h:225</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes.</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_max_kernel_xhtml_a423f9a45a52983b4de5e2b347f4369c7"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">arm_compute::NELogits1DMaxKernel::border_size</a></div><div class="ttdeci">BorderSize border_size() const override</div><div class="ttdoc">The size of the border for that kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00432">NESoftmaxLayerKernel.cpp:432</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af311129b4dccf2fbd9307a7d644876d1"><div class="ttname"><a href="namespacearm__compute.xhtml#af311129b4dccf2fbd9307a7d644876d1">arm_compute::vget_high</a></div><div class="ttdeci">vec_8_byte_t&lt; uint8_t &gt; vget_high(vec_16_byte_t&lt; uint8_t &gt; vec)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00218">NESoftmaxLayerKernel.cpp:218</a></div></div>
<div class="ttc" id="_n_e_math_8h_xhtml"><div class="ttname"><a href="_n_e_math_8h.xhtml">NEMath.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab55486f1153a4c5f507d4923b59fc6a0"><div class="ttname"><a href="namespacearm__compute.xhtml#ab55486f1153a4c5f507d4923b59fc6a0">arm_compute::vexpq_f32</a></div><div class="ttdeci">float32x4_t vexpq_f32(float32x4_t x)</div><div class="ttdoc">Calculate exponential.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3753b9d735032ba72e7df0c5cbba31a1"><div class="ttname"><a href="namespacearm__compute.xhtml#a3753b9d735032ba72e7df0c5cbba31a1">arm_compute::vst</a></div><div class="ttdeci">void vst(ptr_t&lt; uint8_t &gt; ptr, vec_8_byte_t&lt; uint8_t &gt; vec)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00218">NESoftmaxLayerKernel.cpp:218</a></div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00122">Helpers.inl:122</a></div></div>
<div class="ttc" id="_access_window_static_8h_xhtml"><div class="ttname"><a href="_access_window_static_8h.xhtml">AccessWindowStatic.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af4b13d125dfe1bec25b8df8840c6dd8f"><div class="ttname"><a href="namespacearm__compute.xhtml#af4b13d125dfe1bec25b8df8840c6dd8f">arm_compute::vec_size_of</a></div><div class="ttdeci">constexpr size_t vec_size_of(const V &amp;vec)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00123">NESoftmaxLayerKernel.cpp:123</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_max_kernel_xhtml_a968b23a6ef327fcfb5b99d58e3fbe883"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">arm_compute::NELogits1DMaxKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NELogits1DMaxKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00476">NESoftmaxLayerKernel.cpp:476</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1ec8dd7ea96aec0e4068497f0b5e17b2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">arm_compute::test::validation::set</a></div><div class="ttdeci">dst_shape set(0, output_wh.first)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">ConvolutionLayer.cpp:174</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_logits1_d_softmax_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NELogits1DSoftmaxKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00809">NESoftmaxLayerKernel.cpp:809</a></div></div>
<div class="ttc" id="_n_e_softmax_layer_kernel_8cpp_xhtml_a343c67edf168094b802af154b23df92a"><div class="ttname"><a href="_n_e_softmax_layer_kernel_8cpp.xhtml#a343c67edf168094b802af154b23df92a">FORWARD_DECLARE_VGET_LANE_FOR_TYPE</a></div><div class="ttdeci">#define FORWARD_DECLARE_VGET_LANE_FOR_TYPE(TYPE)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00100">NESoftmaxLayerKernel.cpp:100</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00074">Types.h:74</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00205">Validate.h:205</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a91d2c1f68de68401d1aa465e27f78ab0"><div class="ttname"><a href="namespacearm__compute.xhtml#a91d2c1f68de68401d1aa465e27f78ab0">arm_compute::vexp</a></div><div class="ttdeci">float32x4x4_t vexp(float32x4x4_t vec)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00267">NESoftmaxLayerKernel.cpp:267</a></div></div>
<div class="ttc" id="_n_e_fixed_point_8h_xhtml"><div class="ttname"><a href="_n_e_fixed_point_8h.xhtml">NEFixedPoint.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00940">Validate.h:940</a></div></div>
<div class="ttc" id="_validate_8h_xhtml"><div class="ttname"><a href="_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2603e5f72e3fa052025c189c1a6647ce"><div class="ttname"><a href="namespacearm__compute.xhtml#a2603e5f72e3fa052025c189c1a6647ce">arm_compute::vdup_n</a></div><div class="ttdeci">V vdup_n(elem_type_t&lt; V &gt; val)</div></div>
<div class="ttc" id="_n_e_softmax_layer_kernel_8cpp_xhtml_aedbe837d4d203f117c652cfc87bf659e"><div class="ttname"><a href="_n_e_softmax_layer_kernel_8cpp.xhtml#aedbe837d4d203f117c652cfc87bf659e">DECLARE_NEON_FUNCTIONS_FOR_FLOAT</a></div><div class="ttdeci">#define DECLARE_NEON_FUNCTIONS_FOR_FLOAT(TYPE, TAG)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00200">NESoftmaxLayerKernel.cpp:200</a></div></div>
<div class="ttc" id="_n_e_softmax_layer_kernel_8cpp_xhtml_a32a426c4abdceda8e1c40005df27f8d4"><div class="ttname"><a href="_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4">DECLARE_NEON_FUNCTIONS_FOR_TYPE</a></div><div class="ttdeci">#define DECLARE_NEON_FUNCTIONS_FOR_TYPE(TYPE, TAG)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00133">NESoftmaxLayerKernel.cpp:133</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_n_e_softmax_layer_kernel_8cpp.xhtml">NESoftmaxLayerKernel.cpp</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:24 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
