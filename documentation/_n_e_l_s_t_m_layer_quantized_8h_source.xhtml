<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/NEON/functions/NELSTMLayerQuantized.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_l_s_t_m_layer_quantized_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NELSTMLayerQuantized.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_l_s_t_m_layer_quantized_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_NELSTMLAYERQUANTIZED_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_NELSTMLAYERQUANTIZED_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_activation_layer_8h.xhtml">arm_compute/runtime/NEON/functions/NEActivationLayer.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_arithmetic_addition_8h.xhtml">arm_compute/runtime/NEON/functions/NEArithmeticAddition.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_concatenate_layer_8h.xhtml">arm_compute/runtime/NEON/functions/NEConcatenateLayer.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_dequantization_layer_8h.xhtml">arm_compute/runtime/NEON/functions/NEDequantizationLayer.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_elementwise_operations_8h.xhtml">arm_compute/runtime/NEON/functions/NEElementwiseOperations.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_fully_connected_layer_8h.xhtml">arm_compute/runtime/NEON/functions/NEFullyConnectedLayer.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8h.xhtml">arm_compute/runtime/NEON/functions/NEGEMMLowpMatrixMultiplyCore.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_g_e_m_m_lowp_output_stage_8h.xhtml">arm_compute/runtime/NEON/functions/NEGEMMLowpOutputStage.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_pixel_wise_multiplication_8h.xhtml">arm_compute/runtime/NEON/functions/NEPixelWiseMultiplication.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_quantization_layer_8h.xhtml">arm_compute/runtime/NEON/functions/NEQuantizationLayer.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_slice_8h.xhtml">arm_compute/runtime/NEON/functions/NESlice.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_transpose_8h.xhtml">arm_compute/runtime/NEON/functions/NETranspose.h</a>&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_l_s_t_m_params_8h.xhtml">arm_compute/runtime/common/LSTMParams.h</a>&quot;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">// Forward declarations</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">class </span>ITensor;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">   63</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#a806ae351d9c6988ec1743791661c001f">NELSTMLayerQuantized</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#a806ae351d9c6988ec1743791661c001f">NELSTMLayerQuantized</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#a806ae351d9c6988ec1743791661c001f">NELSTMLayerQuantized</a>(<a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#ab220beb8e9894d976250a2359b39a35a">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#ab220beb8e9894d976250a2359b39a35a">operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">NELSTMLayerQuantized</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#a6b3a5150a131fe61dc28ab201bf98db3">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input_to_input_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input_to_forget_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input_to_cell_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input_to_output_weights,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *recurrent_to_input_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *recurrent_to_forget_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *recurrent_to_cell_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *recurrent_to_output_weights,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input_gate_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *forget_gate_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *cell_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output_gate_bias,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                   <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *cell_state_in, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output_state_in,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                   <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *cell_state_out, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output_state_out);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#aea08b58ba60ca803b947023ce07c5f79">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_input_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_forget_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_cell_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_output_weights,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_input_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_forget_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_cell_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_output_weights,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_gate_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *forget_gate_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_gate_bias,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_state_in, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_state_in,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_state_out, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_state_out);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml">MemoryGroup</a> _memory_group;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">// Functions used</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml">NEGEMMLowpMatrixMultiplyCore</a>                        _gemmlowp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point.xhtml">NEGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPoint</a> _output_stage;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml">NETranspose</a>                                         _transpose_weights;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_concatenate_layer.xhtml">NEConcatenateLayer</a>                                  _concat_input_weights;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_concatenate_layer.xhtml">NEConcatenateLayer</a>                                  _concat_recurrent_weights;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_concatenate_layer.xhtml">NEConcatenateLayer</a>                                  _concat_weights;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_concatenate_layer.xhtml">NEConcatenateLayer</a>                                  _concat_inputs;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_concatenate_layer.xhtml">NEConcatenateLayer</a>                                  _concat_bias;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a>                                   _sigmoid_forget_gate;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a>                                   _sigmoid_input_gate;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a>                                   _sigmoid_output_gate;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a>                                   _tanh_modulation_gate;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a>                                   _tanh_output_state;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml">NEArithmeticAddition</a>                                _add1;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml">NEArithmeticAddition</a>                                _add2;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">NEPixelWiseMultiplication</a>                           _mul1;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">NEPixelWiseMultiplication</a>                           _mul2;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">NEPixelWiseMultiplication</a>                           _mul3;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a>                                             _slice_input_tensor;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a>                                             _slice_forget_tensor;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a>                                             _slice_cell_tensor;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a>                                             _slice_output_tensor;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_dequantization_layer.xhtml">NEDequantizationLayer</a>                               _dequantize;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_quantization_layer.xhtml">NEQuantizationLayer</a>                                 _quantize;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// Tensor pointers</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_input_to_input_weights;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_input_to_forget_weights;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_input_to_cell_weights;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_input_to_output_weights;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_recurrent_to_input_weights;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_recurrent_to_forget_weights;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_recurrent_to_cell_weights;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_recurrent_to_output_weights;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_input_gate_bias;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_forget_gate_bias;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_cell_bias;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_output_gate_bias;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="comment">// Temporary tensors</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _recurrent_weights;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _input_weights;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _weights;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _input;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _weights_transposed;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _output_highp;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _output_lowp;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _bias;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _forget_gate_input;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _input_gate_input;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _output_gate_input;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _input_modulation_gate_input;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _forget_gate_output;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _input_gate_output;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _output_gate_output;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _input_modulation_gate_output;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _cell_state1;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _cell_state2;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _output_state_tmp;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _output_state_out_symm;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> _output_state_out_f32;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordtype">bool</span> _is_prepared;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;};</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_NELSTMLAYERQUANTIZED_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_i_function_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a></div><div class="ttdoc">Base class for all functions.</div><div class="ttdef"><b>Definition:</b> <a href="_i_function_8h_source.xhtml#l00030">IFunction.h:30</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_arithmetic_addition_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml">arm_compute::NEArithmeticAddition</a></div><div class="ttdoc">Basic function to run NEArithmeticAdditionKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_arithmetic_addition_8h_source.xhtml#l00035">NEArithmeticAddition.h:35</a></div></div>
<div class="ttc" id="_n_e_g_e_m_m_lowp_matrix_multiply_core_8h_xhtml"><div class="ttname"><a href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8h.xhtml">NEGEMMLowpMatrixMultiplyCore.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_slice_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_slice.xhtml">arm_compute::NESlice</a></div><div class="ttdoc">Basic function to perform tensor slicing.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_slice_8h_source.xhtml#l00035">NESlice.h:35</a></div></div>
<div class="ttc" id="_n_e_g_e_m_m_lowp_output_stage_8h_xhtml"><div class="ttname"><a href="_n_e_g_e_m_m_lowp_output_stage_8h.xhtml">NEGEMMLowpOutputStage.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_quantization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_quantization_layer.xhtml">arm_compute::NEQuantizationLayer</a></div><div class="ttdoc">Basic function to simulate a quantization layer.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_quantization_layer_8h_source.xhtml#l00044">NEQuantizationLayer.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2018 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized_xhtml_a806ae351d9c6988ec1743791661c001f"><div class="ttname"><a href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#a806ae351d9c6988ec1743791661c001f">arm_compute::NELSTMLayerQuantized::NELSTMLayerQuantized</a></div><div class="ttdeci">NELSTMLayerQuantized(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00045">NELSTMLayerQuantized.cpp:45</a></div></div>
<div class="ttc" id="_n_e_dequantization_layer_8h_xhtml"><div class="ttname"><a href="_n_e_dequantization_layer_8h.xhtml">NEDequantizationLayer.h</a></div></div>
<div class="ttc" id="_n_e_activation_layer_8h_xhtml"><div class="ttname"><a href="_n_e_activation_layer_8h.xhtml">NEActivationLayer.h</a></div></div>
<div class="ttc" id="_n_e_elementwise_operations_8h_xhtml"><div class="ttname"><a href="_n_e_elementwise_operations_8h.xhtml">NEElementwiseOperations.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml">arm_compute::NELSTMLayerQuantized</a></div><div class="ttdoc">Basic function to run NELSTMLayerQuantized.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_l_s_t_m_layer_quantized_8h_source.xhtml#l00063">NELSTMLayerQuantized.h:63</a></div></div>
<div class="ttc" id="_n_e_transpose_8h_xhtml"><div class="ttname"><a href="_n_e_transpose_8h.xhtml">NETranspose.h</a></div></div>
<div class="ttc" id="_n_e_slice_8h_xhtml"><div class="ttname"><a href="_n_e_slice_8h.xhtml">NESlice.h</a></div></div>
<div class="ttc" id="_n_e_arithmetic_addition_8h_xhtml"><div class="ttname"><a href="_n_e_arithmetic_addition_8h.xhtml">NEArithmeticAddition.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml">arm_compute::Tensor</a></div><div class="ttdoc">Basic implementation of the tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8h_source.xhtml#l00037">Tensor.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_transpose_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_transpose.xhtml">arm_compute::NETranspose</a></div><div class="ttdoc">Basic function to transpose a matrix on NEON.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_transpose_8h_source.xhtml#l00039">NETranspose.h:39</a></div></div>
<div class="ttc" id="_l_s_t_m_params_8h_xhtml"><div class="ttname"><a href="_l_s_t_m_params_8h.xhtml">LSTMParams.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_dequantization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_dequantization_layer.xhtml">arm_compute::NEDequantizationLayer</a></div><div class="ttdoc">Basic function to run NEDequantizationLayerKernel that dequantizes an input tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_dequantization_layer_8h_source.xhtml#l00037">NEDequantizationLayer.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized_xhtml_aa9b93ef660fc3c5b4b19d3fc7b891b77"><div class="ttname"><a href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">arm_compute::NELSTMLayerQuantized::prepare</a></div><div class="ttdeci">void prepare() override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00491">NELSTMLayerQuantized.cpp:491</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer.xhtml">arm_compute::NEActivationLayer</a></div><div class="ttdoc">Basic function to run NEActivationLayerKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_8h_source.xhtml#l00039">NEActivationLayer.h:39</a></div></div>
<div class="ttc" id="_n_e_quantization_layer_8h_xhtml"><div class="ttname"><a href="_n_e_quantization_layer_8h.xhtml">NEQuantizationLayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized_xhtml_ab220beb8e9894d976250a2359b39a35a"><div class="ttname"><a href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#ab220beb8e9894d976250a2359b39a35a">arm_compute::NELSTMLayerQuantized::operator=</a></div><div class="ttdeci">NELSTMLayerQuantized &amp; operator=(const NELSTMLayerQuantized &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_concatenate_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_concatenate_layer.xhtml">arm_compute::NEConcatenateLayer</a></div><div class="ttdoc">Basic function to execute concatenate tensors along a given axis.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_concatenate_layer_8h_source.xhtml#l00050">NEConcatenateLayer.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml">arm_compute::MemoryGroupBase&lt; Tensor &gt;</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NELSTMLayerQuantized::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00444">NELSTMLayerQuantized.cpp:444</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml">arm_compute::NEPixelWiseMultiplication</a></div><div class="ttdoc">Basic function to run NEPixelWiseMultiplicationKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8h_source.xhtml#l00035">NEPixelWiseMultiplication.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized_xhtml_a6b3a5150a131fe61dc28ab201bf98db3"><div class="ttname"><a href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#a6b3a5150a131fe61dc28ab201bf98db3">arm_compute::NELSTMLayerQuantized::configure</a></div><div class="ttdeci">void configure(const ITensor *input, const ITensor *input_to_input_weights, const ITensor *input_to_forget_weights, const ITensor *input_to_cell_weights, const ITensor *input_to_output_weights, const ITensor *recurrent_to_input_weights, const ITensor *recurrent_to_forget_weights, const ITensor *recurrent_to_cell_weights, const ITensor *recurrent_to_output_weights, const ITensor *input_gate_bias, const ITensor *forget_gate_bias, const ITensor *cell_bias, const ITensor *output_gate_bias, ITensor *cell_state_in, const ITensor *output_state_in, ITensor *cell_state_out, ITensor *output_state_out)</div><div class="ttdoc">Initialize function's tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00057">NELSTMLayerQuantized.cpp:57</a></div></div>
<div class="ttc" id="_n_e_concatenate_layer_8h_xhtml"><div class="ttname"><a href="_n_e_concatenate_layer_8h.xhtml">NEConcatenateLayer.h</a></div></div>
<div class="ttc" id="_n_e_fully_connected_layer_8h_xhtml"><div class="ttname"><a href="_n_e_fully_connected_layer_8h.xhtml">NEFullyConnectedLayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point.xhtml">arm_compute::NEGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPoint</a></div><div class="ttdoc">Basic function to execute NEGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPoint on NEON.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_output_stage_8h_source.xhtml#l00178">NEGEMMLowpOutputStage.h:178</a></div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml">arm_compute::NEGEMMLowpMatrixMultiplyCore</a></div><div class="ttdoc">Basic function to execute GEMMLowpMatrixMultiplyCore on NEON.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8h_source.xhtml#l00055">NEGEMMLowpMatrixMultiplyCore.h:55</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized_xhtml_aea08b58ba60ca803b947023ce07c5f79"><div class="ttname"><a href="classarm__compute_1_1_n_e_l_s_t_m_layer_quantized.xhtml#aea08b58ba60ca803b947023ce07c5f79">arm_compute::NELSTMLayerQuantized::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *input_to_input_weights, const ITensorInfo *input_to_forget_weights, const ITensorInfo *input_to_cell_weights, const ITensorInfo *input_to_output_weights, const ITensorInfo *recurrent_to_input_weights, const ITensorInfo *recurrent_to_forget_weights, const ITensorInfo *recurrent_to_cell_weights, const ITensorInfo *recurrent_to_output_weights, const ITensorInfo *input_gate_bias, const ITensorInfo *forget_gate_bias, const ITensorInfo *cell_bias, const ITensorInfo *output_gate_bias, const ITensorInfo *cell_state_in, const ITensorInfo *output_state_in, const ITensorInfo *cell_state_out, const ITensorInfo *output_state_out)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NELSTMLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00236">NELSTMLayerQuantized.cpp:236</a></div></div>
<div class="ttc" id="_n_e_pixel_wise_multiplication_8h_xhtml"><div class="ttname"><a href="_n_e_pixel_wise_multiplication_8h.xhtml">NEPixelWiseMultiplication.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_65e289039e1347f87d412b0a1b1a312c.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_345bd7154d1542d1e03fd2836959a19d.xhtml">functions</a></li><li class="navelem"><a class="el" href="_n_e_l_s_t_m_layer_quantized_8h.xhtml">NELSTMLayerQuantized.h</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:20 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
