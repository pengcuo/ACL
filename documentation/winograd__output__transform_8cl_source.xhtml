<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/winograd_output_transform.cl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('winograd__output__transform_8cl_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">winograd_output_transform.cl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="winograd__output__transform_8cl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="activation__float__helpers_8h.xhtml">activation_float_helpers.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#if defined(NUM_TILES_X) &amp;&amp; defined(OUTPUT_TILE_W) &amp;&amp; defined(OUTPUT_TILE_H)</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#if defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 2</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_2x2_3x3_nchw(</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    ,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Each thread stores a 2x2/2x1 or 1x2 tile accordingly with the filter size</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23b9032d1b9d59547545e457f82ee478">CONVERT_TO_TENSOR4D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, SRC_DEPTH);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0, 0);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="comment">// Load the values across the 16 or 4 channels to compose the 4x4 or 4x1 tile</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d00 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 0 * src_stride_z));</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d01 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 1 * src_stride_z));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d02 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 2 * src_stride_z));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d03 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 3 * src_stride_z));</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// Compute the 2x1 or 1x2 output tile</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// out00 = d00 + d01 + d02</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// out01 = d01 - d02 - d03</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">float</span> out00 = d00 + d01 + d02;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">float</span> out01 = d01 - d02 - d03;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d10 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 4 * src_stride_z));</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d11 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 5 * src_stride_z));</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d12 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 6 * src_stride_z));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d13 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 7 * src_stride_z));</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d20 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 8 * src_stride_z));</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d21 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 9 * src_stride_z));</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d22 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 10 * src_stride_z));</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d23 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 11 * src_stride_z));</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d30 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 12 * src_stride_z));</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d31 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 13 * src_stride_z));</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d32 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 14 * src_stride_z));</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d33 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 15 * src_stride_z));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// Compute the 2x2 output tile</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">float</span> k0 = d01 + d11 + d21;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">float</span> k1 = d02 + d12 + d22;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">float</span> k2 = d11 - d21 - d31;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">float</span> k3 = d12 - d22 - d32;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// out00 = d00 + d10 + d20 + d01 + d11 + d21 + d02 + d12 + d22</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="comment">// out01 = d01 + d11 + d21 - (d02 + d12 + d22) - (d03 + d13 + d23)</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// out10 = d10 - d20 - d30 + (d11 - d21 - d31) + (d12 - d22 - d32)</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// out11 = d11 - d21 - d31 - (d12 - d22 - d32) - (d13 - d23 - d33)</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">float</span> out00 = d10;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">float</span> out01 = -d13;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">float</span> out10 = d10;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordtype">float</span> out11 = -d13;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    out00 += d00 + d20 + k0 + k1;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    out01 += k0 - k1 - (d03 + d23);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    out10 += -d20 - d30 + k2 + k3;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    out11 += k2 - k3 + d23 + d33;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">int</span> y_in  = get_global_id(1);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">int</span> x_out = (y_in % NUM_TILES_X) * OUTPUT_TILE_W;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">int</span> y_out = (y_in / NUM_TILES_X) * OUTPUT_TILE_H;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">int</span> z_out = get_global_id(0);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">int</span> batch = get_global_id(2) / SRC_DEPTH;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (float) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, z_out)));</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    out00 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    out01 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">// Store the output tile</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">const</span> <span class="keyword">const</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 2)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2))(out00, out01), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 2)), A_VAL, B_VAL);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 0 * dst_stride_y)) = out0_dt.s0;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 1 * dst_stride_y)) = out0_dt.s1;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    vstore2(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2))(out00, out01), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 2)), A_VAL, B_VAL), 0,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 0 * dst_stride_y));</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    out10 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    out11 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    vstore2(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2))(out10, out11), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 2)), A_VAL, B_VAL), 0,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 1 * dst_stride_y));</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#define COMPUTE_TMP_COL_2x2_7x7(col, d0, d1, d2, d3, d4, d5, d6, d7) \</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">    ({                                                               \</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">        col.s0 = d0 + d1 + d2 + d3 + d4 + d5 + d6;                   \</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">        col.s1 = -d1 + d2 - 2 * d3 + 2 * d4 + -3 * d5 + 3 * d6 + d7; \</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">    })</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_2x2_7x7_nhwc(</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;{</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="comment">// Each thread stores a 4x4/4x1 or 1x4 tile</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23b9032d1b9d59547545e457f82ee478">CONVERT_TO_TENSOR4D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, SRC_DEPTH);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0, 0);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordtype">int</span> y_in  = get_global_id(1);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordtype">int</span> x_out = get_global_id(0);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordtype">int</span> y_out = (y_in % NUM_TILES_X) * OUTPUT_TILE_W;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordtype">int</span> z_out = (y_in / NUM_TILES_X) * OUTPUT_TILE_H;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordtype">int</span> batch = get_global_id(2) / SRC_DEPTH;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="comment">// Load the values across the channels to compose the input tile</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d00 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 0 * src_stride_z));</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d01 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 1 * src_stride_z));</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d02 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 2 * src_stride_z));</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d03 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 3 * src_stride_z));</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d04 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 4 * src_stride_z));</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d05 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 5 * src_stride_z));</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d06 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 6 * src_stride_z));</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d07 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 7 * src_stride_z));</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="comment">// Compute out00, out01, out02 and out03</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordtype">float</span> out00 = d00 + d01 + d02 + d03 + d04 + d05 + d06;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordtype">float</span> out01 = -d01 + d02 - 2.f * d03 + 2.0f * d04 - 3.0f * d05 + 3.0f * d06 + d07;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (float) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, x_out)));</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    out00 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    out01 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="comment">// Store the output tile</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    int2 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int2)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">#else                                                                         </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    int2 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int2)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="preprocessor">#endif                                                                        </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = min(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> + (int2)(0, 1) * (int2)dst_stride_z, (int2)dst_size); <span class="comment">// If address is beyond the last plane, clamp it to dst_size (which points to the last padding).</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 2)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    out0_dt                                      = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2))(out00, out01), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 2)), A_VAL, B_VAL);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0) = out0_dt.s0;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1) = out0_dt.s1;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 2)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2))(out00, out01), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 2)), A_VAL, B_VAL);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + 0 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) = out0_dt.s0;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + 1 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) = out0_dt.s1;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">#else // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d10 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 8 * src_stride_z));</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d11 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 9 * src_stride_z));</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d12 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 10 * src_stride_z));</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d13 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 11 * src_stride_z));</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d14 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 12 * src_stride_z));</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d15 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 13 * src_stride_z));</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d16 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 14 * src_stride_z));</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d17 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 15 * src_stride_z));</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d20 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 16 * src_stride_z));</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d21 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 17 * src_stride_z));</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d22 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 18 * src_stride_z));</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d23 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 19 * src_stride_z));</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d24 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 20 * src_stride_z));</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d25 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 21 * src_stride_z));</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d26 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 22 * src_stride_z));</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d27 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 23 * src_stride_z));</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d30 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 24 * src_stride_z));</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d31 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 25 * src_stride_z));</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d32 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 26 * src_stride_z));</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d33 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 27 * src_stride_z));</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d34 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 28 * src_stride_z));</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d35 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 29 * src_stride_z));</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d36 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 30 * src_stride_z));</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d37 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 31 * src_stride_z));</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d40 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 32 * src_stride_z));</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d41 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 33 * src_stride_z));</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d42 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 34 * src_stride_z));</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d43 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 35 * src_stride_z));</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d44 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 36 * src_stride_z));</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d45 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 37 * src_stride_z));</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d46 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 38 * src_stride_z));</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d47 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 39 * src_stride_z));</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d50 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 40 * src_stride_z));</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d51 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 41 * src_stride_z));</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d52 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 42 * src_stride_z));</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d53 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 43 * src_stride_z));</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d54 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 44 * src_stride_z));</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d55 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 45 * src_stride_z));</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d56 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 46 * src_stride_z));</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d57 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 47 * src_stride_z));</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d60 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 48 * src_stride_z));</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d61 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 49 * src_stride_z));</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d62 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 50 * src_stride_z));</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d63 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 51 * src_stride_z));</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d64 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 52 * src_stride_z));</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d65 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 53 * src_stride_z));</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d66 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 54 * src_stride_z));</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d67 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 55 * src_stride_z));</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d70 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 56 * src_stride_z));</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d71 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 57 * src_stride_z));</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d72 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 58 * src_stride_z));</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d73 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 59 * src_stride_z));</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d74 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 60 * src_stride_z));</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d75 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 61 * src_stride_z));</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d76 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 62 * src_stride_z));</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d77 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 63 * src_stride_z));</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="comment">// Compute the 8x2 intermediate tensor</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2)</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    tmp_col0, tmp_col1, tmp_col2, tmp_col3, tmp_col4, tmp_col5, tmp_col6, tmp_col7;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    COMPUTE_TMP_COL_2x2_7x7(tmp_col0, d00, d10, d20, d30, d40, d50, d60, d70);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    COMPUTE_TMP_COL_2x2_7x7(tmp_col1, d01, d11, d21, d31, d41, d51, d61, d71);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    COMPUTE_TMP_COL_2x2_7x7(tmp_col2, d02, d12, d22, d32, d42, d52, d62, d72);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    COMPUTE_TMP_COL_2x2_7x7(tmp_col3, d03, d13, d23, d33, d43, d53, d63, d73);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    COMPUTE_TMP_COL_2x2_7x7(tmp_col4, d04, d14, d24, d34, d44, d54, d64, d74);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    COMPUTE_TMP_COL_2x2_7x7(tmp_col5, d05, d15, d25, d35, d45, d55, d65, d75);</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    COMPUTE_TMP_COL_2x2_7x7(tmp_col6, d06, d16, d26, d36, d46, d56, d66, d76);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    COMPUTE_TMP_COL_2x2_7x7(tmp_col7, d07, d17, d27, d37, d47, d57, d67, d77);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="comment">// Compute the 2x2 output tile</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    out_col0 = tmp_col0 + tmp_col1 + tmp_col2 + tmp_col3 + tmp_col4 + tmp_col5 + tmp_col6;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2)</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    out_col1 = -tmp_col1 + tmp_col2 - 2 * tmp_col3 + 2 * tmp_col4 - 3 * tmp_col5 + 3 * tmp_col6 + tmp_col7;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (float) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, x_out)));</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    out_col0 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    out_col1 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 2))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    int2 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int2)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    int2 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int2)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>      = min(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> + (int2)(0, 1) * (int2)dst_stride_z, (int2)dst_size); <span class="comment">// If address is beyond the last plane, clamp it to dst_size (which points to the last padding).</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    int2 mult_y = min((int2)dst_size - <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, (int2)1);                           <span class="comment">// If out of bound, we don&#39;t want to increase dst_stride_y, so we set the multiplier to 0. It will be 1 otherwise.</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="comment">// Store the output tile</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    out_col0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(out_col0, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)), A_VAL, B_VAL);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    out_col1_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(out_col1, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)), A_VAL, B_VAL);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 0 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0) = out_col0_dt.s0;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 1 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0) = out_col1_dt.s0;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 0 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1)     = out_col0_dt.s1;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    *(__global     <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 1 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1) = out_col1_dt.s1;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;}</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="preprocessor">#endif // defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 2</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="preprocessor">#if defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 4</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_4x4_3x3_nchw(</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    ,</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;)</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;{</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="comment">// Each thread stores a 4x4/4x1 or 1x4 tile</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23b9032d1b9d59547545e457f82ee478">CONVERT_TO_TENSOR4D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, SRC_DEPTH);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0, 0);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>                                                                   = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr                                                       = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="comment">// Load the values across the channels to compose the 6x6 or 6x1 tile</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d00 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 0 * src_stride_z));</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d01 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 1 * src_stride_z));</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d02 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 2 * src_stride_z));</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d03 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 3 * src_stride_z));</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d04 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 4 * src_stride_z));</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d05 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 5 * src_stride_z));</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="comment">// Compute out00, out01, out02 and out03</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordtype">float</span> out00 = d00 + d01 + d02 + d03 + d04;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="keywordtype">float</span> out01 = d01 - d02 + 2.0f * d03 - 2.0f * d04;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="keywordtype">float</span> out02 = d01 + d02 + 4.0f * d03 + 4.0f * d04;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="keywordtype">float</span> out03 = d01 - d02 + 8.0f * d03 - 8.0f * d04 + d05;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d10 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 6 * src_stride_z));</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d11 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 7 * src_stride_z));</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d12 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 8 * src_stride_z));</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d13 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 9 * src_stride_z));</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d14 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 10 * src_stride_z));</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d15 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 11 * src_stride_z));</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d20 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 12 * src_stride_z));</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d21 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 13 * src_stride_z));</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d22 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 14 * src_stride_z));</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d23 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 15 * src_stride_z));</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d24 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 16 * src_stride_z));</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d25 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 17 * src_stride_z));</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d30 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 18 * src_stride_z));</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d31 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 19 * src_stride_z));</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d32 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 20 * src_stride_z));</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d33 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 21 * src_stride_z));</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d34 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 22 * src_stride_z));</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d35 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 23 * src_stride_z));</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d40 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 24 * src_stride_z));</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d41 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 25 * src_stride_z));</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d42 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 26 * src_stride_z));</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d43 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 27 * src_stride_z));</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d44 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 28 * src_stride_z));</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d45 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 29 * src_stride_z));</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d50 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 30 * src_stride_z));</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d51 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 31 * src_stride_z));</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d52 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 32 * src_stride_z));</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d53 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 33 * src_stride_z));</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d54 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 34 * src_stride_z));</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d55 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 35 * src_stride_z));</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="comment">// Compute out00, out01, out02 and out03</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <span class="keywordtype">float</span> out00 = (float)d01 + (<span class="keywordtype">float</span>)d21 + (float)d41 + (<span class="keywordtype">float</span>)d11 + (float)d31;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordtype">float</span> out01 = (float)d01 + (<span class="keywordtype">float</span>)d21 + (float)d41 + (<span class="keywordtype">float</span>)d11 + (float)d31;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keywordtype">float</span> out02 = (float)d01 + (<span class="keywordtype">float</span>)d21 + (float)d41 + (<span class="keywordtype">float</span>)d11 + (float)d31;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keywordtype">float</span> out03 = (float)d01 + d21 + (<span class="keywordtype">float</span>)d41 + (float)d11 + (<span class="keywordtype">float</span>)d31;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keywordtype">float</span> k0 = d03 + d04 + d13 + d14 + d23 + d24 + d33 + d34 + d43 + d44;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="keywordtype">float</span> k1 = 2.0f * d03 - 2.0f * d04 + 2.0f * d13 - 2.0f * d14 + 2.0f * d23 - 2.0f * d24 + 2.0f * d33 - 2.0f * d34 + 2.0f * d43 - 2.0f * d44;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    out00 += k0 + d00 + d02 + d10 + d12 + d20 + d22 + d30 + d32 + d40 + d42;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    out01 += k1 - d02 - d12 - d22 - d32 - d42;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    out02 += 4.0f * k0 + d02 + d12 + d22 + d32 + d42;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    out03 += 4.0f * k1 - d02 - d12 - d22 - d32 - d42 + d05 + d15 + d25 + d35 + d45;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <span class="comment">// Compute out10, out11, out12 and out13</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <span class="keywordtype">float</span> out10 = d11 - d21 + 2.0f * d31 - 2.0f * d41;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="keywordtype">float</span> out11 = d11 - d21 + 2.0f * d31 - 2.0f * d41;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordtype">float</span> out12 = d11 - d21 + 2.0f * d31 - 2.0f * d41;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <span class="keywordtype">float</span> out13 = d11 - d21 + 2.0f * d31 - 2.0f * d41;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    k0 = d13 + d14 - d23 - d24 + 2.0f * d33 + 2.0f * d34 - 2.0f * d43 - 2.0f * d44;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    k1 = 2.0f * d13 - 2.0f * d14 - 2.0f * d23 + 2.0f * d24 + 4.0f * d33 - 4.0f * d34 - 4.0f * d43 + 4.0f * d44;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    out10 += k0 + d10 + d12 - d20 - d22 + 2.0f * d30 + 2.0f * d32 - 2.0f * d40 - 2.0f * d42;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    out11 += k1 - d12 + d22 - 2.0f * d32 + 2.0f * d42;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    out12 += 4.0f * k0 + d12 - d22 + 2.0f * d32 - 2.0f * d42;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    out13 += 4.0f * k1 - d12 + d15 + d22 - d25 - 2.0f * d32 + 2.0f * d35 + 2.0f * d42 - 2.0f * d45;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="comment">// Compute out20, out21, out22 and out23</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keywordtype">float</span> out20 = d11 + d21 + 4.0f * d31 + 4.0f * d41;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordtype">float</span> out21 = d11 + d21 + 4.0f * d31 + 4.0f * d41;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keywordtype">float</span> out22 = d11 + d21 + 4.0f * d31 + 4.0f * d41;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="keywordtype">float</span> out23 = d11 + d21 + 4.0f * d31 + 4.0f * d41;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    k0 = d13 + d14 + d23 + d24 + 4.0f * d33 + 4.0f * d34 + 4.0f * d43 + 4.0f * d44;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    k1 = 2.0f * d13 - 2.0f * d14 + 2.0f * d23 - 2.0f * d24 + 8.0f * d33 - 8.0f * d34 + 8.0f * d43 - 8.0f * d44;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    out20 += k0 + d10 + d12 + d20 + d22 + 4.0f * d30 + 4.0f * d32 + 4.0f * d40 + 4.0f * d42;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    out21 += k1 - d12 - d22 - 4.0f * d32 - 4.0f * d42;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    out22 += 4.0f * k0 + d12 + d22 + 4.0f * d32 + 4.0f * d42;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    out23 += 4.0f * k1 - d12 + d15 - d22 + d25 - 4.0f * d32 + 4.0f * d35 - 4.0f * d42 + 4.0f * d45;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="comment">// Compute out30, out31, out32 and out33</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordtype">float</span> out30 = d11 - d21 + 8.0f * d31 - 8.0f * d41 + d51;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keywordtype">float</span> out31 = d11 - d21 + 8.0f * d31 - 8.0f * d41 + d51;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <span class="keywordtype">float</span> out32 = d11 - d21 + 8.0f * d31 - 8.0f * d41 + d51;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordtype">float</span> out33 = d11 - d21 + 8.0f * d31 - 8.0f * d41 + d51;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    k0 = d13 + d14 - d23 - d24 + 8.0f * d33 + 8.0f * d34 - 8.0f * d43 - 8.0f * d44 + d53 + d54;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    k1 = 2.0f * d13 - 2.0f * d14 - 2.0f * d23 + 2.0f * d24 + 16.0f * d33 - 16.0f * d34 - 16.0f * d43 + 16.0f * d44 + 2.0f * d53 - 2.0f * d54;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    out30 += k0 + d10 + d12 - d20 - d22 + 8.0f * d30 + 8.0f * d32 - 8.0f * d40 - 8.0f * d42 + d50 + d52;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    out31 += k1 - d12 + d22 - 8.0f * d32 + 8.0f * d42 - d52;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    out32 += 4.0f * k0 + d12 - d22 + 8.0f * d32 - 8.0f * d42 + d52;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    out33 += 4.0f * k1 - d12 + d15 + d22 - d25 - 8.0f * d32 + 8.0f * d35 + 8.0f * d42 - 8.0f * d45 - d52 + d55;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="keywordtype">int</span> y_in  = get_global_id(1);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="keywordtype">int</span> x_out = (y_in % NUM_TILES_X) * OUTPUT_TILE_W;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keywordtype">int</span> y_out = (y_in / NUM_TILES_X) * OUTPUT_TILE_H;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keywordtype">int</span> z_out = get_global_id(0);</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <span class="keywordtype">int</span> batch = get_global_id(2) / SRC_DEPTH;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (float) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, z_out)));</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    out00 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    out01 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    out02 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    out03 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <span class="comment">// Store the output tile</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL);</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 0 * dst_stride_y)) = out0_dt.s0;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 1 * dst_stride_y)) = out0_dt.s1;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 2 * dst_stride_y)) = out0_dt.s2;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 3 * dst_stride_y)) = out0_dt.s3;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL), 0,</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 0 * dst_stride_y));</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    out10 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    out11 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    out12 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    out13 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    out20 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    out21 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    out22 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    out23 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    out30 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    out31 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    out32 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    out33 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out10, out11, out12, out13), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL), 0,</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 1 * dst_stride_y));</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out20, out21, out22, out23), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL), 0,</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 2 * dst_stride_y));</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out30, out31, out32, out33), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL), 0,</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 3 * dst_stride_y));</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;}</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_4x4_3x3_nhwc(</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;{</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    <span class="comment">// Each thread stores a 4x4/4x1 or 1x4 tile</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23b9032d1b9d59547545e457f82ee478">CONVERT_TO_TENSOR4D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, SRC_DEPTH);</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0, 0);</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>);</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0);</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <span class="comment">// Load the values across the 36 channels to compose the 6x6 or 6x1 tile</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d00 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 0 * src_stride_z));</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d01 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 1 * src_stride_z));</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d02 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 2 * src_stride_z));</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d03 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 3 * src_stride_z));</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d04 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 4 * src_stride_z));</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d05 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 5 * src_stride_z));</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    <span class="comment">// Compute out00, out01, out02 and out03</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <span class="keywordtype">float</span> out00 = d00 + d01 + d02 + d03 + d04;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordtype">float</span> out01 = d01 - d02 + 2.0f * d03 - 2.0f * d04;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <span class="keywordtype">float</span> out02 = d01 + d02 + 4.0f * d03 + 4.0f * d04;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="keywordtype">float</span> out03 = d01 - d02 + 8.0f * d03 - 8.0f * d04 + d05;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d10 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 6 * src_stride_z));</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d11 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 7 * src_stride_z));</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d12 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 8 * src_stride_z));</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d13 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 9 * src_stride_z));</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d14 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 10 * src_stride_z));</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d15 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 11 * src_stride_z));</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d20 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 12 * src_stride_z));</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d21 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 13 * src_stride_z));</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d22 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 14 * src_stride_z));</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d23 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 15 * src_stride_z));</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d24 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 16 * src_stride_z));</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d25 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 17 * src_stride_z));</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d30 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 18 * src_stride_z));</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d31 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 19 * src_stride_z));</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d32 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 20 * src_stride_z));</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d33 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 21 * src_stride_z));</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d34 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 22 * src_stride_z));</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d35 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 23 * src_stride_z));</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d40 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 24 * src_stride_z));</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d41 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 25 * src_stride_z));</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d42 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 26 * src_stride_z));</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d43 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 27 * src_stride_z));</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d44 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 28 * src_stride_z));</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d45 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 29 * src_stride_z));</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d50 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 30 * src_stride_z));</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d51 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 31 * src_stride_z));</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d52 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 32 * src_stride_z));</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d53 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 33 * src_stride_z));</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d54 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 34 * src_stride_z));</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d55 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 35 * src_stride_z));</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <span class="comment">// Compute out00, out01, out02 and out03</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keywordtype">float</span> out00 = d01 + d21 + d41 + d11 + d31;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <span class="keywordtype">float</span> out01 = d01 + d21 + d41 + d11 + d31;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    <span class="keywordtype">float</span> out02 = d01 + d21 + d41 + d11 + d31;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    <span class="keywordtype">float</span> out03 = d01 + d21 + d41 + d11 + d31;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="keywordtype">float</span> k0 = d03 + d04 + d13 + d14 + d23 + d24 + d33 + d34 + d43 + d44;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    <span class="keywordtype">float</span> k1 = 2.0f * d03 - 2.0f * d04 + 2.0f * d13 - 2.0f * d14 + 2.0f * d23 - 2.0f * d24 + 2.0f * d33 - 2.0f * d34 + 2.0f * d43 - 2.0f * d44;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    out00 += k0 + d00 + d02 + d10 + d12 + d20 + d22 + d30 + d32 + d40 + d42;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    out01 += k1 - d02 - d12 - d22 - d32 - d42;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    out02 += 4.0f * k0 + d02 + d12 + d22 + d32 + d42;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    out03 += 4.0f * k1 - d02 - d12 - d22 - d32 - d42 + d05 + d15 + d25 + d35 + d45;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <span class="comment">// Compute out10, out11, out12 and out13</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    <span class="keywordtype">float</span> out10 = d11 - d21 + 2.0f * d31 - 2.0f * d41;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    <span class="keywordtype">float</span> out11 = d11 - d21 + 2.0f * d31 - 2.0f * d41;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="keywordtype">float</span> out12 = d11 - d21 + 2.0f * d31 - 2.0f * d41;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="keywordtype">float</span> out13 = d11 - d21 + 2.0f * d31 - 2.0f * d41;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    k0 = d13 + d14 - d23 - d24 + 2.0f * d33 + 2.0f * d34 - 2.0f * d43 - 2.0f * d44;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    k1 = 2.0f * d13 - 2.0f * d14 - 2.0f * d23 + 2.0f * d24 + 4.0f * d33 - 4.0f * d34 - 4.0f * d43 + 4.0f * d44;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    out10 += k0 + d10 + d12 - d20 - d22 + 2.0f * d30 + 2.0f * d32 - 2.0f * d40 - 2.0f * d42;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    out11 += k1 - d12 + d22 - 2.0f * d32 + 2.0f * d42;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    out12 += 4.0f * k0 + d12 - d22 + 2.0f * d32 - 2.0f * d42;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    out13 += 4.0f * k1 - d12 + d15 + d22 - d25 - 2.0f * d32 + 2.0f * d35 + 2.0f * d42 - 2.0f * d45;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="comment">// Compute out20, out21, out22 and out23</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    <span class="keywordtype">float</span> out20 = d11 + d21 + 4.0f * d31 + 4.0f * d41;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    <span class="keywordtype">float</span> out21 = d11 + d21 + 4.0f * d31 + 4.0f * d41;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    <span class="keywordtype">float</span> out22 = d11 + d21 + 4.0f * d31 + 4.0f * d41;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="keywordtype">float</span> out23 = d11 + d21 + 4.0f * d31 + 4.0f * d41;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    k0 = d13 + d14 + d23 + d24 + 4.0f * d33 + 4.0f * d34 + 4.0f * d43 + 4.0f * d44;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    k1 = 2.0f * d13 - 2.0f * d14 + 2.0f * d23 - 2.0f * d24 + 8.0f * d33 - 8.0f * d34 + 8.0f * d43 - 8.0f * d44;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    out20 += k0 + d10 + d12 + d20 + d22 + 4.0f * d30 + 4.0f * d32 + 4.0f * d40 + 4.0f * d42;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    out21 += k1 - d12 - d22 - 4.0f * d32 - 4.0f * d42;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    out22 += 4.0f * k0 + d12 + d22 + 4.0f * d32 + 4.0f * d42;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    out23 += 4.0f * k1 - d12 + d15 - d22 + d25 - 4.0f * d32 + 4.0f * d35 - 4.0f * d42 + 4.0f * d45;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="comment">// Compute out30, out31, out32 and out33</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    <span class="keywordtype">float</span> out30 = d11 - d21 + 8.0f * d31 - 8.0f * d41 + d51;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    <span class="keywordtype">float</span> out31 = d11 - d21 + 8.0f * d31 - 8.0f * d41 + d51;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="keywordtype">float</span> out32 = d11 - d21 + 8.0f * d31 - 8.0f * d41 + d51;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    <span class="keywordtype">float</span> out33 = d11 - d21 + 8.0f * d31 - 8.0f * d41 + d51;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    k0 = d13 + d14 - d23 - d24 + 8.0f * d33 + 8.0f * d34 - 8.0f * d43 - 8.0f * d44 + d53 + d54;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    k1 = 2.0f * d13 - 2.0f * d14 - 2.0f * d23 + 2.0f * d24 + 16.0f * d33 - 16.0f * d34 - 16.0f * d43 + 16.0f * d44 + 2.0f * d53 - 2.0f * d54;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    out30 += k0 + d10 + d12 - d20 - d22 + 8.0f * d30 + 8.0f * d32 - 8.0f * d40 - 8.0f * d42 + d50 + d52;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    out31 += k1 - d12 + d22 - 8.0f * d32 + 8.0f * d42 - d52;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    out32 += 4.0f * k0 + d12 - d22 + 8.0f * d32 - 8.0f * d42 + d52;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    out33 += 4.0f * k1 - d12 + d15 + d22 - d25 - 8.0f * d32 + 8.0f * d35 + 8.0f * d42 - 8.0f * d45 - d52 + d55;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <span class="keywordtype">int</span> y_in  = get_global_id(1);</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    <span class="keywordtype">int</span> x_out = get_global_id(0);</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <span class="keywordtype">int</span> y_out = (y_in % NUM_TILES_X) * OUTPUT_TILE_W;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    <span class="keywordtype">int</span> z_out = (y_in / NUM_TILES_X) * OUTPUT_TILE_H;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="keywordtype">int</span> batch = get_global_id(2) / SRC_DEPTH;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, x_out)));</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    out00 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    out01 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    out02 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    out03 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) &amp; !defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    out10 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    out11 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    out12 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    out13 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    out20 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    out21 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    out22 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    out23 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    out30 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    out31 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    out32 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    out33 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) &amp; !defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    int4 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int4)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w);</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;<span class="preprocessor">#else                                                                               </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    int4       <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>                                            = (int4)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z);</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;<span class="preprocessor">#endif                                                                              </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = min(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> + (int4)(0, 1, 2, 3) * (int4)dst_stride_z, (int4)dst_size); <span class="comment">// If address is beyond the last plane, clamp it to dst_size (which points to the last padding).</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="comment">// Store the 1x4 output tile</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL);</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0)) = out0_dt.s0;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1)) = out0_dt.s1;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2)) = out0_dt.s2;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3)) = out0_dt.s3;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="preprocessor">#elif defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    <span class="comment">// Store the 4x1 output tile</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    <span class="keywordtype">int</span> mult_y = min(dst_size - <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, 1);</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)),</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                         A_VAL, B_VAL);</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y * 0 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)) = out0_dt.s0;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y * 1 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)) = out0_dt.s1;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y * 2 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)) = out0_dt.s2;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y * 3 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)) = out0_dt.s3;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="preprocessor">#else // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    int4 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int4)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w);</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    int4 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int4)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z);</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>      = min(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> + (int4)(0, 1, 2, 3) * (int4)dst_stride_z, (int4)dst_size); <span class="comment">// If address is beyond the last plane, clamp it to dst_size (which points to the last padding).</span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    int4 mult_y = min((int4)dst_size - <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, (int4)1);                                 <span class="comment">// If out of bound, we don&#39;t want to increase dst_stride_y, so we set the multiplier to 0. It will be 1 otherwise.</span></div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;    <span class="comment">// Store the 4x4 output tile</span></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL);</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    out1_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out10, out11, out12, out13), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL);</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;    out2_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out20, out21, out22, out23), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL);</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    out3_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out30, out31, out32, out33),</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                                                              <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)),</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;                         A_VAL, B_VAL);</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 0 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0)) = out0_dt.s0;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 1 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0)) = out0_dt.s1;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 2 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0)) = out0_dt.s2;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 3 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0)) = out0_dt.s3;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 0 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1)) = out1_dt.s0;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 1 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1)) = out1_dt.s1;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 2 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1)) = out1_dt.s2;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 3 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1)) = out1_dt.s3;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s2 * 0 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2)) = out2_dt.s0;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s2 * 1 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2)) = out2_dt.s1;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s2 * 2 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2)) = out2_dt.s2;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s2 * 3 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2)) = out2_dt.s3;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s3 * 0 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3)) = out3_dt.s0;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s3 * 1 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3)) = out3_dt.s1;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s3 * 2 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3)) = out3_dt.s2;</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s3 * 3 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3)) = out3_dt.s3;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;}</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="preprocessor">#define COMPUTE_TMP_COL(col, d0, d1, d2, d3, d4, d5, d6, d7, comm_fact)  \</span></div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;<span class="preprocessor">    ({                                                                   \</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="preprocessor">        comm_fact.s0 = d1 + d2;                                          \</span></div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="preprocessor">        comm_fact.s1 = d3 + d4;                                          \</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;<span class="preprocessor">        comm_fact.s2 = d5 + d6;                                          \</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="preprocessor">        \</span></div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="preprocessor">        col.s0 = comm_fact.s0 + comm_fact.s1 + 8.f * comm_fact.s2 + d0;  \</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="preprocessor">        col.s2 = comm_fact.s0 + 4.f * comm_fact.s1 + 2.f * comm_fact.s2; \</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="preprocessor">        \</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="preprocessor">        comm_fact.s0 = d1 - d2;                                          \</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="preprocessor">        comm_fact.s1 = d3 - d4;                                          \</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;<span class="preprocessor">        comm_fact.s2 = d5 - d6;                                          \</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="preprocessor">        \</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="preprocessor">        col.s1 = comm_fact.s0 + 2.f * comm_fact.s1 + 4.f * comm_fact.s2; \</span></div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="preprocessor">        col.s3 = comm_fact.s0 + 8.f * comm_fact.s1 + comm_fact.s2 + d7;  \</span></div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="preprocessor">    })</span></div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_4x4_5x5_nchw(</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    ,</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;)</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;{</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <span class="comment">// Each thread stores a 4x4/4x1 or 1x4 tile</span></div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;    <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23b9032d1b9d59547545e457f82ee478">CONVERT_TO_TENSOR4D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, SRC_DEPTH);</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0, 0);</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>);</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0);</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <span class="comment">// Compute output address</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;    <span class="keywordtype">int</span> y_in  = get_global_id(1);</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;    <span class="keywordtype">int</span> x_out = (y_in % NUM_TILES_X) * OUTPUT_TILE_W;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    <span class="keywordtype">int</span> y_out = (y_in / NUM_TILES_X) * OUTPUT_TILE_H;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    <span class="keywordtype">int</span> z_out = get_global_id(0);</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    <span class="keywordtype">int</span> batch = get_global_id(2) / SRC_DEPTH;</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z;</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;    <span class="comment">// Load the values across the channels to compose the input tile</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d00 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 0 * src_stride_z));</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d01 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 1 * src_stride_z));</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d02 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 2 * src_stride_z));</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d03 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 3 * src_stride_z));</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d04 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 4 * src_stride_z));</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d05 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 5 * src_stride_z));</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d06 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 6 * src_stride_z));</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d07 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 7 * src_stride_z));</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    <span class="comment">// Compute out00, out01, out02 and out03</span></div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;    <span class="keywordtype">float</span> out00 = d00 + d01 + d02 + d03 + d04 + 8.0f * d05 + 8.0f * d06;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    <span class="keywordtype">float</span> out01 = d01 - d02 + 2.0f * d03 - 2.0f * d04 + 4.0f * d05 - 4.0f * d06;</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    <span class="keywordtype">float</span> out02 = d01 + d02 + 4.0f * d03 + 4.0f * d04 + 2.0f * d05 + 2.0f * d06;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;    <span class="keywordtype">float</span> out03 = d01 - d02 + 8.0f * d03 - 8.0f * d04 + d05 - d06 + d07;</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (float) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, z_out)));</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    out00 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;    out01 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    out02 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;    out03 += (<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;    <span class="comment">// Store the output tile</span></div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL);</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 0 * dst_stride_y)) = out0_dt.s0;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 1 * dst_stride_y)) = out0_dt.s1;</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 2 * dst_stride_y)) = out0_dt.s2;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 3 * dst_stride_y)) = out0_dt.s3;</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL), 0,</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr));</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;<span class="preprocessor">#else // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d10 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 8 * src_stride_z));</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d11 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 9 * src_stride_z));</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d12 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 10 * src_stride_z));</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d13 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 11 * src_stride_z));</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d14 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 12 * src_stride_z));</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d15 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 13 * src_stride_z));</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d16 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 14 * src_stride_z));</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d17 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 15 * src_stride_z));</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d20 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 16 * src_stride_z));</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d21 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 17 * src_stride_z));</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d22 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 18 * src_stride_z));</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d23 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 19 * src_stride_z));</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d24 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 20 * src_stride_z));</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d25 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 21 * src_stride_z));</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d26 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 22 * src_stride_z));</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d27 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 23 * src_stride_z));</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d30 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 24 * src_stride_z));</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d31 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 25 * src_stride_z));</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d32 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 26 * src_stride_z));</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d33 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 27 * src_stride_z));</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d34 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 28 * src_stride_z));</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d35 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 29 * src_stride_z));</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d36 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 30 * src_stride_z));</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d37 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 31 * src_stride_z));</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d40 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 32 * src_stride_z));</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d41 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 33 * src_stride_z));</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d42 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 34 * src_stride_z));</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d43 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 35 * src_stride_z));</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d44 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 36 * src_stride_z));</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d45 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 37 * src_stride_z));</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d46 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 38 * src_stride_z));</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d47 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 39 * src_stride_z));</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d50 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 40 * src_stride_z));</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d51 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 41 * src_stride_z));</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d52 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 42 * src_stride_z));</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d53 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 43 * src_stride_z));</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d54 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 44 * src_stride_z));</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d55 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 45 * src_stride_z));</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d56 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 46 * src_stride_z));</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d57 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 47 * src_stride_z));</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d60 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 48 * src_stride_z));</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d61 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 49 * src_stride_z));</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d62 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 50 * src_stride_z));</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d63 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 51 * src_stride_z));</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d64 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 52 * src_stride_z));</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d65 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 53 * src_stride_z));</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d66 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 54 * src_stride_z));</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d67 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 55 * src_stride_z));</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d70 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 56 * src_stride_z));</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d71 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 57 * src_stride_z));</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d72 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 58 * src_stride_z));</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d73 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 59 * src_stride_z));</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d74 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 60 * src_stride_z));</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d75 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 61 * src_stride_z));</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d76 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 62 * src_stride_z));</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d77 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 63 * src_stride_z));</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;    <span class="comment">// Compute the 8x4 intermediate tensor</span></div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;    comm_fact0, comm_fact1, comm_fact2;</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;    tmp_col0, tmp_col1, tmp_col2, tmp_col3, tmp_col4, tmp_col5, tmp_col6, tmp_col7;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    COMPUTE_TMP_COL(tmp_col0, d00, d10, d20, d30, d40, d50, d60, d70, comm_fact0);</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    COMPUTE_TMP_COL(tmp_col1, d01, d11, d21, d31, d41, d51, d61, d71, comm_fact0);</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    COMPUTE_TMP_COL(tmp_col2, d02, d12, d22, d32, d42, d52, d62, d72, comm_fact0);</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    COMPUTE_TMP_COL(tmp_col3, d03, d13, d23, d33, d43, d53, d63, d73, comm_fact0);</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    COMPUTE_TMP_COL(tmp_col4, d04, d14, d24, d34, d44, d54, d64, d74, comm_fact0);</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;    COMPUTE_TMP_COL(tmp_col5, d05, d15, d25, d35, d45, d55, d65, d75, comm_fact0);</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;    COMPUTE_TMP_COL(tmp_col6, d06, d16, d26, d36, d46, d56, d66, d76, comm_fact0);</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;    COMPUTE_TMP_COL(tmp_col7, d07, d17, d27, d37, d47, d57, d67, d77, comm_fact0);</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;    <span class="comment">// Compute the 4x4 output tile</span></div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    comm_fact0 = tmp_col1 + tmp_col2;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;    comm_fact1 = tmp_col3 + tmp_col4;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;    comm_fact2 = tmp_col5 + tmp_col6;</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;    out_col0 = comm_fact0 + comm_fact1 + (<span class="keywordtype">float</span>)8.f * comm_fact2 + tmp_col0;</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    out_col2 = comm_fact0 + (<span class="keywordtype">float</span>)4.f * comm_fact1 + (<span class="keywordtype">float</span>)2.f * comm_fact2;</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;    comm_fact0 = tmp_col1 - tmp_col2;</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;    comm_fact1 = tmp_col3 - tmp_col4;</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    comm_fact2 = tmp_col5 - tmp_col6;</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;    out_col1 = comm_fact0 + (<span class="keywordtype">float</span>)2.f * comm_fact1 + (<span class="keywordtype">float</span>)4.f * comm_fact2;</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    out_col3 = comm_fact0 + (<span class="keywordtype">float</span>)8.f * comm_fact1 + comm_fact2 + tmp_col7;</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (float) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, z_out)));</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;    out_col0 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    out_col1 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    out_col2 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    out_col3 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;    <span class="comment">// Store the output tile</span></div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4))(out_col0.s0, out_col1.s0, out_col2.s0, out_col3.s0), A_VAL, B_VAL), 0,</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 0 * dst_stride_y));</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4))(out_col0.s1, out_col1.s1, out_col2.s1, out_col3.s1), A_VAL, B_VAL), 0,</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 1 * dst_stride_y));</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4))(out_col0.s2, out_col1.s2, out_col2.s2, out_col3.s2), A_VAL, B_VAL), 0,</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 2 * dst_stride_y));</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    vstore4(<a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4))(out_col0.s3, out_col1.s3, out_col2.s3, out_col3.s3), A_VAL, B_VAL), 0,</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;            (__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_addr + 3 * dst_stride_y));</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;}</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_4x4_5x5_nhwc(</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;{</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    <span class="comment">// Each thread stores a 4x4/4x1 or 1x4 tile</span></div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;    <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23b9032d1b9d59547545e457f82ee478">CONVERT_TO_TENSOR4D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, SRC_DEPTH);</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0, 0);</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>             = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>);</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;    <span class="keyword">const</span> __global uchar *src_addr = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, 0, 0, 0);</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    <span class="keywordtype">int</span> y_in  = get_global_id(1);</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;    <span class="keywordtype">int</span> x_out = get_global_id(0);</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;    <span class="keywordtype">int</span> y_out = (y_in % NUM_TILES_X) * OUTPUT_TILE_W;</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    <span class="keywordtype">int</span> z_out = (y_in / NUM_TILES_X) * OUTPUT_TILE_H;</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    <span class="keywordtype">int</span> batch = get_global_id(2) / SRC_DEPTH;</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    <span class="comment">// Load the values across the channels to compose the input tile</span></div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d00 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 0 * src_stride_z));</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d01 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 1 * src_stride_z));</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d02 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 2 * src_stride_z));</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d03 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 3 * src_stride_z));</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d04 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 4 * src_stride_z));</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d05 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 5 * src_stride_z));</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d06 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 6 * src_stride_z));</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d07 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 7 * src_stride_z));</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    <span class="comment">// Compute out00, out01, out02 and out03</span></div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;    <span class="keywordtype">float</span> out00 = d00 + d01 + d02 + d03 + d04 + 8.0f * d05 + 8.0f * d06;</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;    <span class="keywordtype">float</span> out01 = d01 - d02 + 2.0f * d03 - 2.0f * d04 + 4.0f * d05 - 4.0f * d06;</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;    <span class="keywordtype">float</span> out02 = d01 + d02 + 4.0f * d03 + 4.0f * d04 + 2.0f * d05 + 2.0f * d06;</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;    <span class="keywordtype">float</span> out03 = d01 - d02 + 8.0f * d03 - 8.0f * d04 + d05 - d06 + d07;</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (float) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, x_out)));</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;    out00 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    out01 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;    out02 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;    out03 += (float)<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;    <span class="comment">// Store the output tile</span></div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;    int4 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int4)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w);</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;<span class="preprocessor">#else                                                                               </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;    int4 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int4)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z);</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;<span class="preprocessor">#endif                                                                              </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = min(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> + (int4)(0, 1, 2, 3) * (int4)dst_stride_z, (int4)dst_size); <span class="comment">// If address is beyond the last plane, clamp it to dst_size (which points to the last padding).</span></div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL, B_VAL);</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0) = out0_dt.s0;</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1) = out0_dt.s1;</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2) = out0_dt.s2;</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3) = out0_dt.s3;</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z;</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;    out0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>((<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))(out00, out01, out02, out03), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 4)), A_VAL,</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;                         B_VAL);</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + 0 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) = out0_dt.s0;</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + 1 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) = out0_dt.s1;</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + 2 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) = out0_dt.s2;</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + 3 * dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) = out0_dt.s3;</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;<span class="preprocessor">#else // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d10 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 8 * src_stride_z));</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d11 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 9 * src_stride_z));</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d12 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 10 * src_stride_z));</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d13 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 11 * src_stride_z));</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d14 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 12 * src_stride_z));</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d15 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 13 * src_stride_z));</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d16 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 14 * src_stride_z));</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d17 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 15 * src_stride_z));</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d20 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 16 * src_stride_z));</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d21 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 17 * src_stride_z));</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d22 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 18 * src_stride_z));</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d23 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 19 * src_stride_z));</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d24 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 20 * src_stride_z));</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d25 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 21 * src_stride_z));</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d26 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 22 * src_stride_z));</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d27 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 23 * src_stride_z));</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d30 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 24 * src_stride_z));</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d31 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 25 * src_stride_z));</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d32 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 26 * src_stride_z));</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d33 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 27 * src_stride_z));</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d34 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 28 * src_stride_z));</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d35 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 29 * src_stride_z));</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d36 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 30 * src_stride_z));</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d37 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 31 * src_stride_z));</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d40 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 32 * src_stride_z));</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d41 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 33 * src_stride_z));</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d42 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 34 * src_stride_z));</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d43 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 35 * src_stride_z));</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d44 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 36 * src_stride_z));</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d45 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 37 * src_stride_z));</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d46 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 38 * src_stride_z));</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d47 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 39 * src_stride_z));</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d50 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 40 * src_stride_z));</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d51 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 41 * src_stride_z));</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d52 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 42 * src_stride_z));</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d53 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 43 * src_stride_z));</div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d54 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 44 * src_stride_z));</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d55 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 45 * src_stride_z));</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d56 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 46 * src_stride_z));</div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d57 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 47 * src_stride_z));</div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d60 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 48 * src_stride_z));</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d61 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 49 * src_stride_z));</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d62 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 50 * src_stride_z));</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d63 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 51 * src_stride_z));</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d64 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 52 * src_stride_z));</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d65 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 53 * src_stride_z));</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d66 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 54 * src_stride_z));</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d67 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 55 * src_stride_z));</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d70 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 56 * src_stride_z));</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d71 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 57 * src_stride_z));</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d72 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 58 * src_stride_z));</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d73 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 59 * src_stride_z));</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d74 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 60 * src_stride_z));</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d75 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 61 * src_stride_z));</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d76 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 62 * src_stride_z));</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> d77 = *((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(src_addr + 63 * src_stride_z));</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;    <span class="comment">// Compute the 8x4 intermediate tensor</span></div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;    comm_fact0, comm_fact1, comm_fact2;</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;    tmp_col0, tmp_col1, tmp_col2, tmp_col3, tmp_col4, tmp_col5, tmp_col6, tmp_col7;</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;    COMPUTE_TMP_COL(tmp_col0, d00, d10, d20, d30, d40, d50, d60, d70, comm_fact0);</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    COMPUTE_TMP_COL(tmp_col1, d01, d11, d21, d31, d41, d51, d61, d71, comm_fact0);</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;    COMPUTE_TMP_COL(tmp_col2, d02, d12, d22, d32, d42, d52, d62, d72, comm_fact0);</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    COMPUTE_TMP_COL(tmp_col3, d03, d13, d23, d33, d43, d53, d63, d73, comm_fact0);</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;    COMPUTE_TMP_COL(tmp_col4, d04, d14, d24, d34, d44, d54, d64, d74, comm_fact0);</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;    COMPUTE_TMP_COL(tmp_col5, d05, d15, d25, d35, d45, d55, d65, d75, comm_fact0);</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;    COMPUTE_TMP_COL(tmp_col6, d06, d16, d26, d36, d46, d56, d66, d76, comm_fact0);</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;    COMPUTE_TMP_COL(tmp_col7, d07, d17, d27, d37, d47, d57, d67, d77, comm_fact0);</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    <span class="comment">// Compute the output tile</span></div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;    comm_fact0 = tmp_col1 + tmp_col2;</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;    comm_fact1 = tmp_col3 + tmp_col4;</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;    comm_fact2 = tmp_col5 + tmp_col6;</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;    out_col0 = comm_fact0 + comm_fact1 + 8.f * comm_fact2 + tmp_col0;</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;    out_col2 = comm_fact0 + 4.f * comm_fact1 + 2.f * comm_fact2;</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;    comm_fact0 = tmp_col1 - tmp_col2;</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;    comm_fact1 = tmp_col3 - tmp_col4;</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;    comm_fact2 = tmp_col5 - tmp_col6;</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;    out_col1 = comm_fact0 + 2.f * comm_fact1 + 4.f * comm_fact2;</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4)</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;    out_col3 = comm_fact0 + 8.f * comm_fact1 + comm_fact2 + tmp_col7;</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;<span class="preprocessor">#if defined(HAS_BIAS)</span></div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;    <span class="comment">// Add bias</span></div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;    <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = (float) * ((__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, x_out)));</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;    out_col0 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;    out_col1 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;    out_col2 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;    out_col3 += (<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<span class="keywordtype">float</span>, 4))<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;<span class="preprocessor">#endif // defined(HAS_BIAS)</span></div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;    <span class="comment">// Get output address</span></div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;<span class="preprocessor">#if defined(SRC_DEPTH)</span></div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;    int4 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int4)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z + batch * dst_stride_w);</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;    int4 <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = (int4)(dst_offset_first_element_in_bytes + x_out * <span class="keyword">sizeof</span>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>) + y_out * dst_stride_y + z_out * dst_stride_z);</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(SRC_DEPTH) */</span><span class="preprocessor"></span></div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>      = min(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> + (int4)(0, 1, 2, 3) * (int4)dst_stride_z, (int4)dst_size); <span class="comment">// If address is beyond the last plane, clamp it to dst_size (which points to the last padding).</span></div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;    int4 mult_y = min((int4)dst_size - <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, (int4)1);                                 <span class="comment">// If out of bound, we don&#39;t want to increase dst_stride_y, so we set the multiplier to 0. It will be 1 otherwise.</span></div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;    <span class="comment">// Store the output tile</span></div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)</div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;    out_col0_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(out_col0, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)), A_VAL, B_VAL);</div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)</div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;    out_col1_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(out_col1, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)), A_VAL, B_VAL);</div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)</div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;    out_col2_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(out_col2, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)), A_VAL, B_VAL);</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)</div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;    out_col3_dt = <a class="code" href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a>(ACTIVATION_TYPE, <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(out_col3, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, VEC_SIZE)), A_VAL, B_VAL);</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 0 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0) = out_col0_dt.s0;</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 1 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0) = out_col1_dt.s0;</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 2 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0) = out_col2_dt.s0;</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s0 * 3 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s0) = out_col3_dt.s0;</div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 0 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1) = out_col0_dt.s1;</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 1 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1) = out_col1_dt.s1;</div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 2 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1) = out_col2_dt.s1;</div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s1 * 3 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s1) = out_col3_dt.s1;</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s2 * 0 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2) = out_col0_dt.s2;</div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s2 * 1 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2) = out_col1_dt.s2;</div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s2 * 2 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2) = out_col2_dt.s2;</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s2 * 3 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s2) = out_col3_dt.s2;</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s3 * 0 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3) = out_col0_dt.s3;</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s3 * 1 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3) = out_col1_dt.s3;</div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s3 * 2 * (<span class="keywordtype">int</span>)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3) = out_col2_dt.s3;</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;    *(__global <a class="code" href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)(dst_ptr + mult_y.s3 * 3 * (int)dst_stride_y + <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.s3) = out_col3_dt.s3;</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL) || defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;}</div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;<span class="preprocessor">#endif // defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 4</span></div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;</div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;<span class="preprocessor">#if defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 2</span></div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;</div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_2x1_3x1_nchw(</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;    ,</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;)</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;{</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;    winograd_output_transform_2x2_3x3_nchw(src_ptr,</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;                                           src_step_w,</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;                                           dst_offset_first_element_in_bytes</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;                                           ,</div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;                                           bias_offset_first_element_in_bytes</div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;                                          );</div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;}</div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_2x1_7x1_nhwc(</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;{</div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;    winograd_output_transform_2x2_7x7_nhwc(src_ptr,</div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;                                           src_step_w,</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;                                           dst_offset_first_element_in_bytes,</div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;                                           bias_offset_first_element_in_bytes,</div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;                                           dst_size);</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;}</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;<span class="preprocessor">#endif // defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 2</span></div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;<span class="preprocessor">#if defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 4</span></div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_4x1_3x1_nchw(</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;    ,</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;)</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;{</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;    winograd_output_transform_4x4_3x3_nchw(src_ptr,</div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;                                           src_step_w,</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;                                           dst_offset_first_element_in_bytes</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;                                           ,</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;                                           bias_offset_first_element_in_bytes</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;                                          );</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;}</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_4x1_5x1_nchw(</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;    ,</div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;)</div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;{</div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;    winograd_output_transform_4x4_5x5_nchw(src_ptr,</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;                                           src_step_w,</div><div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;                                           dst_offset_first_element_in_bytes</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;                                           ,</div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;                                           bias_offset_first_element_in_bytes</div><div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;                                          );</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;}</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;</div><div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_4x1_3x1_nhwc(</div><div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;{</div><div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;    winograd_output_transform_4x4_3x3_nhwc(src_ptr,</div><div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;                                           src_step_w,</div><div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;                                           dst_offset_first_element_in_bytes,</div><div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;                                           bias_offset_first_element_in_bytes,</div><div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;                                           dst_size);</div><div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;}</div><div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;</div><div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_4x1_5x1_nhwc(</div><div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;{</div><div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;    winograd_output_transform_4x4_5x5_nhwc(src_ptr,</div><div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;                                           src_step_w,</div><div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;                                           dst_offset_first_element_in_bytes,</div><div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160;                                           bias_offset_first_element_in_bytes,</div><div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160;                                           dst_size);</div><div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160;}</div><div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160;<span class="preprocessor">#endif // defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 4</span></div><div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;</div><div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;<span class="preprocessor">#if defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 2</span></div><div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;</div><div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_1x2_1x3_nchw(</div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;    ,</div><div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;)</div><div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;{</div><div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;    winograd_output_transform_2x2_3x3_nchw(src_ptr,</div><div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;                                           src_step_w,</div><div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;                                           dst_offset_first_element_in_bytes</div><div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;                                           ,</div><div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;                                           bias_offset_first_element_in_bytes</div><div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;                                          );</div><div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;}</div><div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;</div><div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_1x2_1x7_nhwc(</div><div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;{</div><div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;    winograd_output_transform_2x2_7x7_nhwc(src_ptr,</div><div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;                                           src_step_w,</div><div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;                                           dst_offset_first_element_in_bytes,</div><div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;                                           bias_offset_first_element_in_bytes,</div><div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;                                           dst_size);</div><div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;}</div><div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;<span class="preprocessor">#endif // defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 2</span></div><div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;</div><div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;<span class="preprocessor">#if defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 4</span></div><div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;</div><div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_1x4_1x3_nchw(</div><div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;    ,</div><div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;)</div><div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;{</div><div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;    winograd_output_transform_4x4_3x3_nchw(src_ptr,</div><div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;                                           src_step_x,</div><div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;                                           src_step_y,</div><div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160;                                           src_step_z,</div><div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;                                           src_step_w,</div><div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;                                           dst_offset_first_element_in_bytes</div><div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;                                           ,</div><div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;                                           bias_offset_first_element_in_bytes</div><div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l02019"></a><span class="lineno"> 2019</span>&#160;                                          );</div><div class="line"><a name="l02020"></a><span class="lineno"> 2020</span>&#160;}</div><div class="line"><a name="l02021"></a><span class="lineno"> 2021</span>&#160;</div><div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_1x4_1x5_nchw(</div><div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160;    ,</div><div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>)</div><div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;)</div><div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;{</div><div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;    winograd_output_transform_4x4_5x5_nchw(src_ptr,</div><div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;                                           src_step_x,</div><div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;                                           src_step_y,</div><div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;                                           src_step_z,</div><div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;                                           src_step_w,</div><div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l02070"></a><span class="lineno"> 2070</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l02073"></a><span class="lineno"> 2073</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l02075"></a><span class="lineno"> 2075</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l02076"></a><span class="lineno"> 2076</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l02077"></a><span class="lineno"> 2077</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l02078"></a><span class="lineno"> 2078</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l02079"></a><span class="lineno"> 2079</span>&#160;                                           dst_offset_first_element_in_bytes</div><div class="line"><a name="l02080"></a><span class="lineno"> 2080</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l02081"></a><span class="lineno"> 2081</span>&#160;                                           ,</div><div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;                                           bias_offset_first_element_in_bytes</div><div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l02087"></a><span class="lineno"> 2087</span>&#160;                                          );</div><div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;}</div><div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;</div><div class="line"><a name="l02119"></a><span class="lineno"> 2119</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_1x4_1x3_nhwc(</div><div class="line"><a name="l02120"></a><span class="lineno"> 2120</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l02121"></a><span class="lineno"> 2121</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l02122"></a><span class="lineno"> 2122</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l02123"></a><span class="lineno"> 2123</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l02124"></a><span class="lineno"> 2124</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l02125"></a><span class="lineno"> 2125</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l02126"></a><span class="lineno"> 2126</span>&#160;{</div><div class="line"><a name="l02127"></a><span class="lineno"> 2127</span>&#160;    winograd_output_transform_4x4_3x3_nhwc(src_ptr,</div><div class="line"><a name="l02128"></a><span class="lineno"> 2128</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l02129"></a><span class="lineno"> 2129</span>&#160;                                           src_step_x,</div><div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l02131"></a><span class="lineno"> 2131</span>&#160;                                           src_step_y,</div><div class="line"><a name="l02132"></a><span class="lineno"> 2132</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l02133"></a><span class="lineno"> 2133</span>&#160;                                           src_step_z,</div><div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;                                           src_step_w,</div><div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l02137"></a><span class="lineno"> 2137</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l02138"></a><span class="lineno"> 2138</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l02144"></a><span class="lineno"> 2144</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;                                           dst_offset_first_element_in_bytes,</div><div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160;                                           bias_offset_first_element_in_bytes,</div><div class="line"><a name="l02152"></a><span class="lineno"> 2152</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l02153"></a><span class="lineno"> 2153</span>&#160;                                           dst_size);</div><div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;}</div><div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;</div><div class="line"><a name="l02185"></a><span class="lineno"> 2185</span>&#160;__kernel <span class="keywordtype">void</span> winograd_output_transform_1x4_1x5_nhwc(</div><div class="line"><a name="l02186"></a><span class="lineno"> 2186</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>),</div><div class="line"><a name="l02187"></a><span class="lineno"> 2187</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>),</div><div class="line"><a name="l02188"></a><span class="lineno"> 2188</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l02189"></a><span class="lineno"> 2189</span>&#160;    <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>),</div><div class="line"><a name="l02190"></a><span class="lineno"> 2190</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l02191"></a><span class="lineno"> 2191</span>&#160;    <span class="keywordtype">int</span> dst_size)</div><div class="line"><a name="l02192"></a><span class="lineno"> 2192</span>&#160;{</div><div class="line"><a name="l02193"></a><span class="lineno"> 2193</span>&#160;    winograd_output_transform_4x4_5x5_nhwc(src_ptr,</div><div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;                                           src_stride_x,</div><div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;                                           src_step_x,</div><div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;                                           src_stride_y,</div><div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;                                           src_step_y,</div><div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;                                           src_stride_z,</div><div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;                                           src_step_z,</div><div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;                                           src_stride_w,</div><div class="line"><a name="l02201"></a><span class="lineno"> 2201</span>&#160;                                           src_step_w,</div><div class="line"><a name="l02202"></a><span class="lineno"> 2202</span>&#160;                                           src_offset_first_element_in_bytes,</div><div class="line"><a name="l02203"></a><span class="lineno"> 2203</span>&#160;                                           dst_ptr,</div><div class="line"><a name="l02204"></a><span class="lineno"> 2204</span>&#160;                                           dst_stride_x,</div><div class="line"><a name="l02205"></a><span class="lineno"> 2205</span>&#160;                                           dst_step_x,</div><div class="line"><a name="l02206"></a><span class="lineno"> 2206</span>&#160;                                           dst_stride_y,</div><div class="line"><a name="l02207"></a><span class="lineno"> 2207</span>&#160;                                           dst_step_y,</div><div class="line"><a name="l02208"></a><span class="lineno"> 2208</span>&#160;                                           dst_stride_z,</div><div class="line"><a name="l02209"></a><span class="lineno"> 2209</span>&#160;                                           dst_step_z,</div><div class="line"><a name="l02210"></a><span class="lineno"> 2210</span>&#160;                                           dst_stride_w,</div><div class="line"><a name="l02211"></a><span class="lineno"> 2211</span>&#160;                                           dst_step_w,</div><div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;                                           dst_offset_first_element_in_bytes,</div><div class="line"><a name="l02213"></a><span class="lineno"> 2213</span>&#160;#<span class="keywordflow">if</span> defined(HAS_BIAS)</div><div class="line"><a name="l02214"></a><span class="lineno"> 2214</span>&#160;                                           bias_ptr,</div><div class="line"><a name="l02215"></a><span class="lineno"> 2215</span>&#160;                                           bias_stride_x,</div><div class="line"><a name="l02216"></a><span class="lineno"> 2216</span>&#160;                                           bias_step_x,</div><div class="line"><a name="l02217"></a><span class="lineno"> 2217</span>&#160;                                           bias_offset_first_element_in_bytes,</div><div class="line"><a name="l02218"></a><span class="lineno"> 2218</span>&#160;#endif <span class="comment">// defined(HAS_BIAS)</span></div><div class="line"><a name="l02219"></a><span class="lineno"> 2219</span>&#160;                                           dst_size);</div><div class="line"><a name="l02220"></a><span class="lineno"> 2220</span>&#160;}</div><div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;<span class="preprocessor">#endif // defined(VEC_SIZE) &amp;&amp; VEC_SIZE == 4</span></div><div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_OUTPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;<span class="preprocessor">#endif // defined(NUM_TILES_X) &amp;&amp; defined(OUTPUT_TILE_W) &amp;&amp; defined(OUTPUT_TILE_H)</span></div><div class="ttc" id="struct_vector_xhtml"><div class="ttname"><a href="struct_vector.xhtml">Vector</a></div><div class="ttdoc">Structure to hold Vector information.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00159">helpers.h:159</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00328">helpers.h:328</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_aa8d95ba04fc73845abc6045952cae5be"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a></div><div class="ttdeci">#define CONVERT(x, type)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00079">helpers.h:79</a></div></div>
<div class="ttc" id="activation__float__helpers_8h_xhtml"><div class="ttname"><a href="activation__float__helpers_8h.xhtml">activation_float_helpers.h</a></div></div>
<div class="ttc" id="convolution3x3_8cl_xhtml_afb8c72ce35c4a1f4a2588d6573e54aa1"><div class="ttname"><a href="convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a></div><div class="ttdeci">#define DATA_TYPE</div><div class="ttdef"><b>Definition:</b> <a href="convolution3x3_8cl_source.xhtml#l00027">convolution3x3.cl:27</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="struct_tensor3_d_xhtml"><div class="ttname"><a href="struct_tensor3_d.xhtml">Tensor3D</a></div><div class="ttdoc">Structure to hold 3D tensor information.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00176">helpers.h:176</a></div></div>
<div class="ttc" id="struct_tensor4_d_xhtml"><div class="ttname"><a href="struct_tensor4_d.xhtml">Tensor4D</a></div><div class="ttdoc">Structure to hold 4D tensor information.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00186">helpers.h:186</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a40a6eb9f2a7712f08d6bb8ff6c9e6ca7"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">VECTOR_DECLARATION</a></div><div class="ttdeci">#define VECTOR_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00087">helpers.h:87</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_ad442fb5ec8be1fff97f543150de5d822"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a></div><div class="ttdeci">__global const uchar * tensor4D_offset(const Tensor4D *tensor, int x, int y, int z, int w)</div><div class="ttdoc">Get the pointer position of a Tensor4D.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00353">helpers.h:353</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a23b9032d1b9d59547545e457f82ee478"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23b9032d1b9d59547545e457f82ee478">CONVERT_TO_TENSOR4D_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_TENSOR4D_STRUCT(name, mod_size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00151">helpers.h:151</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">CLTensor dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00102">AbsoluteDifference.cpp:102</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3a77be8aebd8e00522b32061d46ccdbd"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">arm_compute::test::validation::bias</a></div><div class="ttdeci">CLTensor bias</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00181">ConvolutionLayer.cpp:181</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a31c8c760f08fb1a331b16b7c204321dc"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">CONVERT_TO_TENSOR3D_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_TENSOR3D_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00144">helpers.h:144</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a7e4940407322d6f0ccb8b6b86b856019"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a></div><div class="ttdeci">__global const uchar * vector_offset(const Vector *vec, int x)</div><div class="ttdoc">Get the pointer position of a Vector.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00317">helpers.h:317</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a481bdc6d61b3df9dcdbdb244f0f97790"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">TENSOR4D_DECLARATION</a></div><div class="ttdeci">#define TENSOR4D_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00111">helpers.h:111</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a64d779f80eeb923e0ab2313433f7b40b"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">CONVERT_TO_VECTOR_STRUCT_NO_STEP</a></div><div class="ttdeci">#define CONVERT_TO_VECTOR_STRUCT_NO_STEP(name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00126">helpers.h:126</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a2101b2fe0193ce227ae4e0945e321d85"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a></div><div class="ttdeci">__global const uchar * tensor3D_offset(const Tensor3D *tensor, int x, int y, int z)</div><div class="ttdoc">Get the pointer position of a Tensor3D.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00340">helpers.h:340</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a989ab3e96426615bb98e04e0235088ca"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">arm_compute::test::validation::src</a></div><div class="ttdeci">cast configure &amp; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_cast_8cpp_source.xhtml#l00169">Cast.cpp:169</a></div></div>
<div class="ttc" id="activation__float__helpers_8h_xhtml_abbc420da5dec17216bb014c05ad65304"><div class="ttname"><a href="activation__float__helpers_8h.xhtml#abbc420da5dec17216bb014c05ad65304">ACTIVATION</a></div><div class="ttdeci">#define ACTIVATION(op, DATA_TYPE, x, A_VAL, B_VAL)</div><div class="ttdef"><b>Definition:</b> <a href="activation__float__helpers_8h_source.xhtml#l00070">activation_float_helpers.h:70</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00073">helpers.h:73</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="winograd__output__transform_8cl.xhtml">winograd_output_transform.cl</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:21 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
