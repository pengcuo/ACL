<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: NEGEMMLowpMatrixBReductionKernel Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">NEGEMMLowpMatrixBReductionKernel Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>NEON kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B.  
 <a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8h_source.xhtml">NEGEMMLowpReductionKernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for NEGEMMLowpMatrixBReductionKernel:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel__coll__graph.svg" width="234" height="276"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab5656bb5b6334bdbe6e606c715872828"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a> () const override</td></tr>
<tr class="memdesc:ab5656bb5b6334bdbe6e606c715872828"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the kernel.  <a href="#ab5656bb5b6334bdbe6e606c715872828">More...</a><br /></td></tr>
<tr class="separator:ab5656bb5b6334bdbe6e606c715872828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a673dafe3735e42124b5104dfe64745ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#a673dafe3735e42124b5104dfe64745ff">configure</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *mtx_b, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *vector_sum_col, int32_t num_mtx_b_rows, bool is_transposed1xW) override</td></tr>
<tr class="memdesc:a673dafe3735e42124b5104dfe64745ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the kernel's input and output.  <a href="#a673dafe3735e42124b5104dfe64745ff">More...</a><br /></td></tr>
<tr class="separator:a673dafe3735e42124b5104dfe64745ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a112b35dd205c62ea6ed1447ef226da82"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info) override</td></tr>
<tr class="memdesc:a112b35dd205c62ea6ed1447ef226da82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the kernel on the passed window.  <a href="#a112b35dd205c62ea6ed1447ef226da82">More...</a><br /></td></tr>
<tr class="separator:a112b35dd205c62ea6ed1447ef226da82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml">INEGEMMLowpReductionKernel</a></td></tr>
<tr class="memitem:ac0534ec68e44c38007075d223eeef65e inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#ac0534ec68e44c38007075d223eeef65e">INEGEMMLowpReductionKernel</a> ()</td></tr>
<tr class="memdesc:ac0534ec68e44c38007075d223eeef65e inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#ac0534ec68e44c38007075d223eeef65e">More...</a><br /></td></tr>
<tr class="separator:ac0534ec68e44c38007075d223eeef65e inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa022c720a70d20d1c4c6846ef0f21476 inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#aa022c720a70d20d1c4c6846ef0f21476">INEGEMMLowpReductionKernel</a> (const <a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml">INEGEMMLowpReductionKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:aa022c720a70d20d1c4c6846ef0f21476 inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#aa022c720a70d20d1c4c6846ef0f21476">More...</a><br /></td></tr>
<tr class="separator:aa022c720a70d20d1c4c6846ef0f21476 inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf80d9eb45e49a22571fa0129a7e9d20 inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml">INEGEMMLowpReductionKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#aaf80d9eb45e49a22571fa0129a7e9d20">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml">INEGEMMLowpReductionKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:aaf80d9eb45e49a22571fa0129a7e9d20 inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#aaf80d9eb45e49a22571fa0129a7e9d20">More...</a><br /></td></tr>
<tr class="separator:aaf80d9eb45e49a22571fa0129a7e9d20 inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81bd2446e74127bcc446c01dd99441da inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#a81bd2446e74127bcc446c01dd99441da">INEGEMMLowpReductionKernel</a> (<a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml">INEGEMMLowpReductionKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a81bd2446e74127bcc446c01dd99441da inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#a81bd2446e74127bcc446c01dd99441da">More...</a><br /></td></tr>
<tr class="separator:a81bd2446e74127bcc446c01dd99441da inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46dac32640298b745aeae7823c9582ee inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml">INEGEMMLowpReductionKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#a46dac32640298b745aeae7823c9582ee">operator=</a> (<a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml">INEGEMMLowpReductionKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a46dac32640298b745aeae7823c9582ee inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#a46dac32640298b745aeae7823c9582ee">More...</a><br /></td></tr>
<tr class="separator:a46dac32640298b745aeae7823c9582ee inherit pub_methods_classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_p_p_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a></td></tr>
<tr class="memitem:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">~ICPPKernel</a> ()=default</td></tr>
<tr class="memdesc:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">More...</a><br /></td></tr>
<tr class="separator:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">is_parallelisable</a> () const</td></tr>
<tr class="memdesc:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">More...</a><br /></td></tr>
<tr class="separator:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a> () const</td></tr>
<tr class="memdesc:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">More...</a><br /></td></tr>
<tr class="separator:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> () const</td></tr>
<tr class="memdesc:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">More...</a><br /></td></tr>
<tr class="separator:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1e76328ce0c8fa275d2bbe0653ddeaad"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#a1e76328ce0c8fa275d2bbe0653ddeaad">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *mtx_b, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *vector_sum_col, int32_t num_mtx_b_rows, bool is_transposed1xW)</td></tr>
<tr class="memdesc:a1e76328ce0c8fa275d2bbe0653ddeaad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml">NEGEMMLowpMatrixBReductionKernel</a>.  <a href="#a1e76328ce0c8fa275d2bbe0653ddeaad">More...</a><br /></td></tr>
<tr class="separator:a1e76328ce0c8fa275d2bbe0653ddeaad"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>NEON kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B. </p>
<dl class="section note"><dt>Note</dt><dd>This stage is needed to handle the offset of matrix product <a href="https://github.com/google/gemmlowp/blob/master/doc/low-precision.md">https://github.com/google/gemmlowp/blob/master/doc/low-precision.md</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8h_source.xhtml#l00104">104</a> of file <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8h_source.xhtml">NEGEMMLowpReductionKernel.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a673dafe3735e42124b5104dfe64745ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a673dafe3735e42124b5104dfe64745ff">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>mtx_b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>vector_sum_col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>num_mtx_b_rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_transposed1xW</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialise the kernel's input and output. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mtx_b</td><td>Input tensor. Data type supported: Data type supported: QASYMM8 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">vector_sum_col</td><td>Output row-vector of sums of all the entries in each column of mtx_b. Data type supported: S32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_mtx_b_rows</td><td>Number of matrix B rows </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_transposed1xW</td><td>True if the input tensor is transposed 1xW </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml#a21be396e5269651901fc70aad74cfafb">INEGEMMLowpReductionKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00253">253</a> of file <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml">NEGEMMLowpReductionKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;{</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(mtx_b, vector_sum_col);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(validate_arguments_matrix_b_reduction(mtx_b-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), vector_sum_col-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()));</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    _input       = mtx_b;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    _output      = vector_sum_col;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    _k           = num_mtx_b_rows;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    _is_reshaped = is_transposed1xW;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">auto</span> win_config = validate_and_configure_window_matrix_b_reduction(_input-&gt;info(), _output-&gt;info());</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(win_config.first);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    INEKernel::configure(win_config.second);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00327">Error.h:327</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_validate_8h_source.xhtml#l00161">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00327">ARM_COMPUTE_ERROR_THROW_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00050">NEGEMMLowpMatrixMultiplyCore::configure()</a>.</p>

</div>
</div>
<a id="ab5656bb5b6334bdbe6e606c715872828"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5656bb5b6334bdbe6e606c715872828">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Name of the kernel. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> name </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a1a30ad8f276a2310571c36239554831a">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8h_source.xhtml#l00107">107</a> of file <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8h_source.xhtml">NEGEMMLowpReductionKernel.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEGEMMLowpMatrixBReductionKernel&quot;</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a112b35dd205c62ea6ed1447ef226da82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a112b35dd205c62ea6ed1447ef226da82">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Execute the kernel on the passed window. </p>
<dl class="section warning"><dt>Warning</dt><dd>If <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b" title="Indicates whether or not the kernel is parallelisable.">is_parallelisable()</a> returns false then the passed window must be equal to <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a></dd></dl>
<dl class="section note"><dt>Note</dt><dd>The window has to be a region within the window returned by the <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a> method</dd>
<dd>
The width of the window has to be a multiple of num_elems_processed_per_iteration().</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Region on which to execute the kernel. (Must be a region of the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a>) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>Info about executing thread and CPU. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00279">279</a> of file <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml">NEGEMMLowpReductionKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;{</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">INEKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> collapsed_window = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">collapse_if_possible</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">IKernel::window</a>(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">if</span>(_is_reshaped)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    {</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_input(collapsed_window);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        win_input.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        win_input.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        win_input.set(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(_input, win_input);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out(_output, collapsed_window);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(collapsed_window, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        {</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="comment">// Note: Since the input is unsigned char, we can safely use unsigned int for the accumulation</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            uint32x4x4_t sum_col =</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            {</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                    vdupq_n_u32(0),</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                    vdupq_n_u32(0),</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                    vdupq_n_u32(0),</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                    vdupq_n_u32(0)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            };</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="keyword">const</span> uint8_t *matrix_b = in.ptr() + (<span class="keywordtype">id</span>.x() / 16) * _input-&gt;info()-&gt;strides_in_bytes()[1] + <span class="keywordtype">id</span>.y() * _input-&gt;info()-&gt;strides_in_bytes()[2];</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">#if __arm__</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keyword">asm</span> <span class="keyword">volatile</span>(<span class="stringliteral">&quot;PLD [%0, #128*4]&quot;</span> ::<span class="stringliteral">&quot;r&quot;</span>(matrix_b));</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __arm__ */</span><span class="preprocessor"></span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="keywordtype">int</span> i = 0;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">for</span>(; i &lt; _k; ++i)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            {</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keyword">const</span> uint8x16_t b0_u8 = vld1q_u8(matrix_b + i * 16);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <span class="comment">// Convert S8 to U16</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <span class="keyword">const</span> uint16x8x2_t b0_u16 =</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                {</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                    {</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                        vmovl_u8(vget_low_u8(b0_u8)),</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                        vmovl_u8(vget_high_u8(b0_u8))</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                    }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                };</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <span class="comment">// Accumulate to U32</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                sum_col =</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                {</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                    {</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                        vaddw_u16(sum_col.val[0], vget_low_u16(b0_u16.val[0])),</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                        vaddw_u16(sum_col.val[1], vget_high_u16(b0_u16.val[0])),</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                        vaddw_u16(sum_col.val[2], vget_low_u16(b0_u16.val[1])),</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                        vaddw_u16(sum_col.val[3], vget_high_u16(b0_u16.val[1]))</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                    }</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                };</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            }</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keyword">auto</span> vector_sum_col = reinterpret_cast&lt;int32_t *&gt;(out.ptr());</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            vst1q_s32(vector_sum_col + 0, vreinterpretq_s32_u32(sum_col.val[0]));</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            vst1q_s32(vector_sum_col + 4, vreinterpretq_s32_u32(sum_col.val[1]));</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            vst1q_s32(vector_sum_col + 8, vreinterpretq_s32_u32(sum_col.val[2]));</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            vst1q_s32(vector_sum_col + 12, vreinterpretq_s32_u32(sum_col.val[3]));</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        },</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        in, out);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    }</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">else</span> <span class="comment">// it is not reshaped</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    {</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> width_matrix_b = static_cast&lt;int&gt;(_input-&gt;info()-&gt;dimension(0));</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> in_b_stride    = static_cast&lt;int&gt;(_input-&gt;info()-&gt;strides_in_bytes()[1]);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="comment">// The implementation computes 16 elements per iteration</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> window_start_x = 16 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>.thread_id;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> window_step_x  = 16 * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>.num_threads;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="comment">// Make sure (window_end_x - window_start_x) is a multiple of window_step_x</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> window_end_x = <a class="code" href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">ceil_to_multiple</a>(width_matrix_b - window_start_x, window_step_x) + window_start_x;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_out(collapsed_window);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        win_out.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(window_start_x, window_end_x, window_step_x));</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_in(win_out);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        win_in.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        win_in.set(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0));</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> inb(_input, win_in);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out(_output, win_out);</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win_out, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        {</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            <span class="keywordflow">if</span>(<span class="keywordtype">id</span>.x() &gt; width_matrix_b)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            {</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            }</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            <span class="comment">// Note: Since the input is unsigned char, we can safely use unsigned int for the accumulation</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            uint32x4x4_t sum_col =</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                {</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                    vdupq_n_u32(0),</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                    vdupq_n_u32(0),</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                    vdupq_n_u32(0),</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                    vdupq_n_u32(0)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                }</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            };</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="keyword">const</span> uint8_t *matrix_b = inb.ptr() + <span class="keywordtype">id</span>.y() * _input-&gt;info()-&gt;strides_in_bytes()[2];</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="preprocessor">#if __arm__</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            <span class="keyword">asm</span> <span class="keyword">volatile</span>(<span class="stringliteral">&quot;PLD [%0, #128*4]&quot;</span> ::<span class="stringliteral">&quot;r&quot;</span>(matrix_b));</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="keyword">asm</span> <span class="keyword">volatile</span>(<span class="stringliteral">&quot;PLD [%0, #128*4]&quot;</span> ::<span class="stringliteral">&quot;r&quot;</span>(matrix_b + in_b_stride));</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __arm__ */</span><span class="preprocessor"></span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            <span class="keywordtype">int</span> i = 0;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="comment">// This for loop performs 4 accumulations</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="keywordflow">for</span>(; i &lt;= (_k - 4); i += 4)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            {</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                <span class="keyword">const</span> uint8x16_t b0_u8 = vld1q_u8(matrix_b + 0 * in_b_stride);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                <span class="keyword">const</span> uint8x16_t b1_u8 = vld1q_u8(matrix_b + 1 * in_b_stride);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                <span class="keyword">const</span> uint8x16_t b2_u8 = vld1q_u8(matrix_b + 2 * in_b_stride);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                <span class="keyword">const</span> uint8x16_t b3_u8 = vld1q_u8(matrix_b + 3 * in_b_stride);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="preprocessor">#if __arm__</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="keyword">asm</span> <span class="keyword">volatile</span>(<span class="stringliteral">&quot;PLD [%0, #128*1]&quot;</span> ::<span class="stringliteral">&quot;r&quot;</span>(matrix_b + 1 * in_b_stride));</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                <span class="keyword">asm</span> <span class="keyword">volatile</span>(<span class="stringliteral">&quot;PLD [%0, #128*1]&quot;</span> ::<span class="stringliteral">&quot;r&quot;</span>(matrix_b + 2 * in_b_stride));</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                <span class="keyword">asm</span> <span class="keyword">volatile</span>(<span class="stringliteral">&quot;PLD [%0, #128*1]&quot;</span> ::<span class="stringliteral">&quot;r&quot;</span>(matrix_b + 3 * in_b_stride));</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                <span class="keyword">asm</span> <span class="keyword">volatile</span>(<span class="stringliteral">&quot;PLD [%0, #128*1]&quot;</span> ::<span class="stringliteral">&quot;r&quot;</span>(matrix_b + 4 * in_b_stride));</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __arm__ */</span><span class="preprocessor"></span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="comment">// Partial accumulation in u16</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                uint16x8x2_t tmp_sum =</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                {</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                    {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                        vdupq_n_u16(0),</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                        vdupq_n_u16(0)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                    }</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                };</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                tmp_sum.val[0] = vaddw_u8(tmp_sum.val[0], vget_low_u8(b0_u8));</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                tmp_sum.val[0] = vaddw_u8(tmp_sum.val[0], vget_low_u8(b1_u8));</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                tmp_sum.val[0] = vaddw_u8(tmp_sum.val[0], vget_low_u8(b2_u8));</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                tmp_sum.val[0] = vaddw_u8(tmp_sum.val[0], vget_low_u8(b3_u8));</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                tmp_sum.val[1] = vaddw_u8(tmp_sum.val[1], vget_high_u8(b0_u8));</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                tmp_sum.val[1] = vaddw_u8(tmp_sum.val[1], vget_high_u8(b1_u8));</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                tmp_sum.val[1] = vaddw_u8(tmp_sum.val[1], vget_high_u8(b2_u8));</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                tmp_sum.val[1] = vaddw_u8(tmp_sum.val[1], vget_high_u8(b3_u8));</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                <span class="comment">// Accumulate to U32</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                sum_col =</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                {</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                    {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                        vaddw_u16(sum_col.val[0], vget_low_u16(tmp_sum.val[0])),</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                        vaddw_u16(sum_col.val[1], vget_high_u16(tmp_sum.val[0])),</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                        vaddw_u16(sum_col.val[2], vget_low_u16(tmp_sum.val[1])),</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                        vaddw_u16(sum_col.val[3], vget_high_u16(tmp_sum.val[1]))</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                    }</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                };</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                matrix_b += 4 * in_b_stride;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            }</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="comment">// This for loop perfoms the leftover accumulations</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            <span class="keywordflow">for</span>(; i &lt; _k; ++i)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                <span class="keyword">const</span> uint8x16_t b0_u8 = vld1q_u8(matrix_b + 0 * in_b_stride);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                <span class="comment">// Convert S8 to S16</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                <span class="keyword">const</span> uint16x8x2_t b0_u16 =</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                {</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                    {</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                        vmovl_u8(vget_low_u8(b0_u8)),</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                        vmovl_u8(vget_high_u8(b0_u8))</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                    }</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                };</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                <span class="comment">// Accumulate to U32</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                sum_col =</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                {</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                    {</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                        vaddw_u16(sum_col.val[0], vget_low_u16(b0_u16.val[0])),</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                        vaddw_u16(sum_col.val[1], vget_high_u16(b0_u16.val[0])),</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                        vaddw_u16(sum_col.val[2], vget_low_u16(b0_u16.val[1])),</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                        vaddw_u16(sum_col.val[3], vget_high_u16(b0_u16.val[1]))</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                    }</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                };</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                matrix_b += in_b_stride;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <span class="keyword">auto</span> vector_sum_col = reinterpret_cast&lt;int32_t *&gt;(out.ptr());</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            vst1q_s32(vector_sum_col + 0, vreinterpretq_s32_u32(sum_col.val[0]));</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            vst1q_s32(vector_sum_col + 4, vreinterpretq_s32_u32(sum_col.val[1]));</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            vst1q_s32(vector_sum_col + 8, vreinterpretq_s32_u32(sum_col.val[2]));</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            vst1q_s32(vector_sum_col + 12, vreinterpretq_s32_u32(sum_col.val[3]));</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        },</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        inb, out);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    }</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image's dimensions with a start, end and step.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00075">Window.h:75</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00160">Error.h:160</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a663ce71e1992366180fcb85b0a874e2f"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">arm_compute::Window::collapse_if_possible</a></div><div class="ttdeci">Window collapse_if_possible(const Window &amp;full_window, size_t first, size_t last, bool *has_collapsed=nullptr) const</div><div class="ttdoc">Collapse the dimensions between first and last if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00054">Window.inl:54</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab237a0a375cf382d52b61653248d3d4a"><div class="ttname"><a href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">arm_compute::ceil_to_multiple</a></div><div class="ttdeci">auto ceil_to_multiple(S value, T divisor) -&gt; decltype(((value+divisor - 1)/divisor) *divisor)</div><div class="ttdoc">Computes the smallest number larger or equal to value that is a multiple of divisor.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00066">Utils.h:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00122">Helpers.inl:122</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">ConvolutionLayer.cpp:174</a></div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00318">Helpers.h:318</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00205">Validate.h:205</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00940">Validate.h:940</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_validate_8h_source.xhtml#l00205">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>, <a class="el" href="_validate_8h_source.xhtml#l00940">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>, <a class="el" href="_error_8h_source.xhtml#l00160">ARM_COMPUTE_UNUSED</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00066">arm_compute::ceil_to_multiple()</a>, <a class="el" href="_window_8inl_source.xhtml#l00054">Window::collapse_if_possible()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="_window_8h_source.xhtml#l00047">Window::DimZ</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00122">arm_compute::execute_window_loop()</a>, <a class="el" href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">arm_compute::test::validation::info</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00184">Iterator::ptr()</a>, <a class="el" href="_window_8inl_source.xhtml#l00048">Window::set()</a>, and <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">IKernel::window()</a>.</p>

</div>
</div>
<a id="a1e76328ce0c8fa275d2bbe0653ddeaad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e76328ce0c8fa275d2bbe0653ddeaad">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>mtx_b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>vector_sum_col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>num_mtx_b_rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_transposed1xW</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml">NEGEMMLowpMatrixBReductionKernel</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mtx_b</td><td>Input tensor. Data type supported: Data type supported: QASYMM8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vector_sum_col</td><td>Output row-vector of sums of all the entries in each column of mtx_b. Data type supported: S32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_mtx_b_rows</td><td>Number of matrix B rows </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_transposed1xW</td><td>True if the input tensor is transposed 1xW</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00269">269</a> of file <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml">NEGEMMLowpReductionKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(num_mtx_b_rows);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(is_transposed1xW);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_matrix_b_reduction(mtx_b, vector_sum_col));</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window_matrix_b_reduction(mtx_b-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>().get(), vector_sum_col-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>().get()).first);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00193">Error.h:193</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00160">Error.h:160</a></div></div>
<div class="ttc" id="classarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00193">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00160">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00224">NEGEMMLowpMatrixMultiplyCore::validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/NEON/kernels/<a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8h_source.xhtml">NEGEMMLowpReductionKernel.h</a></li>
<li>src/core/NEON/kernels/<a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml">NEGEMMLowpReductionKernel.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml">NEGEMMLowpMatrixBReductionKernel</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:37 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
