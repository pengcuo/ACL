<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: NEWinogradLayerTransformInputKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">NEWinogradLayerTransformInputKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>NEON kernel to perform Winograd input transform.  
 <a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml">NEWinogradConvolutionLayerKernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for NEWinogradLayerTransformInputKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel__coll__graph.svg" width="234" height="320"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a1bc75fe67cfd09e90f240a935da92f54"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a1bc75fe67cfd09e90f240a935da92f54">WinogradBase</a> = winograd::WinogradGEMM&lt; OutputTileRows, OutputTileCols, KernelRows, KernelCols, winograd::WinogradRoots::Integers &gt;</td></tr>
<tr class="memdesc:a1bc75fe67cfd09e90f240a935da92f54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Winograd base kernel.  <a href="#a1bc75fe67cfd09e90f240a935da92f54">More...</a><br /></td></tr>
<tr class="separator:a1bc75fe67cfd09e90f240a935da92f54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af17b2792d63e38a0eea385635191e836"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#af17b2792d63e38a0eea385635191e836">WinogradConv</a> = typename WinogradBase::template Convolution&lt; T, T &gt;</td></tr>
<tr class="memdesc:af17b2792d63e38a0eea385635191e836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Winograd convolution kernel.  <a href="#af17b2792d63e38a0eea385635191e836">More...</a><br /></td></tr>
<tr class="separator:af17b2792d63e38a0eea385635191e836"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae5af3dca6ce9aa3ab366220034220359"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#ae5af3dca6ce9aa3ab366220034220359">NEWinogradLayerTransformInputKernel</a> (const <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:ae5af3dca6ce9aa3ab366220034220359"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#ae5af3dca6ce9aa3ab366220034220359">More...</a><br /></td></tr>
<tr class="separator:ae5af3dca6ce9aa3ab366220034220359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a899571657a22f26128c31b35588c8fb8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a899571657a22f26128c31b35588c8fb8">operator=</a> (const <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:a899571657a22f26128c31b35588c8fb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a899571657a22f26128c31b35588c8fb8">More...</a><br /></td></tr>
<tr class="separator:a899571657a22f26128c31b35588c8fb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41eee525702c5f60376edfddce144731"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a41eee525702c5f60376edfddce144731">NEWinogradLayerTransformInputKernel</a> (<a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a41eee525702c5f60376edfddce144731"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a41eee525702c5f60376edfddce144731">More...</a><br /></td></tr>
<tr class="separator:a41eee525702c5f60376edfddce144731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18abeb1ed663c61bbbdc32a0d3ecef7e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a18abeb1ed663c61bbbdc32a0d3ecef7e">operator=</a> (<a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a18abeb1ed663c61bbbdc32a0d3ecef7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a18abeb1ed663c61bbbdc32a0d3ecef7e">More...</a><br /></td></tr>
<tr class="separator:a18abeb1ed663c61bbbdc32a0d3ecef7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad80a063ffa5b335ec0ba83d3116e2e3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#aad80a063ffa5b335ec0ba83d3116e2e3">~NEWinogradLayerTransformInputKernel</a> ()=default</td></tr>
<tr class="memdesc:aad80a063ffa5b335ec0ba83d3116e2e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#aad80a063ffa5b335ec0ba83d3116e2e3">More...</a><br /></td></tr>
<tr class="separator:aad80a063ffa5b335ec0ba83d3116e2e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44ffbab5d0fe4ae10cbf84ddae1a90fe"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a44ffbab5d0fe4ae10cbf84ddae1a90fe">get_input_storage_size</a> (int num_batches, int num_channels, int num_rows, int num_cols, bool same_padding) const override</td></tr>
<tr class="memdesc:a44ffbab5d0fe4ae10cbf84ddae1a90fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine how much memory (in units of TIn) to allocate for the transformed input.  <a href="#a44ffbab5d0fe4ae10cbf84ddae1a90fe">More...</a><br /></td></tr>
<tr class="separator:a44ffbab5d0fe4ae10cbf84ddae1a90fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ccc8c221f26d7e2ed0b5cfbe4dc1b83"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">get_working_space_size</a> (unsigned int num_threads) const override</td></tr>
<tr class="memdesc:a8ccc8c221f26d7e2ed0b5cfbe4dc1b83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the working space required to perform the transformation.  <a href="#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">More...</a><br /></td></tr>
<tr class="separator:a8ccc8c221f26d7e2ed0b5cfbe4dc1b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae18e3efe8200578009c1f7a15a4a2fa0"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#ae18e3efe8200578009c1f7a15a4a2fa0">get_matrix_stride</a> (const KernelShape &amp;kernel_shape, const Tensor4DShape &amp;input_shape, const PaddingType padding_type) const override</td></tr>
<tr class="memdesc:ae18e3efe8200578009c1f7a15a4a2fa0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the stride between matrices in the input worspace.  <a href="#ae18e3efe8200578009c1f7a15a4a2fa0">More...</a><br /></td></tr>
<tr class="separator:ae18e3efe8200578009c1f7a15a4a2fa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a975ca7003dae590387fdf8546e1b08fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a975ca7003dae590387fdf8546e1b08fd">NEWinogradLayerTransformInputKernel</a> ()</td></tr>
<tr class="memdesc:a975ca7003dae590387fdf8546e1b08fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a975ca7003dae590387fdf8546e1b08fd">More...</a><br /></td></tr>
<tr class="separator:a975ca7003dae590387fdf8546e1b08fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5656bb5b6334bdbe6e606c715872828"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a> () const override</td></tr>
<tr class="memdesc:ab5656bb5b6334bdbe6e606c715872828"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the kernel.  <a href="#ab5656bb5b6334bdbe6e606c715872828">More...</a><br /></td></tr>
<tr class="separator:ab5656bb5b6334bdbe6e606c715872828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de2ab5ada4b5a360770b670af19b48d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a2de2ab5ada4b5a360770b670af19b48d">configure</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input_nhwc, const int num_batches, const int num_rows, const int num_cols, const int num_channels, const PaddingType padding, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, const int matrix_stride, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *workspace) override</td></tr>
<tr class="memdesc:a2de2ab5ada4b5a360770b670af19b48d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure the output transform kernel.  <a href="#a2de2ab5ada4b5a360770b670af19b48d">More...</a><br /></td></tr>
<tr class="separator:a2de2ab5ada4b5a360770b670af19b48d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a112b35dd205c62ea6ed1447ef226da82"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info) override</td></tr>
<tr class="memdesc:a112b35dd205c62ea6ed1447ef226da82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the kernel on the passed window.  <a href="#a112b35dd205c62ea6ed1447ef226da82">More...</a><br /></td></tr>
<tr class="separator:a112b35dd205c62ea6ed1447ef226da82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml">INEWinogradLayerTransformInputKernel&lt; T &gt;</a></td></tr>
<tr class="memitem:a57db7dcc6716d3a676a422bb2839036f inherit pub_methods_classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a57db7dcc6716d3a676a422bb2839036f">~INEWinogradLayerTransformInputKernel</a> ()</td></tr>
<tr class="memdesc:a57db7dcc6716d3a676a422bb2839036f inherit pub_methods_classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a57db7dcc6716d3a676a422bb2839036f">More...</a><br /></td></tr>
<tr class="separator:a57db7dcc6716d3a676a422bb2839036f inherit pub_methods_classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_p_p_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a></td></tr>
<tr class="memitem:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">~ICPPKernel</a> ()=default</td></tr>
<tr class="memdesc:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">More...</a><br /></td></tr>
<tr class="separator:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">is_parallelisable</a> () const</td></tr>
<tr class="memdesc:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">More...</a><br /></td></tr>
<tr class="separator:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a> () const</td></tr>
<tr class="memdesc:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">More...</a><br /></td></tr>
<tr class="separator:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> () const</td></tr>
<tr class="memdesc:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">More...</a><br /></td></tr>
<tr class="separator:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6d3d1d4d66f89908455bc5f05e259ce9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a6d3d1d4d66f89908455bc5f05e259ce9">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;winograd_info)</td></tr>
<tr class="memdesc:a6d3d1d4d66f89908455bc5f05e259ce9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>.  <a href="#a6d3d1d4d66f89908455bc5f05e259ce9">More...</a><br /></td></tr>
<tr class="separator:a6d3d1d4d66f89908455bc5f05e259ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, int OutputTileRows, int OutputTileCols, int KernelRows, int KernelCols&gt;<br />
class arm_compute::NEWinogradLayerTransformInputKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;</h3>

<p>NEON kernel to perform Winograd input transform. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00098">98</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml">NEWinogradConvolutionLayerKernel.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a1bc75fe67cfd09e90f240a935da92f54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bc75fe67cfd09e90f240a935da92f54">&#9670;&nbsp;</a></span>WinogradBase</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a1bc75fe67cfd09e90f240a935da92f54">WinogradBase</a> =  winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelRows, KernelCols, winograd::WinogradRoots::Integers&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Winograd base kernel. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00187">187</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml">NEWinogradConvolutionLayerKernel.h</a>.</p>

</div>
</div>
<a id="af17b2792d63e38a0eea385635191e836"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af17b2792d63e38a0eea385635191e836">&#9670;&nbsp;</a></span>WinogradConv</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#af17b2792d63e38a0eea385635191e836">WinogradConv</a> =  typename WinogradBase::template Convolution&lt;T, T&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Winograd convolution kernel. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00189">189</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml">NEWinogradConvolutionLayerKernel.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae5af3dca6ce9aa3ab366220034220359"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5af3dca6ce9aa3ab366220034220359">&#9670;&nbsp;</a></span>NEWinogradLayerTransformInputKernel() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a41eee525702c5f60376edfddce144731"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41eee525702c5f60376edfddce144731">&#9670;&nbsp;</a></span>NEWinogradLayerTransformInputKernel() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="aad80a063ffa5b335ec0ba83d3116e2e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad80a063ffa5b335ec0ba83d3116e2e3">&#9670;&nbsp;</a></span>~NEWinogradLayerTransformInputKernel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<a id="a975ca7003dae590387fdf8546e1b08fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a975ca7003dae590387fdf8546e1b08fd">&#9670;&nbsp;</a></span>NEWinogradLayerTransformInputKernel() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00347">347</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml">NEWinogradConvolutionLayerKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    : _transform(<span class="keyword">nullptr</span>), _input_nhwc(<span class="keyword">nullptr</span>), _num_batches(0), _num_rows(0), _num_cols(0), _num_channels(0), _padding(), _output(<span class="keyword">nullptr</span>), _matrix_stride(0), _padding_top(), _padding_left(),</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;      _padding_right(), _padding_bottom(), _workspace(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2de2ab5ada4b5a360770b670af19b48d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2de2ab5ada4b5a360770b670af19b48d">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>input_nhwc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>num_batches</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>num_rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>num_cols</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>num_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const PaddingType&#160;</td>
          <td class="paramname"><em>padding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>matrix_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>workspace</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configure the output transform kernel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input_nhwc</td><td>Input tensor. Data types supported: F32. Layout supported NHWC. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_batches</td><td>Number of batches in input tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_rows</td><td>Number of rows in input tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_cols</td><td>Number of columns in input tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_channels</td><td>Number of channels in input tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">padding</td><td>Padding type. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Base of output matrices. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">matrix_stride</td><td>Stride between output matrices. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">workspace</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> to be used as the working space during the computation. </td></tr>
  </table>
  </dd>
</dl>
<p>&lt; Padding to apply to the top of the image.</p>
<p>&lt; Padding to apply to the left of the image.</p>
<p>&lt; Padding to apply to the bottom of the image.</p>
<p>&lt; Padding to apply to the right of the image. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae7ca946df6f3f9ab2649e0e328a8cde2">INEWinogradLayerTransformInputKernel&lt; T &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00354">354</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml">NEWinogradConvolutionLayerKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;{</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    _input_nhwc    = input_nhwc;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    _num_batches   = num_batches;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    _num_rows      = num_rows;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    _num_cols      = num_cols;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    _num_channels  = num_channels;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    _padding       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a>;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    _output        = output;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    _matrix_stride = matrix_stride;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    _workspace     = workspace;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    _padding_top    = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> == PADDING_SAME) ? (KernelRows - 1) / 2 : 0;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    _padding_left   = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> == PADDING_SAME) ? (KernelCols - 1) / 2 : 0;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    _padding_bottom = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> == PADDING_SAME) ? <a class="code" href="utils_8hpp.xhtml#aa4508679e1d089c2bdcf000f72357683">iceildiv</a>(KernelRows - 1, 2) : 0;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    _padding_right  = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> == PADDING_SAME) ? <a class="code" href="utils_8hpp.xhtml#aa4508679e1d089c2bdcf000f72357683">iceildiv</a>(KernelCols - 1, 2) : 0;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    _transform = arm_compute::support::cpp14::make_unique&lt;InputTransform&gt;(</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                     KernelRows,</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                     KernelCols,</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                     num_batches,</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                     num_rows,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                     num_cols,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                     num_channels,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                     _padding_top,    </div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                     _padding_left,   </div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                     _padding_bottom, </div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                     _padding_right   </div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                 );</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    Window win;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keyword">auto</span>   win_last = _transform-&gt;get_window();</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    win.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, win_last, 1));</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    INEKernel::configure(win);</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;}</div><div class="ttc" id="utils_8hpp_xhtml_aa4508679e1d089c2bdcf000f72357683"><div class="ttname"><a href="utils_8hpp.xhtml#aa4508679e1d089c2bdcf000f72357683">iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00036">utils.hpp:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a735a025fce26c1ef147b54426df18181"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">arm_compute::test::validation::padding</a></div><div class="ttdeci">const PaddingSize padding</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00113">AbsoluteDifference.cpp:113</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00113">arm_compute::test::validation::padding</a>.</p>

</div>
</div>
<a id="a44ffbab5d0fe4ae10cbf84ddae1a90fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44ffbab5d0fe4ae10cbf84ddae1a90fe">&#9670;&nbsp;</a></span>get_input_storage_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_input_storage_size </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_batches</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_channels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_cols</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>same_padding</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Determine how much memory (in units of TIn) to allocate for the transformed input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_batches</td><td>Number of batches in the input tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_channels</td><td>Number of feature maps in the input tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_rows</td><td>Number of rows in each feature map. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_cols</td><td>Number of columns in each feature map. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">same_padding</td><td>Use "SAME" padding, otherwise use "VALID".</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Storage size (in units of TIn) required. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a1187b798595c88feeb65d15441a4f72f">INEWinogradLayerTransformInputKernel&lt; T &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00317">317</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml">NEWinogradConvolutionLayerKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;{</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="comment">// Construct shapes for the input and kernel tensors.</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keyword">const</span> Tensor4DShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a865514e30baa11b11c8fa65f944532fb">input_shape</a>(num_batches, num_rows, num_cols, num_channels);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keyword">const</span> KernelShape   kern_shape(1, KernelRows, KernelCols, num_channels);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keyword">const</span> PaddingType   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> = (same_padding) ? PADDING_SAME : PADDING_VALID;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="comment">// Return the size, converted into units of TIn</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">return</span> static_cast&lt;unsigned int&gt;(WinogradConv::get_input_storage_size(kern_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a865514e30baa11b11c8fa65f944532fb">input_shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a>) / <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a865514e30baa11b11c8fa65f944532fb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a865514e30baa11b11c8fa65f944532fb">arm_compute::test::validation::input_shape</a></div><div class="ttdeci">input_shape</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">ConvolutionLayer.cpp:174</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a735a025fce26c1ef147b54426df18181"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">arm_compute::test::validation::padding</a></div><div class="ttdeci">const PaddingSize padding</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00113">AbsoluteDifference.cpp:113</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">arm_compute::test::validation::input_shape</a>, and <a class="el" href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00113">arm_compute::test::validation::padding</a>.</p>

</div>
</div>
<a id="ae18e3efe8200578009c1f7a15a4a2fa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae18e3efe8200578009c1f7a15a4a2fa0">&#9670;&nbsp;</a></span>get_matrix_stride()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int get_matrix_stride </td>
          <td>(</td>
          <td class="paramtype">const KernelShape &amp;&#160;</td>
          <td class="paramname"><em>kernel_shape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Tensor4DShape &amp;&#160;</td>
          <td class="paramname"><em>input_shape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const PaddingType&#160;</td>
          <td class="paramname"><em>padding_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the stride between matrices in the input worspace. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_shape</td><td>The shape of the weights tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_shape</td><td>The shape of the input tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">padding_type</td><td>The type of padding to be used.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Stride expressed in bytes. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae25b6ed77179808984b17c39e078ad96">INEWinogradLayerTransformInputKernel&lt; T &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00340">340</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml">NEWinogradConvolutionLayerKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;{</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">return</span> WinogradConv::get_input_matrix_stride(kernel_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a865514e30baa11b11c8fa65f944532fb">input_shape</a>, padding_type);</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a865514e30baa11b11c8fa65f944532fb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a865514e30baa11b11c8fa65f944532fb">arm_compute::test::validation::input_shape</a></div><div class="ttdeci">input_shape</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">ConvolutionLayer.cpp:174</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">arm_compute::test::validation::input_shape</a>.</p>

</div>
</div>
<a id="a8ccc8c221f26d7e2ed0b5cfbe4dc1b83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">&#9670;&nbsp;</a></span>get_working_space_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_working_space_size </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num_threads</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the working space required to perform the transformation. </p>
<p>Note, the working space is only required when performing the transformation - hence it can be reused whenever the transformation is not running.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_threads</td><td>The greatest number of threads that will be used to execute the transform.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Size of working space required in bytes. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#adf88b409a140a439b6e5479da2f4cb1f">INEWinogradLayerTransformInputKernel&lt; T &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00334">334</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml">NEWinogradConvolutionLayerKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;{</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keywordflow">return</span> _transform-&gt;get_working_space_size(num_threads) / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab5656bb5b6334bdbe6e606c715872828"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5656bb5b6334bdbe6e606c715872828">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Name of the kernel. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> name </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a1a30ad8f276a2310571c36239554831a">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00155">155</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml">NEWinogradConvolutionLayerKernel.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEWinogradLayerTransformInputKernel&quot;</span>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a899571657a22f26128c31b35588c8fb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a899571657a22f26128c31b35588c8fb8">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a18abeb1ed663c61bbbdc32a0d3ecef7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18abeb1ed663c61bbbdc32a0d3ecef7e">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a112b35dd205c62ea6ed1447ef226da82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a112b35dd205c62ea6ed1447ef226da82">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Execute the kernel on the passed window. </p>
<dl class="section warning"><dt>Warning</dt><dd>If <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b" title="Indicates whether or not the kernel is parallelisable.">is_parallelisable()</a> returns false then the passed window must be equal to <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a></dd></dl>
<dl class="section note"><dt>Note</dt><dd>The window has to be a region within the window returned by the <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a> method</dd>
<dd>
The width of the window has to be a multiple of num_elems_processed_per_iteration().</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Region on which to execute the kernel. (Must be a region of the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a>) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>Info about executing thread and CPU. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00400">400</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml">NEWinogradConvolutionLayerKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;{</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_workspace);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  element_size_in_bytes = _input_nhwc-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>();</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  input_col_stride      = _input_nhwc-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">y</a>() / element_size_in_bytes;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  input_row_stride      = _input_nhwc-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#abb29a685080e999c2a0cb874d2f7bb5a">z</a>() / element_size_in_bytes;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  input_batch_stride    = _input_nhwc-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[3] / element_size_in_bytes;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_nhwc_ptr        = reinterpret_cast&lt;const T *&gt;(_input_nhwc-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>() + _input_nhwc-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ad0bd5cc32e7e4c0699eccba91e5de397">offset_first_element_in_bytes</a>());</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keyword">auto</span>       output_ptr            = reinterpret_cast&lt;T *&gt;(_output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>() + _output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ad0bd5cc32e7e4c0699eccba91e5de397">offset_first_element_in_bytes</a>());</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(output_ptr);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    _transform-&gt;set_input_tensor(input_nhwc_ptr, input_batch_stride, input_row_stride, input_col_stride);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    _transform-&gt;set_output_matrices(output_ptr, _matrix_stride, _num_channels);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    _transform-&gt;set_working_space(_workspace-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>());</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="comment">// The code below cannot be moved to configure because biases hasn&#39;t been allocated at that point</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> fst = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>();</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> lst = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>();</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    _transform-&gt;run(fst, lst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>.thread_id);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00160">Error.h:160</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_abb29a685080e999c2a0cb874d2f7bb5a"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#abb29a685080e999c2a0cb874d2f7bb5a">arm_compute::Dimensions::z</a></div><div class="ttdeci">T z() const</div><div class="ttdoc">Alias to access the size of the third dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00091">Dimensions.h:91</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_ab988210662dbd3bf32fd563c7dd1bdbf"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">arm_compute::ITensor::buffer</a></div><div class="ttdeci">virtual uint8_t * buffer() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels()</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ad0bd5cc32e7e4c0699eccba91e5de397"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ad0bd5cc32e7e4c0699eccba91e5de397">arm_compute::ITensorInfo::offset_first_element_in_bytes</a></div><div class="ttdeci">virtual size_t offset_first_element_in_bytes() const =0</div><div class="ttdoc">The offset from the beginning of the memory allocation to the first element of the tensor.</div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_ac4a1050be02b20b3f791b9a483f3abe2"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">arm_compute::Dimensions::y</a></div><div class="ttdeci">T y() const</div><div class="ttdoc">Alias to access the size of the second dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00086">Dimensions.h:86</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a6b14f175bf5281f57b561e2d4e4b1f1f"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">arm_compute::ITensorInfo::strides_in_bytes</a></div><div class="ttdeci">virtual const Strides &amp; strides_in_bytes() const =0</div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">ConvolutionLayer.cpp:174</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a0f590bfcf19110f44efc502e7b5c1d9e"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const</div><div class="ttdoc">Return the end of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00097">Window.h:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_ab24e31d1a4830bf79564ee902ec6c060"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const</div><div class="ttdoc">Return the start of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00092">Window.h:92</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00940">Validate.h:940</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00143">Window.h:143</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_validate_8h_source.xhtml#l00161">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_validate_8h_source.xhtml#l00940">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>, <a class="el" href="_error_8h_source.xhtml#l00160">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="validation_2_c_l_2_convolution_layer_8cpp_source.xhtml#l00174">arm_compute::test::validation::info</a>.</p>

</div>
</div>
<a id="a6d3d1d4d66f89908455bc5f05e259ce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d3d1d4d66f89908455bc5f05e259ce9">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>winograd_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>First tensor input info. Data types supported: F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td>Output tensor info. Data types supported: same as <code>input</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">winograd_info</td><td>Contains Winograd's information described in <a class="el" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00426">426</a> of file <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml">NEWinogradConvolutionLayerKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;{</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_winograd_input_trans(input, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>));</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window_winograd_input_trans(input-&gt;clone().get(), output-&gt;clone().get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>).first);</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00193">Error.h:193</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a809d18ccde99d938a68cb90ef53aa749"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">arm_compute::test::validation::winograd_info</a></div><div class="ttdeci">winograd_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00330">Winograd.cpp:330</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00193">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>, and <a class="el" href="_c_l_2_winograd_8cpp_source.xhtml#l00330">arm_compute::test::validation::winograd_info</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/NEON/kernels/<a class="el" href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml">NEWinogradConvolutionLayerKernel.h</a></li>
<li>src/core/NEON/kernels/<a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml">NEWinogradConvolutionLayerKernel.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
