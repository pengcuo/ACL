<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/GLES_COMPUTE/GCKernelLibrary.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_g_c_kernel_library_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GCKernelLibrary.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_g_c_kernel_library_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_GCKERNELLIBRARY_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_GCKERNELLIBRARY_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_g_l_e_s_8h.xhtml">arm_compute/core/GLES_COMPUTE/OpenGLES.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_program.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">GCProgram</a>();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">GCProgram</a>(std::string <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, std::string source);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">GCProgram</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">GCProgram</a>(<a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_program.xhtml#a4212dc2dbdd340faeba056d37cb912de">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_program.xhtml#a4212dc2dbdd340faeba056d37cb912de">operator=</a>(<a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_program.xhtml#a1d89c28bd42ba9a52da008bb69367171">   62</a></span>&#160;    std::string <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> _name;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    GLuint <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#a5b4af3fb9839027279876a231a328ec9">link_program</a>(GLuint shader);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    GLuint <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#acab405c2120743ab9e063930064a6b0a">compile_shader</a>(<span class="keyword">const</span> std::string &amp;build_options);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    std::string _name;   </div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::string _source; </div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;};</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml">   87</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">GCKernel</a>();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">GCKernel</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">GCKernel</a>(<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#af29ae815590ed07fc2ce2dc3f77a23a7">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#af29ae815590ed07fc2ce2dc3f77a23a7">operator=</a>(<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">GCKernel</a>(std::string <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, GLuint program);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a1b2e4d932f06eda71c000133bd277688">~GCKernel</a>();</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#a1d89c28bd42ba9a52da008bb69367171">  113</a></span>&#160;    std::string <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">return</span> _name;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#af88e933209c9201dfdafa052d3181aac">  121</a></span>&#160;    GLuint <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#af88e933209c9201dfdafa052d3181aac">get_program</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> _program;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a8a05de24712939691a7cf8934d9e5c5f">use</a>();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#ae02bc07b18ddc44c29318c100a063d3a">unuse</a>();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#ad5cfd50c152f0aa984f53bb034d1461b">  141</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#ad5cfd50c152f0aa984f53bb034d1461b">set_argument</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx, T value)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">if</span>(idx &gt;= _shader_arguments.size())</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            _shader_arguments.resize(idx + 1, 0);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *p        = reinterpret_cast&lt;unsigned int *&gt;(&amp;value);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        _shader_arguments[idx] = *p;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#a2ff24cc62df8324f57dcc2f3c9e533a9">  154</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a2ff24cc62df8324f57dcc2f3c9e533a9">clear_arguments</a>()</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        _shader_arguments.clear();</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#ae722344eb4eb8a404d600561914859ab">  162</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#ae722344eb4eb8a404d600561914859ab">set_shader_params_binding_point</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> binding)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        _shader_params_binding_point = binding;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a7c2752de95fae1daedbae97fa9b031e4">update_shader_params</a>();</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a4b66d5e31b5dc18b314c8a68163263bd">cleanup</a>();</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    std::string                  _name;                                 </div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    GLuint                       _program;                              </div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    std::vector&lt;unsigned int&gt;    _shader_arguments;                     </div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    GLuint                       _shader_params_ubo_name;               </div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    GLuint                       _shader_params_binding_point;          </div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    GLuint                       _shader_params_index;                  </div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    GLint                        _shader_params_size;                   </div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">static</span> constexpr <span class="keyword">const</span> <span class="keywordtype">char</span> *_shader_params_name = <span class="stringliteral">&quot;shader_params&quot;</span>; </div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;};</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml">  187</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;{</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keyword">using</span> StringSet = std::set&lt;std::string&gt;;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a>();</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    ~<a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a>();</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a10dbce17f04221f2d1fcd3c0a91b4d69">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a677e1b4dae70aaa7a18e9a8f1a4692e8">get</a>();</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#abe24625d55f2fb35da7e293e5e28d483">  212</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#abe24625d55f2fb35da7e293e5e28d483">init</a>(std::string shader_path = <span class="stringliteral">&quot;./&quot;</span>, EGLDisplay dpy = EGL_NO_DISPLAY, EGLContext ctx = EGL_NO_CONTEXT)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="comment">//TODO: deal with old display and context.</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        _shader_path = std::move(shader_path);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        _display = dpy;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        _context = ctx;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <a class="code" href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a>(_display, EGL_NO_SURFACE, EGL_NO_SURFACE, _context);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">setup_dummy_fbo</a>();</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a1d39c8fd9605c241b797dcbd9d3cc474">  228</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a1d39c8fd9605c241b797dcbd9d3cc474">set_shader_path</a>(<span class="keyword">const</span> std::string &amp;shader_path)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        _shader_path = shader_path;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    };</div><div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#adad9a34e26a1a1b6574057981a1f7bb3">  237</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#adad9a34e26a1a1b6574057981a1f7bb3">set_context</a>(EGLDisplay dpy, EGLContext ctx)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment">//TODO: deal with old display and context.</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        _display = dpy;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        _context = ctx;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <a class="code" href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a>(dpy, EGL_NO_SURFACE, EGL_NO_SURFACE, ctx);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">setup_dummy_fbo</a>();</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    };</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a622a42cbd9eefe938d3bf87869f0b6be">create_kernel</a>(<span class="keyword">const</span> std::string &amp;shader_name, <span class="keyword">const</span> StringSet &amp;build_options_set = {}) <span class="keyword">const</span>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a7c0b2aa80e920344936e8e7dbaa73e43">save_binary</a>();</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a389a543ae040ca6bf6b57fd6215f154b">load_binary</a>();</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">setup_dummy_fbo</a>();</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    std::string preprocess_shader(<span class="keyword">const</span> std::string &amp;shader_source) <span class="keyword">const</span>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keyword">const</span> GCProgram &amp;load_program(<span class="keyword">const</span> std::string &amp;program_name) <span class="keyword">const</span>;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    std::string stringify_set(<span class="keyword">const</span> StringSet &amp;s) <span class="keyword">const</span>;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    EGLDisplay  _display;                                                </div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    EGLContext  _context;                                                </div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    GLuint      _frame_buffer;                                           </div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    GLuint      _tex_rt;                                                 </div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    std::string _shader_path;                                            </div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keyword">mutable</span> std::map&lt;std::string, const GCProgram&gt;  _programs_map;       </div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keyword">mutable</span> std::map&lt;std::string, const GCKernel&gt;   _built_programs_map; </div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::map&lt;std::string, std::string&gt; _shader_program_map; </div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::map&lt;std::string, std::string&gt; _program_source_map; </div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;};</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_GCKERNELLIBRARY_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a1b2e4d932f06eda71c000133bd277688"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a1b2e4d932f06eda71c000133bd277688">arm_compute::GCKernel::~GCKernel</a></div><div class="ttdeci">~GCKernel()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00137">GCKernelLibrary.cpp:137</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml_aca45a2e24e9ad0a4ebaf2964589a6934"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">arm_compute::GCProgram::GCProgram</a></div><div class="ttdeci">GCProgram()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00038">GCKernelLibrary.cpp:38</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_af6db9d046fe0e996c3693373864e6254"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglMakeCurrent(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00256">OpenGLES.cpp:256</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_adad9a34e26a1a1b6574057981a1f7bb3"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#adad9a34e26a1a1b6574057981a1f7bb3">arm_compute::GCKernelLibrary::set_context</a></div><div class="ttdeci">void set_context(EGLDisplay dpy, EGLContext ctx)</div><div class="ttdoc">Sets display and context to create kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00237">GCKernelLibrary.h:237</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml_acab405c2120743ab9e063930064a6b0a"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml#acab405c2120743ab9e063930064a6b0a">arm_compute::GCProgram::compile_shader</a></div><div class="ttdeci">GLuint compile_shader(const std::string &amp;build_options)</div><div class="ttdoc">Compile shader.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00079">GCKernelLibrary.cpp:79</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a1d89c28bd42ba9a52da008bb69367171"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a1d89c28bd42ba9a52da008bb69367171">arm_compute::GCKernel::name</a></div><div class="ttdeci">std::string name() const</div><div class="ttdoc">Returns kernel name.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00113">GCKernelLibrary.h:113</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a7c2752de95fae1daedbae97fa9b031e4"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a7c2752de95fae1daedbae97fa9b031e4">arm_compute::GCKernel::update_shader_params</a></div><div class="ttdeci">void update_shader_params()</div><div class="ttdoc">Update shader params.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00178">GCKernelLibrary.cpp:178</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml">arm_compute::GCKernel</a></div><div class="ttdoc">GCKernel class.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00087">GCKernelLibrary.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a8a05de24712939691a7cf8934d9e5c5f"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a8a05de24712939691a7cf8934d9e5c5f">arm_compute::GCKernel::use</a></div><div class="ttdeci">void use()</div><div class="ttdoc">Use current program.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00168">GCKernelLibrary.cpp:168</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml">arm_compute::GCProgram</a></div><div class="ttdoc">GCProgram class.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00039">GCKernelLibrary.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2018 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a10dbce17f04221f2d1fcd3c0a91b4d69"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a10dbce17f04221f2d1fcd3c0a91b4d69">arm_compute::GCKernelLibrary::operator=</a></div><div class="ttdeci">const GCKernelLibrary &amp; operator=(const GCKernelLibrary &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied.</div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_ae722344eb4eb8a404d600561914859ab"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#ae722344eb4eb8a404d600561914859ab">arm_compute::GCKernel::set_shader_params_binding_point</a></div><div class="ttdeci">void set_shader_params_binding_point(unsigned int binding)</div><div class="ttdoc">Set shader params binding point.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00162">GCKernelLibrary.h:162</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml_a1d89c28bd42ba9a52da008bb69367171"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml#a1d89c28bd42ba9a52da008bb69367171">arm_compute::GCProgram::name</a></div><div class="ttdeci">std::string name() const</div><div class="ttdoc">Returns program name.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00062">GCKernelLibrary.h:62</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a4b66d5e31b5dc18b314c8a68163263bd"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a4b66d5e31b5dc18b314c8a68163263bd">arm_compute::GCKernel::cleanup</a></div><div class="ttdeci">void cleanup()</div><div class="ttdoc">Clean up program and ubo.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00160">GCKernelLibrary.cpp:160</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a1d39c8fd9605c241b797dcbd9d3cc474"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a1d39c8fd9605c241b797dcbd9d3cc474">arm_compute::GCKernelLibrary::set_shader_path</a></div><div class="ttdeci">void set_shader_path(const std::string &amp;shader_path)</div><div class="ttdoc">Sets the path that the shaders reside in.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00228">GCKernelLibrary.h:228</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml_a5b4af3fb9839027279876a231a328ec9"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml#a5b4af3fb9839027279876a231a328ec9">arm_compute::GCProgram::link_program</a></div><div class="ttdeci">GLuint link_program(GLuint shader)</div><div class="ttdoc">Link program.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCKernelLibrary.cpp:48</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a374c8804afa3425411f78ec3b164f267"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">arm_compute::GCKernelLibrary::setup_dummy_fbo</a></div><div class="ttdeci">void setup_dummy_fbo()</div><div class="ttdoc">Setup a dummy fbo to workaround an issue on Galaxy S8.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00499">GCKernelLibrary.cpp:499</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a2ff24cc62df8324f57dcc2f3c9e533a9"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a2ff24cc62df8324f57dcc2f3c9e533a9">arm_compute::GCKernel::clear_arguments</a></div><div class="ttdeci">void clear_arguments()</div><div class="ttdoc">Clear shader arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00154">GCKernelLibrary.h:154</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8h_xhtml"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml">OpenGLES.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a677e1b4dae70aaa7a18e9a8f1a4692e8"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a677e1b4dae70aaa7a18e9a8f1a4692e8">arm_compute::GCKernelLibrary::get</a></div><div class="ttdeci">static GCKernelLibrary &amp; get()</div><div class="ttdoc">Get the static instance of GCKernelLibrary.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00334">GCKernelLibrary.cpp:334</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_abe24625d55f2fb35da7e293e5e28d483"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#abe24625d55f2fb35da7e293e5e28d483">arm_compute::GCKernelLibrary::init</a></div><div class="ttdeci">void init(std::string shader_path=&quot;./&quot;, EGLDisplay dpy=EGL_NO_DISPLAY, EGLContext ctx=EGL_NO_CONTEXT)</div><div class="ttdoc">Initialises the kernel library.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00212">GCKernelLibrary.h:212</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_af88e933209c9201dfdafa052d3181aac"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#af88e933209c9201dfdafa052d3181aac">arm_compute::GCKernel::get_program</a></div><div class="ttdeci">GLuint get_program() const</div><div class="ttdoc">Get program id.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00121">GCKernelLibrary.h:121</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a622a42cbd9eefe938d3bf87869f0b6be"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a622a42cbd9eefe938d3bf87869f0b6be">arm_compute::GCKernelLibrary::create_kernel</a></div><div class="ttdeci">GCKernel create_kernel(const std::string &amp;shader_name, const StringSet &amp;build_options_set={}) const</div><div class="ttdoc">Creates a kernel from the kernel library.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00340">GCKernelLibrary.cpp:340</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a389a543ae040ca6bf6b57fd6215f154b"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a389a543ae040ca6bf6b57fd6215f154b">arm_compute::GCKernelLibrary::load_binary</a></div><div class="ttdeci">void load_binary()</div><div class="ttdoc">Load serialized binary with all the programs.</div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml_a4212dc2dbdd340faeba056d37cb912de"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml#a4212dc2dbdd340faeba056d37cb912de">arm_compute::GCProgram::operator=</a></div><div class="ttdeci">GCProgram &amp; operator=(const GCProgram &amp;)=default</div><div class="ttdoc">Default copy assignment operator.</div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a4e7b1870ca694b9b2b6c4a0f50e1de3c"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">arm_compute::GCKernel::GCKernel</a></div><div class="ttdeci">GCKernel()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00131">GCKernelLibrary.cpp:131</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a7c0b2aa80e920344936e8e7dbaa73e43"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a7c0b2aa80e920344936e8e7dbaa73e43">arm_compute::GCKernelLibrary::save_binary</a></div><div class="ttdeci">void save_binary()</div><div class="ttdoc">Serializes and saves programs to a binary.</div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_af29ae815590ed07fc2ce2dc3f77a23a7"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#af29ae815590ed07fc2ce2dc3f77a23a7">arm_compute::GCKernel::operator=</a></div><div class="ttdeci">GCKernel &amp; operator=(const GCKernel &amp;)=default</div><div class="ttdoc">Default copy assignment operator.</div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_ae02bc07b18ddc44c29318c100a063d3a"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#ae02bc07b18ddc44c29318c100a063d3a">arm_compute::GCKernel::unuse</a></div><div class="ttdeci">void unuse()</div><div class="ttdoc">Unuse current program.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00173">GCKernelLibrary.cpp:173</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_ad5cfd50c152f0aa984f53bb034d1461b"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#ad5cfd50c152f0aa984f53bb034d1461b">arm_compute::GCKernel::set_argument</a></div><div class="ttdeci">void set_argument(unsigned int idx, T value)</div><div class="ttdoc">Set argument value at index of shader params.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00141">GCKernelLibrary.h:141</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml">arm_compute::GCKernelLibrary</a></div><div class="ttdoc">GCKernelLibrary class.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00187">GCKernelLibrary.h:187</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_541ebbb21ca179b54b469d645ff46bd9.xhtml">GLES_COMPUTE</a></li><li class="navelem"><a class="el" href="_g_c_kernel_library_8h.xhtml">GCKernelLibrary.h</a></li>
    <li class="footer">Generated on Mon Sep 2 2019 11:47:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
